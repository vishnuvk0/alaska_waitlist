"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/trackWaitlist/route";
exports.ids = ["app/api/trackWaitlist/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("puppeteer");

/***/ }),

/***/ "sqlite3":
/*!**************************!*\
  !*** external "sqlite3" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("sqlite3");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "node:assert":
/*!******************************!*\
  !*** external "node:assert" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:assert");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:buffer");

/***/ }),

/***/ "node:console":
/*!*******************************!*\
  !*** external "node:console" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("node:console");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:diagnostics_channel":
/*!*******************************************!*\
  !*** external "node:diagnostics_channel" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = require("node:diagnostics_channel");

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:events");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:http");

/***/ }),

/***/ "node:http2":
/*!*****************************!*\
  !*** external "node:http2" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("node:http2");

/***/ }),

/***/ "node:net":
/*!***************************!*\
  !*** external "node:net" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:net");

/***/ }),

/***/ "node:perf_hooks":
/*!**********************************!*\
  !*** external "node:perf_hooks" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:perf_hooks");

/***/ }),

/***/ "node:querystring":
/*!***********************************!*\
  !*** external "node:querystring" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:querystring");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:tls":
/*!***************************!*\
  !*** external "node:tls" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:tls");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:url");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "node:util/types":
/*!**********************************!*\
  !*** external "node:util/types" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:util/types");

/***/ }),

/***/ "node:worker_threads":
/*!**************************************!*\
  !*** external "node:worker_threads" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("node:worker_threads");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:zlib");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("string_decoder");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FtrackWaitlist%2Froute&page=%2Fapi%2FtrackWaitlist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FtrackWaitlist%2Froute.ts&appDir=%2FUsers%2Fviviku%2FDownloads%2Falaska_waitlist_api%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fviviku%2FDownloads%2Falaska_waitlist_api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FtrackWaitlist%2Froute&page=%2Fapi%2FtrackWaitlist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FtrackWaitlist%2Froute.ts&appDir=%2FUsers%2Fviviku%2FDownloads%2Falaska_waitlist_api%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fviviku%2FDownloads%2Falaska_waitlist_api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_viviku_Downloads_alaska_waitlist_api_app_api_trackWaitlist_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/trackWaitlist/route.ts */ \"(rsc)/./app/api/trackWaitlist/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Users_viviku_Downloads_alaska_waitlist_api_app_api_trackWaitlist_route_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_Users_viviku_Downloads_alaska_waitlist_api_app_api_trackWaitlist_route_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/trackWaitlist/route\",\n        pathname: \"/api/trackWaitlist\",\n        filename: \"route\",\n        bundlePath: \"app/api/trackWaitlist/route\"\n    },\n    resolvedPagePath: \"/Users/viviku/Downloads/alaska_waitlist_api/app/api/trackWaitlist/route.ts\",\n    nextConfigOutput,\n    userland: _Users_viviku_Downloads_alaska_waitlist_api_app_api_trackWaitlist_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/trackWaitlist/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0cmFja1dhaXRsaXN0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZ0cmFja1dhaXRsaXN0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGdHJhY2tXYWl0bGlzdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnZpdmlrdSUyRkRvd25sb2FkcyUyRmFsYXNrYV93YWl0bGlzdF9hcGklMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGdml2aWt1JTJGRG93bmxvYWRzJTJGYWxhc2thX3dhaXRsaXN0X2FwaSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMwQjtBQUN2RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SixxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2FsYXNrYS13YWl0bGlzdC1hcGkvPzNiMjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3ZpdmlrdS9Eb3dubG9hZHMvYWxhc2thX3dhaXRsaXN0X2FwaS9hcHAvYXBpL3RyYWNrV2FpdGxpc3Qvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3RyYWNrV2FpdGxpc3Qvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90cmFja1dhaXRsaXN0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS90cmFja1dhaXRsaXN0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3ZpdmlrdS9Eb3dubG9hZHMvYWxhc2thX3dhaXRsaXN0X2FwaS9hcHAvYXBpL3RyYWNrV2FpdGxpc3Qvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvdHJhY2tXYWl0bGlzdC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FtrackWaitlist%2Froute&page=%2Fapi%2FtrackWaitlist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FtrackWaitlist%2Froute.ts&appDir=%2FUsers%2Fviviku%2FDownloads%2Falaska_waitlist_api%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fviviku%2FDownloads%2Falaska_waitlist_api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/trackWaitlist/route.ts":
/*!****************************************!*\
  !*** ./app/api/trackWaitlist/route.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_waitlist__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/waitlist */ \"(rsc)/./app/lib/waitlist.ts\");\n/* harmony import */ var _lib_rate_limiter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/rate-limiter */ \"(rsc)/./app/lib/rate-limiter.ts\");\n/* harmony import */ var _lib_server_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/server-utils */ \"(rsc)/./app/lib/server-utils.ts\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./app/lib/db.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_waitlist__WEBPACK_IMPORTED_MODULE_1__, _lib_db__WEBPACK_IMPORTED_MODULE_4__]);\n([_lib_waitlist__WEBPACK_IMPORTED_MODULE_1__, _lib_db__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { flightNumber, flightDate, userName } = body;\n        if (!flightNumber || !flightDate || !userName) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Missing required fields.\"\n            }, {\n                status: 400\n            });\n        }\n        const flightKey = `${flightNumber}|${flightDate}`;\n        // Check rate limit\n        if (!_lib_rate_limiter__WEBPACK_IMPORTED_MODULE_2__.rateLimiter.canScrape(flightKey)) {\n            const waitTime = _lib_rate_limiter__WEBPACK_IMPORTED_MODULE_2__.rateLimiter.getTimeUntilNextScrape(flightKey);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Rate limit exceeded\",\n                waitTimeMs: waitTime,\n                message: `Please wait ${Math.ceil(waitTime / 1000)} seconds before trying again.`\n            }, {\n                status: 429\n            });\n        }\n        (0,_lib_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(`Processing waitlist request for flight ${flightNumber} on ${flightDate} for user ${userName}`);\n        const result = await (0,_lib_waitlist__WEBPACK_IMPORTED_MODULE_1__.trackWaitlist)(flightNumber, flightDate, userName);\n        // Log database state after successful tracking\n        await (0,_lib_server_utils__WEBPACK_IMPORTED_MODULE_3__.logDatabaseState)(_lib_db__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(result);\n    } catch (error) {\n        console.error(\"Error in trackWaitlist API:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: error.message || \"Internal server error\"\n        }, {\n            status: error.status || 500\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3RyYWNrV2FpdGxpc3Qvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTJDO0FBQ0k7QUFDRTtBQUNlO0FBQ3RDO0FBRW5CLGVBQWVNLEtBQUtDLE9BQWdCO0lBQ3pDLElBQUk7UUFDRixNQUFNQyxPQUFPLE1BQU1ELFFBQVFFLElBQUk7UUFDL0IsTUFBTSxFQUFFQyxZQUFZLEVBQUVDLFVBQVUsRUFBRUMsUUFBUSxFQUFFLEdBQUdKO1FBRS9DLElBQUksQ0FBQ0UsZ0JBQWdCLENBQUNDLGNBQWMsQ0FBQ0MsVUFBVTtZQUM3QyxPQUFPWixrRkFBWUEsQ0FBQ1MsSUFBSSxDQUN0QjtnQkFBRUksT0FBTztZQUEyQixHQUNwQztnQkFBRUMsUUFBUTtZQUFJO1FBRWxCO1FBRUEsTUFBTUMsWUFBWSxDQUFDLEVBQUVMLGFBQWEsQ0FBQyxFQUFFQyxXQUFXLENBQUM7UUFFakQsbUJBQW1CO1FBQ25CLElBQUksQ0FBQ1QsMERBQVdBLENBQUNjLFNBQVMsQ0FBQ0QsWUFBWTtZQUNyQyxNQUFNRSxXQUFXZiwwREFBV0EsQ0FBQ2dCLHNCQUFzQixDQUFDSDtZQUNwRCxPQUFPZixrRkFBWUEsQ0FBQ1MsSUFBSSxDQUFDO2dCQUN2QkksT0FBTztnQkFDUE0sWUFBWUY7Z0JBQ1pHLFNBQVMsQ0FBQyxZQUFZLEVBQUVDLEtBQUtDLElBQUksQ0FBQ0wsV0FBVyxNQUFNLDZCQUE2QixDQUFDO1lBQ25GLEdBQUc7Z0JBQUVILFFBQVE7WUFBSTtRQUNuQjtRQUVBWCwyREFBUUEsQ0FBQyxDQUFDLHVDQUF1QyxFQUFFTyxhQUFhLElBQUksRUFBRUMsV0FBVyxVQUFVLEVBQUVDLFNBQVMsQ0FBQztRQUN2RyxNQUFNVyxTQUFTLE1BQU10Qiw0REFBYUEsQ0FBQ1MsY0FBY0MsWUFBWUM7UUFFN0QsK0NBQStDO1FBQy9DLE1BQU1SLG1FQUFnQkEsQ0FBQ0MsK0NBQUVBO1FBRXpCLE9BQU9MLGtGQUFZQSxDQUFDUyxJQUFJLENBQUNjO0lBQzNCLEVBQUUsT0FBT1YsT0FBWTtRQUNuQlcsUUFBUVgsS0FBSyxDQUFDLCtCQUErQkE7UUFDN0MsT0FBT2Isa0ZBQVlBLENBQUNTLElBQUksQ0FDdEI7WUFBRUksT0FBT0EsTUFBTU8sT0FBTyxJQUFJO1FBQXdCLEdBQ2xEO1lBQUVOLFFBQVFELE1BQU1DLE1BQU0sSUFBSTtRQUFJO0lBRWxDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbGFza2Etd2FpdGxpc3QtYXBpLy4vYXBwL2FwaS90cmFja1dhaXRsaXN0L3JvdXRlLnRzPzUzM2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgdHJhY2tXYWl0bGlzdCB9IGZyb20gJ0AvbGliL3dhaXRsaXN0JztcbmltcG9ydCB7IHJhdGVMaW1pdGVyIH0gZnJvbSAnQC9saWIvcmF0ZS1saW1pdGVyJztcbmltcG9ydCB7IGRlYnVnTG9nLCBsb2dEYXRhYmFzZVN0YXRlIH0gZnJvbSAnQC9saWIvc2VydmVyLXV0aWxzJztcbmltcG9ydCBkYiBmcm9tICdAL2xpYi9kYic7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc3QgeyBmbGlnaHROdW1iZXIsIGZsaWdodERhdGUsIHVzZXJOYW1lIH0gPSBib2R5O1xuXG4gICAgaWYgKCFmbGlnaHROdW1iZXIgfHwgIWZsaWdodERhdGUgfHwgIXVzZXJOYW1lKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdNaXNzaW5nIHJlcXVpcmVkIGZpZWxkcy4nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBjb25zdCBmbGlnaHRLZXkgPSBgJHtmbGlnaHROdW1iZXJ9fCR7ZmxpZ2h0RGF0ZX1gO1xuICAgIFxuICAgIC8vIENoZWNrIHJhdGUgbGltaXRcbiAgICBpZiAoIXJhdGVMaW1pdGVyLmNhblNjcmFwZShmbGlnaHRLZXkpKSB7XG4gICAgICBjb25zdCB3YWl0VGltZSA9IHJhdGVMaW1pdGVyLmdldFRpbWVVbnRpbE5leHRTY3JhcGUoZmxpZ2h0S2V5KTtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IFxuICAgICAgICBlcnJvcjogJ1JhdGUgbGltaXQgZXhjZWVkZWQnLFxuICAgICAgICB3YWl0VGltZU1zOiB3YWl0VGltZSxcbiAgICAgICAgbWVzc2FnZTogYFBsZWFzZSB3YWl0ICR7TWF0aC5jZWlsKHdhaXRUaW1lIC8gMTAwMCl9IHNlY29uZHMgYmVmb3JlIHRyeWluZyBhZ2Fpbi5gXG4gICAgICB9LCB7IHN0YXR1czogNDI5IH0pO1xuICAgIH1cblxuICAgIGRlYnVnTG9nKGBQcm9jZXNzaW5nIHdhaXRsaXN0IHJlcXVlc3QgZm9yIGZsaWdodCAke2ZsaWdodE51bWJlcn0gb24gJHtmbGlnaHREYXRlfSBmb3IgdXNlciAke3VzZXJOYW1lfWApO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRyYWNrV2FpdGxpc3QoZmxpZ2h0TnVtYmVyLCBmbGlnaHREYXRlLCB1c2VyTmFtZSk7XG4gICAgXG4gICAgLy8gTG9nIGRhdGFiYXNlIHN0YXRlIGFmdGVyIHN1Y2Nlc3NmdWwgdHJhY2tpbmdcbiAgICBhd2FpdCBsb2dEYXRhYmFzZVN0YXRlKGRiKTtcbiAgICBcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24ocmVzdWx0KTtcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIHRyYWNrV2FpdGxpc3QgQVBJOicsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiBlcnJvci5tZXNzYWdlIHx8ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InIH0sXG4gICAgICB7IHN0YXR1czogZXJyb3Iuc3RhdHVzIHx8IDUwMCB9XG4gICAgKTtcbiAgfVxufSAiXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwidHJhY2tXYWl0bGlzdCIsInJhdGVMaW1pdGVyIiwiZGVidWdMb2ciLCJsb2dEYXRhYmFzZVN0YXRlIiwiZGIiLCJQT1NUIiwicmVxdWVzdCIsImJvZHkiLCJqc29uIiwiZmxpZ2h0TnVtYmVyIiwiZmxpZ2h0RGF0ZSIsInVzZXJOYW1lIiwiZXJyb3IiLCJzdGF0dXMiLCJmbGlnaHRLZXkiLCJjYW5TY3JhcGUiLCJ3YWl0VGltZSIsImdldFRpbWVVbnRpbE5leHRTY3JhcGUiLCJ3YWl0VGltZU1zIiwibWVzc2FnZSIsIk1hdGgiLCJjZWlsIiwicmVzdWx0IiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/trackWaitlist/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/browser-utils.ts":
/*!**********************************!*\
  !*** ./app/lib/browser-utils.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPage: () => (/* binding */ createPage),\n/* harmony export */   getBrowser: () => (/* binding */ getBrowser),\n/* harmony export */   handlePressAndHoldVerification: () => (/* binding */ handlePressAndHoldVerification),\n/* harmony export */   initBrowser: () => (/* binding */ initBrowser),\n/* harmony export */   needsVerification: () => (/* binding */ needsVerification)\n/* harmony export */ });\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! puppeteer */ \"puppeteer\");\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(puppeteer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _server_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./server-utils */ \"(rsc)/./app/lib/server-utils.ts\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nlet browserInstance = null;\nlet connectionRetries = 0;\nconst MAX_RETRIES = 3;\nconst WS_ENDPOINT_RETRIES = 3;\nfunction getRandomBrowserConfig() {\n    const screenWidth = 1920;\n    const screenHeight = 1080;\n    const osVersion = 10 + Math.floor(Math.random() * 3);\n    const chromeVersion = 110 + Math.floor(Math.random() * 10);\n    const userAgent = `Mozilla/5.0 (Macintosh; Intel Mac OS X ${osVersion}_${Math.floor(Math.random() * 9)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/${chromeVersion}.0.0.0 Safari/537.36`;\n    return {\n        viewport: {\n            width: screenWidth,\n            height: screenHeight\n        },\n        userAgent,\n        args: [\n            \"--no-sandbox\",\n            \"--disable-setuid-sandbox\",\n            \"--disable-web-security\",\n            \"--disable-features=IsolateOrigins\",\n            \"--disable-site-isolation-trials\",\n            \"--disable-features=BlockInsecurePrivateNetworkRequests\",\n            `--window-size=${screenWidth},${screenHeight}`,\n            \"--disable-dev-shm-usage\",\n            \"--disable-gpu\",\n            \"--no-first-run\",\n            \"--no-default-browser-check\",\n            \"--disable-infobars\",\n            \"--disable-notifications\",\n            `--user-agent=${userAgent}`,\n            \"--disable-extensions\",\n            \"--disable-component-extensions-with-background-pages\",\n            \"--disable-default-apps\",\n            \"--enable-features=NetworkService,NetworkServiceInProcess\",\n            \"--disable-background-timer-throttling\",\n            \"--disable-backgrounding-occluded-windows\",\n            \"--disable-breakpad\",\n            \"--disable-component-update\",\n            \"--disable-domain-reliability\",\n            \"--disable-sync\",\n            \"--force-color-profile=srgb\",\n            \"--metrics-recording-only\",\n            \"--disable-features=TranslateUI\",\n            \"--disable-renderer-backgrounding\",\n            \"--disable-background-networking\",\n            \"--disable-ipc-flooding-protection\",\n            \"--enable-automation\",\n            \"--password-store=basic\",\n            \"--use-mock-keychain\",\n            \"--disable-blink-features=AutomationControlled\"\n        ]\n    };\n}\nasync function initBrowser() {\n    try {\n        if (browserInstance) {\n            try {\n                await browserInstance.close();\n            } catch (e) {\n                (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Failed to close existing browser: \" + (e instanceof Error ? e.message : \"Unknown error\"));\n            }\n            browserInstance = null;\n        }\n        // Kill any existing Chrome processes that might interfere\n        if (process.platform === \"darwin\") {\n            await new Promise((resolve)=>{\n                (0,child_process__WEBPACK_IMPORTED_MODULE_2__.exec)('pkill -f \"(Google Chrome)\"', ()=>resolve());\n            });\n            await new Promise((r)=>setTimeout(r, 1000));\n        }\n        const config = getRandomBrowserConfig();\n        let wsEndpointRetries = WS_ENDPOINT_RETRIES;\n        let browser;\n        while(wsEndpointRetries > 0){\n            try {\n                const executablePath = process.platform === \"darwin\" ? \"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\" : undefined;\n                browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0___default().launch({\n                    headless: true,\n                    args: config.args,\n                    defaultViewport: config.viewport,\n                    executablePath,\n                    env: {\n                        ...process.env,\n                        DISPLAY: process.env.DISPLAY || \":0\"\n                    }\n                });\n                // Test the connection immediately\n                await new Promise((r)=>setTimeout(r, 1000));\n                const pages = await browser.pages();\n                if (pages.length === 0) {\n                    const testPage = await browser.newPage();\n                    await testPage.setUserAgent(config.userAgent);\n                    await testPage.evaluate(()=>navigator.userAgent);\n                    await testPage.close();\n                } else {\n                    await pages[0].setUserAgent(config.userAgent);\n                    await pages[0].evaluate(()=>navigator.userAgent);\n                }\n                // Set up disconnect handler\n                let reconnectTimeout;\n                browser.on(\"disconnected\", async ()=>{\n                    (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Browser disconnected, attempting to reconnect...\");\n                    if (browserInstance === browser) {\n                        try {\n                            const pages = await browser.pages().catch(()=>[]);\n                            await Promise.all(pages.map((page)=>page.close().catch(()=>{})));\n                            await browser.close().catch(()=>{});\n                        } catch (e) {\n                            (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Error cleaning up disconnected browser: \" + (e instanceof Error ? e.message : \"Unknown error\"));\n                        }\n                        browserInstance = null;\n                    }\n                    if (reconnectTimeout) clearTimeout(reconnectTimeout);\n                    reconnectTimeout = setTimeout(async ()=>{\n                        if (connectionRetries < MAX_RETRIES) {\n                            connectionRetries++;\n                            (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(`Reconnection attempt ${connectionRetries}/${MAX_RETRIES}`);\n                            try {\n                                browserInstance = await initBrowser();\n                                connectionRetries = 0;\n                            } catch (e) {\n                                (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Failed to reconnect: \" + (e instanceof Error ? e.message : \"Unknown error\"));\n                                if (process.platform === \"darwin\") {\n                                    (0,child_process__WEBPACK_IMPORTED_MODULE_2__.exec)('pkill -f \"(Google Chrome)\"');\n                                }\n                            }\n                        } else {\n                            (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Max reconnection attempts reached\");\n                            connectionRetries = 0;\n                        }\n                    }, 5000);\n                });\n                browserInstance = browser;\n                return browser;\n            } catch (e) {\n                (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(`Browser connection failed (attempt ${WS_ENDPOINT_RETRIES - wsEndpointRetries + 1}): ${e instanceof Error ? e.message : \"Unknown error\"}`);\n                if (browser) {\n                    try {\n                        const pages = await browser.pages().catch(()=>[]);\n                        await Promise.all(pages.map((page)=>page.close().catch(()=>{})));\n                        await browser.close().catch(()=>{});\n                    } catch (closeError) {\n                        (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Error closing browser: \" + (closeError instanceof Error ? closeError.message : \"Unknown error\"));\n                    }\n                }\n                wsEndpointRetries--;\n                if (wsEndpointRetries === 0) throw e;\n                const delay = Math.min(1000 * Math.pow(2, WS_ENDPOINT_RETRIES - wsEndpointRetries), 10000);\n                await new Promise((r)=>setTimeout(r, delay));\n            }\n        }\n        throw new Error(\"Failed to initialize browser after all retries\");\n    } catch (error) {\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Browser initialization error: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n        throw error;\n    }\n}\nasync function getBrowser() {\n    if (!browserInstance || !browserInstance.isConnected()) {\n        browserInstance = await initBrowser();\n    }\n    return browserInstance;\n}\nasync function createPage() {\n    const browser = await getBrowser();\n    const page = await browser.newPage();\n    // Set viewport and user agent\n    const config = getRandomBrowserConfig();\n    await page.setViewport(config.viewport);\n    await page.setUserAgent(config.userAgent);\n    // Set up error handling for the page\n    page.on(\"error\", (err)=>{\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Page error: \" + err.message);\n    });\n    page.on(\"pageerror\", (err)=>{\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Page error: \" + (err instanceof Error ? err.message : String(err)));\n    });\n    return page;\n}\nasync function needsVerification(page) {\n    try {\n        const verificationElement = await page.$(\"#px-captcha\");\n        return !!verificationElement;\n    } catch (error) {\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Error checking verification: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n        return false;\n    }\n}\nasync function handlePressAndHoldVerification(page, maxRetries = 2) {\n    let retries = 0;\n    while(retries < maxRetries){\n        try {\n            const verificationButton = await page.$(\"#px-captcha\");\n            if (!verificationButton) {\n                return false;\n            }\n            const boundingBox = await verificationButton.boundingBox();\n            if (!boundingBox) {\n                return false;\n            }\n            const x = boundingBox.x + boundingBox.width / 2;\n            const y = boundingBox.y + boundingBox.height / 2;\n            // Random mouse movement before clicking\n            const randomMove = ()=>{\n                const offsetX = Math.random() * 100 - 50;\n                const offsetY = Math.random() * 100 - 50;\n                return page.mouse.move(x + offsetX, y + offsetY);\n            };\n            await randomMove();\n            await new Promise((r)=>setTimeout(r, Math.random() * 500 + 200));\n            await randomMove();\n            await new Promise((r)=>setTimeout(r, Math.random() * 500 + 200));\n            await page.mouse.move(x, y);\n            await page.mouse.down();\n            await new Promise((resolve)=>setTimeout(resolve, 3000));\n            await page.mouse.up();\n            // Wait for verification to complete\n            await page.waitForFunction(()=>!document.querySelector(\"#px-captcha\"), {\n                timeout: 10000\n            });\n            return true;\n        } catch (error) {\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_1__.debugLog)(\"Error handling verification: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n            retries++;\n            if (retries === maxRetries) {\n                return false;\n            }\n            await new Promise((r)=>setTimeout(r, 1000));\n        }\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/browser-utils.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/db.ts":
/*!***********************!*\
  !*** ./app/lib/db.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sqlite3 */ \"sqlite3\");\n/* harmony import */ var sqlite3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sqlite3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sqlite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sqlite */ \"(rsc)/./node_modules/sqlite/build/index.mjs\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _server_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./server-utils */ \"(rsc)/./app/lib/server-utils.ts\");\n\n\n\n\nclass Database {\n    async initDb() {\n        try {\n            const dbPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"alaska_waitlist.db\");\n            this.db = await (0,sqlite__WEBPACK_IMPORTED_MODULE_1__.open)({\n                filename: dbPath,\n                driver: (sqlite3__WEBPACK_IMPORTED_MODULE_0___default().Database)\n            });\n            await this.createTables();\n            this.isDbAvailable = true;\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Database initialized successfully at: \" + dbPath);\n        } catch (error) {\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Database connection failed: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n            this.isDbAvailable = false;\n        }\n    }\n    async createTables() {\n        if (!this.db) return;\n        await this.db.exec(`\n      CREATE TABLE IF NOT EXISTS flights (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        flight_number TEXT NOT NULL,\n        flight_date TEXT NOT NULL,\n        origin TEXT NOT NULL,\n        destination TEXT NOT NULL,\n        departure_time TEXT,\n        arrival_time TEXT,\n        segment_index INTEGER NOT NULL,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        UNIQUE(flight_number, flight_date, segment_index)\n      );\n\n      CREATE TABLE IF NOT EXISTS waitlist_snapshots (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        flight_id INTEGER REFERENCES flights(id),\n        waitlist_names TEXT,\n        first_class_capacity INTEGER,\n        first_class_available INTEGER,\n        first_class_checked_in INTEGER,\n        snapshot_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      );\n    `);\n    }\n    async saveFlightSegment(segment, segmentIndex) {\n        if (!this.isDbAvailable || !this.db) return null;\n        try {\n            const result = await this.db.run(`\n        INSERT OR REPLACE INTO flights \n        (flight_number, flight_date, origin, destination, departure_time, arrival_time, segment_index)\n        VALUES (?, ?, ?, ?, ?, ?, ?)`, [\n                segment.flightNumber,\n                segment.date,\n                segment.origin,\n                segment.destination,\n                segment.departureTime,\n                segment.arrivalTime,\n                segmentIndex\n            ]);\n            return result.lastID || null;\n        } catch (error) {\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Error saving flight segment: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n            return null;\n        }\n    }\n    async saveWaitlistSnapshot(flightId, waitlistInfo) {\n        if (!this.isDbAvailable || !this.db || !flightId) return;\n        try {\n            await this.db.run(`\n        INSERT INTO waitlist_snapshots \n        (flight_id, waitlist_names, first_class_capacity, first_class_available, first_class_checked_in)\n        VALUES (?, ?, ?, ?, ?)`, [\n                flightId,\n                JSON.stringify(waitlistInfo.names),\n                waitlistInfo.capacity,\n                waitlistInfo.available,\n                waitlistInfo.checkedIn\n            ]);\n        } catch (error) {\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Error saving waitlist snapshot: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n        }\n    }\n    async getLatestWaitlistData(flightNumber, flightDate) {\n        if (!this.isDbAvailable || !this.db) return null;\n        try {\n            return await this.db.all(`\n        WITH LatestSnapshots AS (\n          SELECT \n            w.*,\n            f.flight_number,\n            f.flight_date,\n            f.origin,\n            f.destination,\n            f.departure_time,\n            f.arrival_time,\n            f.segment_index,\n            ROW_NUMBER() OVER (\n              PARTITION BY f.id \n              ORDER BY w.snapshot_time DESC\n            ) as rn\n          FROM flights f\n          LEFT JOIN waitlist_snapshots w ON f.id = w.flight_id\n          WHERE f.flight_number = ? AND f.flight_date = ?\n        )\n        SELECT * FROM LatestSnapshots \n        WHERE rn = 1\n        ORDER BY segment_index\n      `, [\n                flightNumber,\n                flightDate\n            ]);\n        } catch (error) {\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Error getting latest waitlist data: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n            return null;\n        }\n    }\n    async getAllData() {\n        if (!this.isDbAvailable || !this.db) return null;\n        try {\n            const flights = await this.db.all(`\n        SELECT * FROM flights \n        ORDER BY flight_date DESC, flight_number, segment_index\n      `);\n            const snapshots = await this.db.all(`\n        SELECT \n          w.*,\n          f.flight_number,\n          f.flight_date,\n          f.segment_index\n        FROM waitlist_snapshots w\n        JOIN flights f ON w.flight_id = f.id\n        ORDER BY w.snapshot_time DESC\n      `);\n            return {\n                flights,\n                snapshots\n            };\n        } catch (error) {\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Error getting all data: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n            return null;\n        }\n    }\n    constructor(){\n        this.db = null;\n        this.isDbAvailable = false;\n    }\n}\nconst db = new Database();\nawait db.initDb();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (db);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/flight-utils.ts":
/*!*********************************!*\
  !*** ./app/lib/flight-utils.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   isValidDate: () => (/* binding */ isValidDate),\n/* harmony export */   isValidFlightNumber: () => (/* binding */ isValidFlightNumber),\n/* harmony export */   parseFlightNumber: () => (/* binding */ parseFlightNumber),\n/* harmony export */   parseFlightSegments: () => (/* binding */ parseFlightSegments),\n/* harmony export */   parseWaitlistForSegment: () => (/* binding */ parseWaitlistForSegment),\n/* harmony export */   validateFlightInput: () => (/* binding */ validateFlightInput)\n/* harmony export */ });\n/* harmony import */ var _server_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./server-utils */ \"(rsc)/./app/lib/server-utils.ts\");\n\nfunction parseFlightSegments($) {\n    (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(\"\\n=== Parsing Flight Segments ===\");\n    const segments = [];\n    const mainRows = $(\".main-row-status\");\n    (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(`Found ${mainRows.length} main-row-status elements`);\n    mainRows.each((i, container)=>{\n        const $container = $(container);\n        const $flight = $container.find(\"auro-flight\");\n        if ($flight.length) {\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(`\\nAnalyzing flight element ${i + 1}:`);\n            // Get flight details from attributes\n            const flightNumber = $flight.attr(\"flights\")?.replace(\"AS \", \"\") || \"\";\n            const origin = $flight.attr(\"departurestation\") || \"Unknown\";\n            const destination = $flight.attr(\"arrivalstation\") || \"Unknown\";\n            const departureTime = $flight.attr(\"departuretime\")?.split(\" \")[1] || \"Unknown\";\n            const arrivalTime = $flight.attr(\"arrivaltime\")?.split(\" \")[1] || \"Unknown\";\n            // Get the date from the timestamp element\n            const date = $(\".timestamp\").first().text().trim();\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(\"Parsed flight details: \" + JSON.stringify({\n                flightNumber,\n                origin,\n                destination,\n                departureTime,\n                arrivalTime,\n                date\n            }));\n            if (flightNumber && date) {\n                const segment = {\n                    flightNumber,\n                    date,\n                    origin,\n                    destination,\n                    departureTime,\n                    arrivalTime\n                };\n                (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(`Created segment:\n          Flight: AS${segment.flightNumber}\n          Date: ${segment.date}\n          Route: ${segment.origin} → ${segment.destination}\n          Departure: ${segment.departureTime}\n          Arrival: ${segment.arrivalTime}`);\n                segments.push(segment);\n            } else {\n                (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(\"Skipping segment due to missing data: \" + JSON.stringify({\n                    flightNumber,\n                    date,\n                    origin,\n                    destination\n                }));\n            }\n        }\n    });\n    (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(`\\nTotal segments found: ${segments.length}`);\n    return segments;\n}\nfunction parseWaitlistForSegment($, segmentIndex) {\n    (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(`\\n=== Parsing Waitlist for Segment ${segmentIndex + 1} ===`);\n    // Get all accordions\n    const accordions = $(\".accordion-container-fs\");\n    (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(`Found ${accordions.length} accordion sections`);\n    const accordion = accordions.eq(segmentIndex);\n    if (!accordion.length) {\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(\"❌ No accordion found for this segment\");\n        return null;\n    }\n    // First try to find the specific upgrade requests container\n    const upgradeContainers = accordion.find(\".waitlist-single-container\").filter((_, container)=>{\n        return $(container).find(\"h4\").text().trim() === \"Upgrade requests\";\n    });\n    (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(`Found ${upgradeContainers.length} specific upgrade containers`);\n    const waitlistInfo = {\n        capacity: null,\n        available: null,\n        checkedIn: null,\n        names: []\n    };\n    if (upgradeContainers.length) {\n        const container = upgradeContainers.first();\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(\"\\nProcessing upgrade container...\");\n        // Parse capacity info\n        container.find(\".waitlist-text-container span\").each((_, span)=>{\n            const text = $(span).text().trim();\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(`Analyzing capacity text: \"${text}\"`);\n            if (text.includes(\"capacity\")) {\n                waitlistInfo.capacity = parseInt(text.match(/\\d+/)?.[0] || \"0\");\n            } else if (text.includes(\"Available\")) {\n                waitlistInfo.available = parseInt(text.match(/\\d+/)?.[0] || \"0\");\n            } else if (text.includes(\"Checked-in\")) {\n                waitlistInfo.checkedIn = parseInt(text.match(/\\d+/)?.[0] || \"0\");\n            }\n        });\n        // Parse names from the table\n        const rows = container.find(\"table.auro_table tbody tr\");\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(`Found ${rows.length} name rows in table`);\n        rows.each((_, row)=>{\n            const nameCell = $(row).find(\"td\").eq(1);\n            const name = nameCell.text().trim();\n            if (name && /^[A-Z]{2,3}\\/[A-Z]$/.test(name)) {\n                (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(`✓ Found valid name: ${name}`);\n                waitlistInfo.names.push(name);\n            }\n        });\n    }\n    (0,_server_utils__WEBPACK_IMPORTED_MODULE_0__.debugLog)(\"\\nFinal waitlist info: \" + JSON.stringify(waitlistInfo));\n    return waitlistInfo;\n}\nfunction parseFlightNumber(input) {\n    const match = input.match(/\\d+/);\n    return match ? match[0] : \"\";\n}\nfunction formatDate(date) {\n    return date.toISOString().split(\"T\")[0];\n}\nfunction isValidFlightNumber(flightNumber) {\n    return /^\\d{3,4}$/.test(flightNumber);\n}\nfunction isValidDate(date) {\n    const d = new Date(date);\n    return d instanceof Date && !isNaN(d.getTime());\n}\nfunction validateFlightInput(flightNumber, date) {\n    if (!flightNumber || !date) {\n        return \"Flight number and date are required\";\n    }\n    if (!isValidFlightNumber(flightNumber)) {\n        return \"Invalid flight number format\";\n    }\n    if (!isValidDate(date)) {\n        return \"Invalid date format\";\n    }\n    const inputDate = new Date(date);\n    const today = new Date();\n    const maxDate = new Date();\n    maxDate.setDate(today.getDate() + 330); // Alaska Airlines allows booking ~330 days in advance\n    if (inputDate < today) {\n        return \"Date cannot be in the past\";\n    }\n    if (inputDate > maxDate) {\n        return \"Date is too far in the future\";\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/flight-utils.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/rate-limiter.ts":
/*!*********************************!*\
  !*** ./app/lib/rate-limiter.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rateLimiter: () => (/* binding */ rateLimiter)\n/* harmony export */ });\n/**\n * Rate limiter to control scraping frequency\n * Uses a Map to track last scrape time for each flight\n */ class RateLimiter {\n    /**\n   * Check if enough time has passed since last scrape\n   * @param {string} flightKey - Unique identifier for the flight (e.g. \"AS123|2024-01-01\")\n   * @returns {boolean}\n   */ canScrape(flightKey) {\n        const now = Date.now();\n        const lastTime = this.lastScrapeTime.get(flightKey) || 0;\n        return now - lastTime >= this.intervalMs;\n    }\n    /**\n   * Get remaining time until next scrape is allowed\n   * @param {string} flightKey - Unique identifier for the flight\n   * @returns {number} Milliseconds until next scrape is allowed\n   */ getTimeUntilNextScrape(flightKey) {\n        const now = Date.now();\n        const lastTime = this.lastScrapeTime.get(flightKey) || 0;\n        const timePassed = now - lastTime;\n        return Math.max(0, this.intervalMs - timePassed);\n    }\n    /**\n   * Record a scrape attempt\n   * @param {string} flightKey - Unique identifier for the flight\n   */ recordScrape(flightKey) {\n        this.lastScrapeTime.set(flightKey, Date.now());\n    }\n    /**\n   * Clear rate limit for a specific flight\n   * @param {string} flightKey - Unique identifier for the flight\n   */ clearLimit(flightKey) {\n        this.lastScrapeTime.delete(flightKey);\n    }\n    constructor(){\n        this.lastScrapeTime = new Map();\n        this.intervalMs = 600000 // Default 10 minutes\n        ;\n    }\n}\n// Export singleton instance\nconst rateLimiter = new RateLimiter();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvbGliL3JhdGUtbGltaXRlci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7OztDQUdDLEdBQ0QsTUFBTUE7SUFJSjs7OztHQUlDLEdBQ0RDLFVBQVVDLFNBQWlCLEVBQVc7UUFDcEMsTUFBTUMsTUFBTUMsS0FBS0QsR0FBRztRQUNwQixNQUFNRSxXQUFXLElBQUksQ0FBQ0MsY0FBYyxDQUFDQyxHQUFHLENBQUNMLGNBQWM7UUFDdkQsT0FBTyxNQUFPRyxZQUFhLElBQUksQ0FBQ0csVUFBVTtJQUM1QztJQUVBOzs7O0dBSUMsR0FDREMsdUJBQXVCUCxTQUFpQixFQUFVO1FBQ2hELE1BQU1DLE1BQU1DLEtBQUtELEdBQUc7UUFDcEIsTUFBTUUsV0FBVyxJQUFJLENBQUNDLGNBQWMsQ0FBQ0MsR0FBRyxDQUFDTCxjQUFjO1FBQ3ZELE1BQU1RLGFBQWFQLE1BQU1FO1FBQ3pCLE9BQU9NLEtBQUtDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQ0osVUFBVSxHQUFHRTtJQUN2QztJQUVBOzs7R0FHQyxHQUNERyxhQUFhWCxTQUFpQixFQUFRO1FBQ3BDLElBQUksQ0FBQ0ksY0FBYyxDQUFDUSxHQUFHLENBQUNaLFdBQVdFLEtBQUtELEdBQUc7SUFDN0M7SUFFQTs7O0dBR0MsR0FDRFksV0FBV2IsU0FBaUIsRUFBUTtRQUNsQyxJQUFJLENBQUNJLGNBQWMsQ0FBQ1UsTUFBTSxDQUFDZDtJQUM3Qjs7YUF4Q1FJLGlCQUFzQyxJQUFJVzthQUNqQ1QsYUFBcUIsT0FBUSxxQkFBcUI7OztBQXdDckU7QUFFQSw0QkFBNEI7QUFDckIsTUFBTVUsY0FBYyxJQUFJbEIsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL2FsYXNrYS13YWl0bGlzdC1hcGkvLi9hcHAvbGliL3JhdGUtbGltaXRlci50cz83OGRhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmF0ZSBsaW1pdGVyIHRvIGNvbnRyb2wgc2NyYXBpbmcgZnJlcXVlbmN5XG4gKiBVc2VzIGEgTWFwIHRvIHRyYWNrIGxhc3Qgc2NyYXBlIHRpbWUgZm9yIGVhY2ggZmxpZ2h0XG4gKi9cbmNsYXNzIFJhdGVMaW1pdGVyIHtcbiAgcHJpdmF0ZSBsYXN0U2NyYXBlVGltZTogTWFwPHN0cmluZywgbnVtYmVyPiA9IG5ldyBNYXAoKTtcbiAgcHJpdmF0ZSByZWFkb25seSBpbnRlcnZhbE1zOiBudW1iZXIgPSA2MDAwMDA7IC8vIERlZmF1bHQgMTAgbWludXRlc1xuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBlbm91Z2ggdGltZSBoYXMgcGFzc2VkIHNpbmNlIGxhc3Qgc2NyYXBlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBmbGlnaHRLZXkgLSBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIGZsaWdodCAoZS5nLiBcIkFTMTIzfDIwMjQtMDEtMDFcIilcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBjYW5TY3JhcGUoZmxpZ2h0S2V5OiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IGxhc3RUaW1lID0gdGhpcy5sYXN0U2NyYXBlVGltZS5nZXQoZmxpZ2h0S2V5KSB8fCAwO1xuICAgIHJldHVybiAobm93IC0gbGFzdFRpbWUpID49IHRoaXMuaW50ZXJ2YWxNcztcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgcmVtYWluaW5nIHRpbWUgdW50aWwgbmV4dCBzY3JhcGUgaXMgYWxsb3dlZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gZmxpZ2h0S2V5IC0gVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBmbGlnaHRcbiAgICogQHJldHVybnMge251bWJlcn0gTWlsbGlzZWNvbmRzIHVudGlsIG5leHQgc2NyYXBlIGlzIGFsbG93ZWRcbiAgICovXG4gIGdldFRpbWVVbnRpbE5leHRTY3JhcGUoZmxpZ2h0S2V5OiBzdHJpbmcpOiBudW1iZXIge1xuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgY29uc3QgbGFzdFRpbWUgPSB0aGlzLmxhc3RTY3JhcGVUaW1lLmdldChmbGlnaHRLZXkpIHx8IDA7XG4gICAgY29uc3QgdGltZVBhc3NlZCA9IG5vdyAtIGxhc3RUaW1lO1xuICAgIHJldHVybiBNYXRoLm1heCgwLCB0aGlzLmludGVydmFsTXMgLSB0aW1lUGFzc2VkKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZWNvcmQgYSBzY3JhcGUgYXR0ZW1wdFxuICAgKiBAcGFyYW0ge3N0cmluZ30gZmxpZ2h0S2V5IC0gVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBmbGlnaHRcbiAgICovXG4gIHJlY29yZFNjcmFwZShmbGlnaHRLZXk6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMubGFzdFNjcmFwZVRpbWUuc2V0KGZsaWdodEtleSwgRGF0ZS5ub3coKSk7XG4gIH1cblxuICAvKipcbiAgICogQ2xlYXIgcmF0ZSBsaW1pdCBmb3IgYSBzcGVjaWZpYyBmbGlnaHRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGZsaWdodEtleSAtIFVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgZmxpZ2h0XG4gICAqL1xuICBjbGVhckxpbWl0KGZsaWdodEtleTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5sYXN0U2NyYXBlVGltZS5kZWxldGUoZmxpZ2h0S2V5KTtcbiAgfVxufVxuXG4vLyBFeHBvcnQgc2luZ2xldG9uIGluc3RhbmNlXG5leHBvcnQgY29uc3QgcmF0ZUxpbWl0ZXIgPSBuZXcgUmF0ZUxpbWl0ZXIoKTsgIl0sIm5hbWVzIjpbIlJhdGVMaW1pdGVyIiwiY2FuU2NyYXBlIiwiZmxpZ2h0S2V5Iiwibm93IiwiRGF0ZSIsImxhc3RUaW1lIiwibGFzdFNjcmFwZVRpbWUiLCJnZXQiLCJpbnRlcnZhbE1zIiwiZ2V0VGltZVVudGlsTmV4dFNjcmFwZSIsInRpbWVQYXNzZWQiLCJNYXRoIiwibWF4IiwicmVjb3JkU2NyYXBlIiwic2V0IiwiY2xlYXJMaW1pdCIsImRlbGV0ZSIsIk1hcCIsInJhdGVMaW1pdGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/rate-limiter.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/server-utils.ts":
/*!*********************************!*\
  !*** ./app/lib/server-utils.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debugLog: () => (/* binding */ debugLog),\n/* harmony export */   fetchWithTimeout: () => (/* binding */ fetchWithTimeout),\n/* harmony export */   logDatabaseState: () => (/* binding */ logDatabaseState)\n/* harmony export */ });\nasync function fetchWithTimeout(url, options = {}) {\n    const { timeout = 30000, ...fetchOptions } = options;\n    const controller = new AbortController();\n    const id = setTimeout(()=>controller.abort(), timeout);\n    try {\n        const response = await fetch(url, {\n            ...fetchOptions,\n            signal: controller.signal\n        });\n        clearTimeout(id);\n        return response;\n    } catch (error) {\n        clearTimeout(id);\n        throw error;\n    }\n}\nfunction debugLog(message, consoleOnly = false) {\n    const timestamp = new Date().toISOString();\n    const logMessage = `${timestamp}: ${message}`;\n    // Always log to console\n    console.log(logMessage);\n}\nasync function logDatabaseState(db) {\n    try {\n        debugLog(\"\\n=== Current Database State ===\");\n        if (!db.isDbAvailable) {\n            debugLog(\"Database is not available\");\n            return;\n        }\n        // Get all data from database\n        const data = await db.getAllData();\n        if (!data) {\n            debugLog(\"No data available from database\");\n            return;\n        }\n        // Log flights\n        debugLog(\"\\nFlights Table:\");\n        data.flights.forEach((flight)=>{\n            debugLog(`Flight AS${flight.flight_number} on ${flight.flight_date}:\n        Segment ${flight.segment_index + 1}\n        Route: ${flight.origin} → ${flight.destination}\n        Times: ${flight.departure_time} → ${flight.arrival_time}\n        Created: ${flight.created_at}`);\n        });\n        // Log snapshots\n        debugLog(\"\\nWaitlist Snapshots Table:\");\n        data.snapshots.forEach((snapshot)=>{\n            const names = JSON.parse(snapshot.waitlist_names || \"[]\");\n            debugLog(`Snapshot for AS${snapshot.flight_number} on ${snapshot.flight_date}:\n        Segment ${snapshot.segment_index + 1}\n        Names: ${names.join(\", \")}\n        First Class:\n          Capacity: ${snapshot.first_class_capacity ?? \"Unknown\"}\n          Available: ${snapshot.first_class_available ?? \"Unknown\"}\n          Checked In: ${snapshot.first_class_checked_in ?? \"Unknown\"}\n        Time: ${snapshot.snapshot_time}`);\n        });\n        debugLog(\"\\n=== End Database State ===\\n\");\n    } catch (error) {\n        debugLog(\"Error logging database state: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvbGliL3NlcnZlci11dGlscy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFNTyxlQUFlQSxpQkFBaUJDLEdBQVcsRUFBRUMsVUFBbUMsQ0FBQyxDQUFDO0lBQ3ZGLE1BQU0sRUFBRUMsVUFBVSxLQUFLLEVBQUUsR0FBR0MsY0FBYyxHQUFHRjtJQUU3QyxNQUFNRyxhQUFhLElBQUlDO0lBQ3ZCLE1BQU1DLEtBQUtDLFdBQVcsSUFBTUgsV0FBV0ksS0FBSyxJQUFJTjtJQUVoRCxJQUFJO1FBQ0YsTUFBTU8sV0FBVyxNQUFNQyxNQUFNVixLQUFLO1lBQ2hDLEdBQUdHLFlBQVk7WUFDZlEsUUFBUVAsV0FBV08sTUFBTTtRQUMzQjtRQUNBQyxhQUFhTjtRQUNiLE9BQU9HO0lBQ1QsRUFBRSxPQUFPSSxPQUFPO1FBQ2RELGFBQWFOO1FBQ2IsTUFBTU87SUFDUjtBQUNGO0FBRU8sU0FBU0MsU0FBU0MsT0FBZSxFQUFFQyxjQUFjLEtBQUs7SUFDM0QsTUFBTUMsWUFBWSxJQUFJQyxPQUFPQyxXQUFXO0lBQ3hDLE1BQU1DLGFBQWEsQ0FBQyxFQUFFSCxVQUFVLEVBQUUsRUFBRUYsUUFBUSxDQUFDO0lBRTdDLHdCQUF3QjtJQUN4Qk0sUUFBUUMsR0FBRyxDQUFDRjtBQUNkO0FBT08sZUFBZUcsaUJBQWlCQyxFQUFvQjtJQUN6RCxJQUFJO1FBQ0ZWLFNBQVM7UUFFVCxJQUFJLENBQUNVLEdBQUdDLGFBQWEsRUFBRTtZQUNyQlgsU0FBUztZQUNUO1FBQ0Y7UUFFQSw2QkFBNkI7UUFDN0IsTUFBTVksT0FBTyxNQUFNRixHQUFHRyxVQUFVO1FBQ2hDLElBQUksQ0FBQ0QsTUFBTTtZQUNUWixTQUFTO1lBQ1Q7UUFDRjtRQUVBLGNBQWM7UUFDZEEsU0FBUztRQUNUWSxLQUFLRSxPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsQ0FBQUE7WUFDbkJoQixTQUFTLENBQUMsU0FBUyxFQUFFZ0IsT0FBT0MsYUFBYSxDQUFDLElBQUksRUFBRUQsT0FBT0UsV0FBVyxDQUFDO2dCQUN6RCxFQUFFRixPQUFPRyxhQUFhLEdBQUcsRUFBRTtlQUM1QixFQUFFSCxPQUFPSSxNQUFNLENBQUMsR0FBRyxFQUFFSixPQUFPSyxXQUFXLENBQUM7ZUFDeEMsRUFBRUwsT0FBT00sY0FBYyxDQUFDLEdBQUcsRUFBRU4sT0FBT08sWUFBWSxDQUFDO2lCQUMvQyxFQUFFUCxPQUFPUSxVQUFVLENBQUMsQ0FBQztRQUNsQztRQUVBLGdCQUFnQjtRQUNoQnhCLFNBQVM7UUFDVFksS0FBS2EsU0FBUyxDQUFDVixPQUFPLENBQUNXLENBQUFBO1lBQ3JCLE1BQU1DLFFBQVFDLEtBQUtDLEtBQUssQ0FBQ0gsU0FBU0ksY0FBYyxJQUFJO1lBQ3BEOUIsU0FBUyxDQUFDLGVBQWUsRUFBRTBCLFNBQVNULGFBQWEsQ0FBQyxJQUFJLEVBQUVTLFNBQVNSLFdBQVcsQ0FBQztnQkFDbkUsRUFBRVEsU0FBU1AsYUFBYSxHQUFHLEVBQUU7ZUFDOUIsRUFBRVEsTUFBTUksSUFBSSxDQUFDLE1BQU07O29CQUVkLEVBQUVMLFNBQVNNLG9CQUFvQixJQUFJLFVBQVU7cUJBQzVDLEVBQUVOLFNBQVNPLHFCQUFxQixJQUFJLFVBQVU7c0JBQzdDLEVBQUVQLFNBQVNRLHNCQUFzQixJQUFJLFVBQVU7Y0FDdkQsRUFBRVIsU0FBU1MsYUFBYSxDQUFDLENBQUM7UUFDcEM7UUFFQW5DLFNBQVM7SUFDWCxFQUFFLE9BQU9ELE9BQU87UUFDZEMsU0FBUyxtQ0FBb0NELENBQUFBLGlCQUFpQnFDLFFBQVFyQyxNQUFNRSxPQUFPLEdBQUcsZUFBYztJQUN0RztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWxhc2thLXdhaXRsaXN0LWFwaS8uL2FwcC9saWIvc2VydmVyLXV0aWxzLnRzPzljOTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgRGF0YWJhc2UgZnJvbSAnLi9kYic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmV0Y2hXaXRoVGltZW91dE9wdGlvbnMgZXh0ZW5kcyBSZXF1ZXN0SW5pdCB7XG4gIHRpbWVvdXQ/OiBudW1iZXI7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFdpdGhUaW1lb3V0KHVybDogc3RyaW5nLCBvcHRpb25zOiBGZXRjaFdpdGhUaW1lb3V0T3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHsgdGltZW91dCA9IDMwMDAwLCAuLi5mZXRjaE9wdGlvbnMgfSA9IG9wdGlvbnM7XG4gIFxuICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICBjb25zdCBpZCA9IHNldFRpbWVvdXQoKCkgPT4gY29udHJvbGxlci5hYm9ydCgpLCB0aW1lb3V0KTtcbiAgXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcbiAgICAgIC4uLmZldGNoT3B0aW9ucyxcbiAgICAgIHNpZ25hbDogY29udHJvbGxlci5zaWduYWxcbiAgICB9KTtcbiAgICBjbGVhclRpbWVvdXQoaWQpO1xuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjbGVhclRpbWVvdXQoaWQpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWJ1Z0xvZyhtZXNzYWdlOiBzdHJpbmcsIGNvbnNvbGVPbmx5ID0gZmFsc2UpOiB2b2lkIHtcbiAgY29uc3QgdGltZXN0YW1wID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuICBjb25zdCBsb2dNZXNzYWdlID0gYCR7dGltZXN0YW1wfTogJHttZXNzYWdlfWA7XG4gIFxuICAvLyBBbHdheXMgbG9nIHRvIGNvbnNvbGVcbiAgY29uc29sZS5sb2cobG9nTWVzc2FnZSk7XG59XG5cbmludGVyZmFjZSBEYXRhYmFzZUluc3RhbmNlIHtcbiAgaXNEYkF2YWlsYWJsZTogYm9vbGVhbjtcbiAgZ2V0QWxsRGF0YSgpOiBQcm9taXNlPHsgZmxpZ2h0czogYW55W107IHNuYXBzaG90czogYW55W10gfSB8IG51bGw+O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9nRGF0YWJhc2VTdGF0ZShkYjogRGF0YWJhc2VJbnN0YW5jZSk6IFByb21pc2U8dm9pZD4ge1xuICB0cnkge1xuICAgIGRlYnVnTG9nKCdcXG49PT0gQ3VycmVudCBEYXRhYmFzZSBTdGF0ZSA9PT0nKTtcbiAgICBcbiAgICBpZiAoIWRiLmlzRGJBdmFpbGFibGUpIHtcbiAgICAgIGRlYnVnTG9nKCdEYXRhYmFzZSBpcyBub3QgYXZhaWxhYmxlJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gR2V0IGFsbCBkYXRhIGZyb20gZGF0YWJhc2VcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgZGIuZ2V0QWxsRGF0YSgpO1xuICAgIGlmICghZGF0YSkge1xuICAgICAgZGVidWdMb2coJ05vIGRhdGEgYXZhaWxhYmxlIGZyb20gZGF0YWJhc2UnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBMb2cgZmxpZ2h0c1xuICAgIGRlYnVnTG9nKCdcXG5GbGlnaHRzIFRhYmxlOicpO1xuICAgIGRhdGEuZmxpZ2h0cy5mb3JFYWNoKGZsaWdodCA9PiB7XG4gICAgICBkZWJ1Z0xvZyhgRmxpZ2h0IEFTJHtmbGlnaHQuZmxpZ2h0X251bWJlcn0gb24gJHtmbGlnaHQuZmxpZ2h0X2RhdGV9OlxuICAgICAgICBTZWdtZW50ICR7ZmxpZ2h0LnNlZ21lbnRfaW5kZXggKyAxfVxuICAgICAgICBSb3V0ZTogJHtmbGlnaHQub3JpZ2lufSDihpIgJHtmbGlnaHQuZGVzdGluYXRpb259XG4gICAgICAgIFRpbWVzOiAke2ZsaWdodC5kZXBhcnR1cmVfdGltZX0g4oaSICR7ZmxpZ2h0LmFycml2YWxfdGltZX1cbiAgICAgICAgQ3JlYXRlZDogJHtmbGlnaHQuY3JlYXRlZF9hdH1gKTtcbiAgICB9KTtcblxuICAgIC8vIExvZyBzbmFwc2hvdHNcbiAgICBkZWJ1Z0xvZygnXFxuV2FpdGxpc3QgU25hcHNob3RzIFRhYmxlOicpO1xuICAgIGRhdGEuc25hcHNob3RzLmZvckVhY2goc25hcHNob3QgPT4ge1xuICAgICAgY29uc3QgbmFtZXMgPSBKU09OLnBhcnNlKHNuYXBzaG90LndhaXRsaXN0X25hbWVzIHx8ICdbXScpO1xuICAgICAgZGVidWdMb2coYFNuYXBzaG90IGZvciBBUyR7c25hcHNob3QuZmxpZ2h0X251bWJlcn0gb24gJHtzbmFwc2hvdC5mbGlnaHRfZGF0ZX06XG4gICAgICAgIFNlZ21lbnQgJHtzbmFwc2hvdC5zZWdtZW50X2luZGV4ICsgMX1cbiAgICAgICAgTmFtZXM6ICR7bmFtZXMuam9pbignLCAnKX1cbiAgICAgICAgRmlyc3QgQ2xhc3M6XG4gICAgICAgICAgQ2FwYWNpdHk6ICR7c25hcHNob3QuZmlyc3RfY2xhc3NfY2FwYWNpdHkgPz8gJ1Vua25vd24nfVxuICAgICAgICAgIEF2YWlsYWJsZTogJHtzbmFwc2hvdC5maXJzdF9jbGFzc19hdmFpbGFibGUgPz8gJ1Vua25vd24nfVxuICAgICAgICAgIENoZWNrZWQgSW46ICR7c25hcHNob3QuZmlyc3RfY2xhc3NfY2hlY2tlZF9pbiA/PyAnVW5rbm93bid9XG4gICAgICAgIFRpbWU6ICR7c25hcHNob3Quc25hcHNob3RfdGltZX1gKTtcbiAgICB9KTtcbiAgICBcbiAgICBkZWJ1Z0xvZygnXFxuPT09IEVuZCBEYXRhYmFzZSBTdGF0ZSA9PT1cXG4nKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBkZWJ1Z0xvZygnRXJyb3IgbG9nZ2luZyBkYXRhYmFzZSBzdGF0ZTogJyArIChlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJykpO1xuICB9XG59ICJdLCJuYW1lcyI6WyJmZXRjaFdpdGhUaW1lb3V0IiwidXJsIiwib3B0aW9ucyIsInRpbWVvdXQiLCJmZXRjaE9wdGlvbnMiLCJjb250cm9sbGVyIiwiQWJvcnRDb250cm9sbGVyIiwiaWQiLCJzZXRUaW1lb3V0IiwiYWJvcnQiLCJyZXNwb25zZSIsImZldGNoIiwic2lnbmFsIiwiY2xlYXJUaW1lb3V0IiwiZXJyb3IiLCJkZWJ1Z0xvZyIsIm1lc3NhZ2UiLCJjb25zb2xlT25seSIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImxvZ01lc3NhZ2UiLCJjb25zb2xlIiwibG9nIiwibG9nRGF0YWJhc2VTdGF0ZSIsImRiIiwiaXNEYkF2YWlsYWJsZSIsImRhdGEiLCJnZXRBbGxEYXRhIiwiZmxpZ2h0cyIsImZvckVhY2giLCJmbGlnaHQiLCJmbGlnaHRfbnVtYmVyIiwiZmxpZ2h0X2RhdGUiLCJzZWdtZW50X2luZGV4Iiwib3JpZ2luIiwiZGVzdGluYXRpb24iLCJkZXBhcnR1cmVfdGltZSIsImFycml2YWxfdGltZSIsImNyZWF0ZWRfYXQiLCJzbmFwc2hvdHMiLCJzbmFwc2hvdCIsIm5hbWVzIiwiSlNPTiIsInBhcnNlIiwid2FpdGxpc3RfbmFtZXMiLCJqb2luIiwiZmlyc3RfY2xhc3NfY2FwYWNpdHkiLCJmaXJzdF9jbGFzc19hdmFpbGFibGUiLCJmaXJzdF9jbGFzc19jaGVja2VkX2luIiwic25hcHNob3RfdGltZSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/server-utils.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/waitlist.ts":
/*!*****************************!*\
  !*** ./app/lib/waitlist.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCachedWaitlist: () => (/* binding */ getCachedWaitlist),\n/* harmony export */   trackWaitlist: () => (/* binding */ trackWaitlist)\n/* harmony export */ });\n/* harmony import */ var _browser_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./browser-utils */ \"(rsc)/./app/lib/browser-utils.ts\");\n/* harmony import */ var _flight_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flight-utils */ \"(rsc)/./app/lib/flight-utils.ts\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./db */ \"(rsc)/./app/lib/db.ts\");\n/* harmony import */ var _server_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./server-utils */ \"(rsc)/./app/lib/server-utils.ts\");\n/* harmony import */ var cheerio__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cheerio */ \"(rsc)/./node_modules/cheerio/dist/esm/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_db__WEBPACK_IMPORTED_MODULE_2__]);\n_db__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nasync function getPageContent(page) {\n    try {\n        return await page.content();\n    } catch (error) {\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Error getting page content: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n        return \"\";\n    }\n}\nasync function trackWaitlist(flightNumber, flightDate, userName) {\n    let page;\n    try {\n        page = await (0,_browser_utils__WEBPACK_IMPORTED_MODULE_0__.createPage)();\n        const url = `https://www.alaskaair.com/status/${flightNumber}/${flightDate}`;\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(`Navigating to ${url}`);\n        await page.goto(url, {\n            waitUntil: \"networkidle0\",\n            timeout: 30000\n        });\n        if (await (0,_browser_utils__WEBPACK_IMPORTED_MODULE_0__.needsVerification)(page)) {\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Verification needed, attempting to handle...\");\n            const verificationSuccess = await (0,_browser_utils__WEBPACK_IMPORTED_MODULE_0__.handlePressAndHoldVerification)(page);\n            if (!verificationSuccess) {\n                throw new Error(\"Failed to complete verification\");\n            }\n            await page.waitForSelector(\".waitlist-text-container\", {\n                timeout: 2000\n            }).catch(()=>{});\n        }\n        const content = await getPageContent(page);\n        const $ = cheerio__WEBPACK_IMPORTED_MODULE_4__.load(content);\n        // Parse flight segments\n        const segments = (0,_flight_utils__WEBPACK_IMPORTED_MODULE_1__.parseFlightSegments)($);\n        if (!segments.length) {\n            throw new Error(\"No flight segments found\");\n        }\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(`Found ${segments.length} flight segments`);\n        // Process each segment\n        const processedSegments = [];\n        for(let i = 0; i < segments.length; i++){\n            const segment = segments[i];\n            (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(`Processing segment ${i + 1}: ${segment.flightNumber} from ${segment.origin} to ${segment.destination}`);\n            // Get waitlist info for this segment\n            const waitlistInfo = (0,_flight_utils__WEBPACK_IMPORTED_MODULE_1__.parseWaitlistForSegment)($, i);\n            // Save to database\n            const flightId = await _db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].saveFlightSegment(segment, i);\n            if (flightId && waitlistInfo) {\n                await _db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].saveWaitlistSnapshot(flightId, waitlistInfo);\n            }\n            // Calculate position and total\n            const nameIndex = waitlistInfo?.names.findIndex((name)=>name === userName) ?? -1;\n            const position = nameIndex !== -1 ? nameIndex + 1 : null;\n            const totalWaitlisted = waitlistInfo?.names.length ?? null;\n            processedSegments.push({\n                ...segment,\n                position,\n                totalWaitlisted\n            });\n        }\n        return {\n            segments: processedSegments\n        };\n    } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Error tracking waitlist: \" + errorMessage);\n        return {\n            segments: [\n                {\n                    flightNumber,\n                    date: flightDate,\n                    origin: \"Unknown\",\n                    destination: \"Unknown\",\n                    departureTime: \"Unknown\",\n                    arrivalTime: \"Unknown\",\n                    position: null,\n                    totalWaitlisted: null,\n                    error: errorMessage\n                }\n            ],\n            error: errorMessage\n        };\n    } finally{\n        if (page) {\n            await page.close().catch((error)=>{\n                (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Error closing page: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n            });\n        }\n    }\n}\nasync function getCachedWaitlist(flightNumber, flightDate) {\n    if (!flightNumber || !flightDate) {\n        throw new Error(\"Missing required fields.\");\n    }\n    try {\n        return await _db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getLatestWaitlistData(flightNumber, flightDate);\n    } catch (error) {\n        (0,_server_utils__WEBPACK_IMPORTED_MODULE_3__.debugLog)(\"Error getting cached waitlist: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n        throw error;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/waitlist.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/undici","vendor-chunks/iconv-lite","vendor-chunks/cheerio","vendor-chunks/parse5","vendor-chunks/css-select","vendor-chunks/entities","vendor-chunks/domutils","vendor-chunks/sqlite","vendor-chunks/whatwg-mimetype","vendor-chunks/nth-check","vendor-chunks/htmlparser2","vendor-chunks/cheerio-select","vendor-chunks/whatwg-encoding","vendor-chunks/encoding-sniffer","vendor-chunks/domhandler","vendor-chunks/dom-serializer","vendor-chunks/css-what","vendor-chunks/parse5-parser-stream","vendor-chunks/parse5-htmlparser2-tree-adapter","vendor-chunks/domelementtype","vendor-chunks/safer-buffer","vendor-chunks/boolbase"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FtrackWaitlist%2Froute&page=%2Fapi%2FtrackWaitlist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FtrackWaitlist%2Froute.ts&appDir=%2FUsers%2Fviviku%2FDownloads%2Falaska_waitlist_api%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fviviku%2FDownloads%2Falaska_waitlist_api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();