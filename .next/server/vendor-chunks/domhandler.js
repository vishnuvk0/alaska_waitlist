"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/domhandler";
exports.ids = ["vendor-chunks/domhandler"];
exports.modules = {

/***/ "(rsc)/./node_modules/domhandler/lib/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/domhandler/lib/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CDATA: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.CDATA),\n/* harmony export */   Comment: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.Comment),\n/* harmony export */   DataNode: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.DataNode),\n/* harmony export */   Document: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.Document),\n/* harmony export */   DomHandler: () => (/* binding */ DomHandler),\n/* harmony export */   Element: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.Element),\n/* harmony export */   Node: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.Node),\n/* harmony export */   NodeWithChildren: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.NodeWithChildren),\n/* harmony export */   ProcessingInstruction: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.ProcessingInstruction),\n/* harmony export */   Text: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.Text),\n/* harmony export */   cloneNode: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.cloneNode),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   hasChildren: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.hasChildren),\n/* harmony export */   isCDATA: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.isCDATA),\n/* harmony export */   isComment: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.isComment),\n/* harmony export */   isDirective: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.isDirective),\n/* harmony export */   isDocument: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.isDocument),\n/* harmony export */   isTag: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.isTag),\n/* harmony export */   isText: () => (/* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_1__.isText)\n/* harmony export */ });\n/* harmony import */ var domelementtype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! domelementtype */ \"(rsc)/./node_modules/domelementtype/lib/esm/index.js\");\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node.js */ \"(rsc)/./node_modules/domhandler/lib/esm/node.js\");\n\n\n\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false\n};\nclass DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */ constructor(callback, options, elementCB){\n        /** The elements of the DOM */ this.dom = [];\n        /** The root element for the DOM */ this.root = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Document(this.dom);\n        /** Indicated whether parsing has been completed. */ this.done = false;\n        /** Stack of open tags. */ this.tagStack = [\n            this.root\n        ];\n        /** A data node that is still being written to. */ this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */ this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Document(this.dom);\n        this.done = false;\n        this.tagStack = [\n            this.root\n        ];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done) return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB) this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Tag : undefined;\n        const element = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        } else {\n            const node = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Text(\"\");\n        const node = new _node_js__WEBPACK_IMPORTED_MODULE_1__.CDATA([\n            text\n        ]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new _node_js__WEBPACK_IMPORTED_MODULE_1__.ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        } else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DomHandler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/domhandler/lib/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/domhandler/lib/esm/node.js":
/*!*************************************************!*\
  !*** ./node_modules/domhandler/lib/esm/node.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CDATA: () => (/* binding */ CDATA),\n/* harmony export */   Comment: () => (/* binding */ Comment),\n/* harmony export */   DataNode: () => (/* binding */ DataNode),\n/* harmony export */   Document: () => (/* binding */ Document),\n/* harmony export */   Element: () => (/* binding */ Element),\n/* harmony export */   Node: () => (/* binding */ Node),\n/* harmony export */   NodeWithChildren: () => (/* binding */ NodeWithChildren),\n/* harmony export */   ProcessingInstruction: () => (/* binding */ ProcessingInstruction),\n/* harmony export */   Text: () => (/* binding */ Text),\n/* harmony export */   cloneNode: () => (/* binding */ cloneNode),\n/* harmony export */   hasChildren: () => (/* binding */ hasChildren),\n/* harmony export */   isCDATA: () => (/* binding */ isCDATA),\n/* harmony export */   isComment: () => (/* binding */ isComment),\n/* harmony export */   isDirective: () => (/* binding */ isDirective),\n/* harmony export */   isDocument: () => (/* binding */ isDocument),\n/* harmony export */   isTag: () => (/* binding */ isTag),\n/* harmony export */   isText: () => (/* binding */ isText)\n/* harmony export */ });\n/* harmony import */ var domelementtype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! domelementtype */ \"(rsc)/./node_modules/domelementtype/lib/esm/index.js\");\n\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */ class Node {\n    constructor(){\n        /** Parent of the node */ this.parent = null;\n        /** Previous sibling */ this.prev = null;\n        /** Next sibling */ this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */ this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */ this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */ cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */ class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */ constructor(data){\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */ class Text extends DataNode {\n    constructor(){\n        super(...arguments);\n        this.type = domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */ class Comment extends DataNode {\n    constructor(){\n        super(...arguments);\n        this.type = domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */ class ProcessingInstruction extends DataNode {\n    constructor(name, data){\n        super(data);\n        this.name = name;\n        this.type = domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */ class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */ constructor(children){\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */ get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */ get lastChild() {\n        return this.children.length > 0 ? this.children[this.children.length - 1] : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nclass CDATA extends NodeWithChildren {\n    constructor(){\n        super(...arguments);\n        this.type = domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */ class Document extends NodeWithChildren {\n    constructor(){\n        super(...arguments);\n        this.type = domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */ class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */ constructor(name, attribs, children = [], type = name === \"script\" ? domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Script : name === \"style\" ? domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Style : domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Tag){\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name)=>{\n            var _a, _b;\n            return {\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name]\n            };\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */ function isTag(node) {\n    return (0,domelementtype__WEBPACK_IMPORTED_MODULE_0__.isTag)(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */ function isCDATA(node) {\n    return node.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */ function isText(node) {\n    return node.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */ function isComment(node) {\n    return node.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */ function isDirective(node) {\n    return node.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */ function isDocument(node) {\n    return node.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */ function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */ function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    } else if (isComment(node)) {\n        result = new Comment(node.data);\n    } else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, {\n            ...node.attribs\n        }, children);\n        children.forEach((child)=>child.parent = clone);\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = {\n                ...node[\"x-attribsNamespace\"]\n            };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = {\n                ...node[\"x-attribsPrefix\"]\n            };\n        }\n        result = clone;\n    } else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child)=>child.parent = clone);\n        result = clone;\n    } else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child)=>child.parent = clone);\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    } else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    } else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child)=>cloneNode(child, true));\n    for(let i = 1; i < children.length; i++){\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZG9taGFuZGxlci9saWIvZXNtL25vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdFO0FBQ2hFOzs7Q0FHQyxHQUNNLE1BQU1HO0lBQ1RDLGFBQWM7UUFDVix1QkFBdUIsR0FDdkIsSUFBSSxDQUFDQyxNQUFNLEdBQUc7UUFDZCxxQkFBcUIsR0FDckIsSUFBSSxDQUFDQyxJQUFJLEdBQUc7UUFDWixpQkFBaUIsR0FDakIsSUFBSSxDQUFDQyxJQUFJLEdBQUc7UUFDWix5RkFBeUYsR0FDekYsSUFBSSxDQUFDQyxVQUFVLEdBQUc7UUFDbEIscUZBQXFGLEdBQ3JGLElBQUksQ0FBQ0MsUUFBUSxHQUFHO0lBQ3BCO0lBQ0Esb0NBQW9DO0lBQ3BDOzs7S0FHQyxHQUNELElBQUlDLGFBQWE7UUFDYixPQUFPLElBQUksQ0FBQ0wsTUFBTTtJQUN0QjtJQUNBLElBQUlLLFdBQVdMLE1BQU0sRUFBRTtRQUNuQixJQUFJLENBQUNBLE1BQU0sR0FBR0E7SUFDbEI7SUFDQTs7O0tBR0MsR0FDRCxJQUFJTSxrQkFBa0I7UUFDbEIsT0FBTyxJQUFJLENBQUNMLElBQUk7SUFDcEI7SUFDQSxJQUFJSyxnQkFBZ0JMLElBQUksRUFBRTtRQUN0QixJQUFJLENBQUNBLElBQUksR0FBR0E7SUFDaEI7SUFDQTs7O0tBR0MsR0FDRCxJQUFJTSxjQUFjO1FBQ2QsT0FBTyxJQUFJLENBQUNMLElBQUk7SUFDcEI7SUFDQSxJQUFJSyxZQUFZTCxJQUFJLEVBQUU7UUFDbEIsSUFBSSxDQUFDQSxJQUFJLEdBQUdBO0lBQ2hCO0lBQ0E7Ozs7O0tBS0MsR0FDRE0sVUFBVUMsWUFBWSxLQUFLLEVBQUU7UUFDekIsT0FBT0QsVUFBVSxJQUFJLEVBQUVDO0lBQzNCO0FBQ0o7QUFDQTs7Q0FFQyxHQUNNLE1BQU1DLGlCQUFpQlo7SUFDMUI7O0tBRUMsR0FDREMsWUFBWVksSUFBSSxDQUFFO1FBQ2QsS0FBSztRQUNMLElBQUksQ0FBQ0EsSUFB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QixJQUFJLE1BQU07UUFDakNQLE9BQU9PLGtCQUFrQixHQUFHakIsS0FBS2lCLGtCQUFrQjtJQUN2RDtJQUNBLE9BQU9QO0FBQ1g7QUFDQSxTQUFTQyxjQUFjTyxNQUFNO0lBQ3pCLE1BQU16QyxXQUFXeUMsT0FBT3ZCLEdBQUcsQ0FBQyxDQUFDbUIsUUFBVW5ELFVBQVVtRCxPQUFPO0lBQ3hELElBQUssSUFBSUssSUFBSSxHQUFHQSxJQUFJMUMsU0FBU0ksTUFBTSxFQUFFc0MsSUFBSztRQUN0QzFDLFFBQVEsQ0FBQzBDLEVBQUUsQ0FBQy9ELElBQUksR0FBR3FCLFFBQVEsQ0FBQzBDLElBQUksRUFBRTtRQUNsQzFDLFFBQVEsQ0FBQzBDLElBQUksRUFBRSxDQUFDOUQsSUFBSSxHQUFHb0IsUUFBUSxDQUFDMEMsRUFBRTtJQUN0QztJQUNBLE9BQU8xQztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWxhc2thLXdhaXRsaXN0LWFwaS8uL25vZGVfbW9kdWxlcy9kb21oYW5kbGVyL2xpYi9lc20vbm9kZS5qcz8yNmRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRUeXBlLCBpc1RhZyBhcyBpc1RhZ1JhdyB9IGZyb20gXCJkb21lbGVtZW50dHlwZVwiO1xuLyoqXG4gKiBUaGlzIG9iamVjdCB3aWxsIGJlIHVzZWQgYXMgdGhlIHByb3RvdHlwZSBmb3IgTm9kZXMgd2hlbiBjcmVhdGluZyBhXG4gKiBET00tTGV2ZWwtMS1jb21wbGlhbnQgc3RydWN0dXJlLlxuICovXG5leHBvcnQgY2xhc3MgTm9kZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8qKiBQYXJlbnQgb2YgdGhlIG5vZGUgKi9cbiAgICAgICAgdGhpcy5wYXJlbnQgPSBudWxsO1xuICAgICAgICAvKiogUHJldmlvdXMgc2libGluZyAqL1xuICAgICAgICB0aGlzLnByZXYgPSBudWxsO1xuICAgICAgICAvKiogTmV4dCBzaWJsaW5nICovXG4gICAgICAgIHRoaXMubmV4dCA9IG51bGw7XG4gICAgICAgIC8qKiBUaGUgc3RhcnQgaW5kZXggb2YgdGhlIG5vZGUuIFJlcXVpcmVzIGB3aXRoU3RhcnRJbmRpY2VzYCBvbiB0aGUgaGFuZGxlciB0byBiZSBgdHJ1ZS4gKi9cbiAgICAgICAgdGhpcy5zdGFydEluZGV4ID0gbnVsbDtcbiAgICAgICAgLyoqIFRoZSBlbmQgaW5kZXggb2YgdGhlIG5vZGUuIFJlcXVpcmVzIGB3aXRoRW5kSW5kaWNlc2Agb24gdGhlIGhhbmRsZXIgdG8gYmUgYHRydWUuICovXG4gICAgICAgIHRoaXMuZW5kSW5kZXggPSBudWxsO1xuICAgIH1cbiAgICAvLyBSZWFkLXdyaXRlIGFsaWFzZXMgZm9yIHByb3BlcnRpZXNcbiAgICAvKipcbiAgICAgKiBTYW1lIGFzIHtAbGluayBwYXJlbnR9LlxuICAgICAqIFtET00gc3BlY10oaHR0cHM6Ly9kb20uc3BlYy53aGF0d2cub3JnKS1jb21wYXRpYmxlIGFsaWFzLlxuICAgICAqL1xuICAgIGdldCBwYXJlbnROb2RlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnQ7XG4gICAgfVxuICAgIHNldCBwYXJlbnROb2RlKHBhcmVudCkge1xuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2FtZSBhcyB7QGxpbmsgcHJldn0uXG4gICAgICogW0RPTSBzcGVjXShodHRwczovL2RvbS5zcGVjLndoYXR3Zy5vcmcpLWNvbXBhdGlibGUgYWxpYXMuXG4gICAgICovXG4gICAgZ2V0IHByZXZpb3VzU2libGluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJldjtcbiAgICB9XG4gICAgc2V0IHByZXZpb3VzU2libGluZyhwcmV2KSB7XG4gICAgICAgIHRoaXMucHJldiA9IHByZXY7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNhbWUgYXMge0BsaW5rIG5leHR9LlxuICAgICAqIFtET00gc3BlY10oaHR0cHM6Ly9kb20uc3BlYy53aGF0d2cub3JnKS1jb21wYXRpYmxlIGFsaWFzLlxuICAgICAqL1xuICAgIGdldCBuZXh0U2libGluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmV4dDtcbiAgICB9XG4gICAgc2V0IG5leHRTaWJsaW5nKG5leHQpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gbmV4dDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xvbmUgdGhpcyBub2RlLCBhbmQgb3B0aW9uYWxseSBpdHMgY2hpbGRyZW4uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcmVjdXJzaXZlIENsb25lIGNoaWxkIG5vZGVzIGFzIHdlbGwuXG4gICAgICogQHJldHVybnMgQSBjbG9uZSBvZiB0aGUgbm9kZS5cbiAgICAgKi9cbiAgICBjbG9uZU5vZGUocmVjdXJzaXZlID0gZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuIGNsb25lTm9kZSh0aGlzLCByZWN1cnNpdmUpO1xuICAgIH1cbn1cbi8qKlxuICogQSBub2RlIHRoYXQgY29udGFpbnMgc29tZSBkYXRhLlxuICovXG5leHBvcnQgY2xhc3MgRGF0YU5vZGUgZXh0ZW5kcyBOb2RlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gZGF0YSBUaGUgY29udGVudCBvZiB0aGUgZGF0YSBub2RlXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTYW1lIGFzIHtAbGluayBkYXRhfS5cbiAgICAgKiBbRE9NIHNwZWNdKGh0dHBzOi8vZG9tLnNwZWMud2hhdHdnLm9yZyktY29tcGF0aWJsZSBhbGlhcy5cbiAgICAgKi9cbiAgICBnZXQgbm9kZVZhbHVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhO1xuICAgIH1cbiAgICBzZXQgbm9kZVZhbHVlKGRhdGEpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB9XG59XG4vKipcbiAqIFRleHQgd2l0aGluIHRoZSBkb2N1bWVudC5cbiAqL1xuZXhwb3J0IGNsYXNzIFRleHQgZXh0ZW5kcyBEYXRhTm9kZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMudHlwZSA9IEVsZW1lbnRUeXBlLlRleHQ7XG4gICAgfVxuICAgIGdldCBub2RlVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIDM7XG4gICAgfVxufVxuLyoqXG4gKiBDb21tZW50cyB3aXRoaW4gdGhlIGRvY3VtZW50LlxuICovXG5leHBvcnQgY2xhc3MgQ29tbWVudCBleHRlbmRzIERhdGFOb2RlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy50eXBlID0gRWxlbWVudFR5cGUuQ29tbWVudDtcbiAgICB9XG4gICAgZ2V0IG5vZGVUeXBlKCkge1xuICAgICAgICByZXR1cm4gODtcbiAgICB9XG59XG4vKipcbiAqIFByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb25zLCBpbmNsdWRpbmcgZG9jIHR5cGVzLlxuICovXG5leHBvcnQgY2xhc3MgUHJvY2Vzc2luZ0luc3RydWN0aW9uIGV4dGVuZHMgRGF0YU5vZGUge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGRhdGEpIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMudHlwZSA9IEVsZW1lbnRUeXBlLkRpcmVjdGl2ZTtcbiAgICB9XG4gICAgZ2V0IG5vZGVUeXBlKCkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG59XG4vKipcbiAqIEEgYE5vZGVgIHRoYXQgY2FuIGhhdmUgY2hpbGRyZW4uXG4gKi9cbmV4cG9ydCBjbGFzcyBOb2RlV2l0aENoaWxkcmVuIGV4dGVuZHMgTm9kZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGNoaWxkcmVuIENoaWxkcmVuIG9mIHRoZSBub2RlLiBPbmx5IGNlcnRhaW4gbm9kZSB0eXBlcyBjYW4gaGF2ZSBjaGlsZHJlbi5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGlsZHJlbikge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmNoaWxkcmVuID0gY2hpbGRyZW47XG4gICAgfVxuICAgIC8vIEFsaWFzZXNcbiAgICAvKiogRmlyc3QgY2hpbGQgb2YgdGhlIG5vZGUuICovXG4gICAgZ2V0IGZpcnN0Q2hpbGQoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuY2hpbGRyZW5bMF0pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG51bGw7XG4gICAgfVxuICAgIC8qKiBMYXN0IGNoaWxkIG9mIHRoZSBub2RlLiAqL1xuICAgIGdldCBsYXN0Q2hpbGQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoaWxkcmVuLmxlbmd0aCA+IDBcbiAgICAgICAgICAgID8gdGhpcy5jaGlsZHJlblt0aGlzLmNoaWxkcmVuLmxlbmd0aCAtIDFdXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNhbWUgYXMge0BsaW5rIGNoaWxkcmVufS5cbiAgICAgKiBbRE9NIHNwZWNdKGh0dHBzOi8vZG9tLnNwZWMud2hhdHdnLm9yZyktY29tcGF0aWJsZSBhbGlhcy5cbiAgICAgKi9cbiAgICBnZXQgY2hpbGROb2RlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hpbGRyZW47XG4gICAgfVxuICAgIHNldCBjaGlsZE5vZGVzKGNoaWxkcmVuKSB7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4gPSBjaGlsZHJlbjtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQ0RBVEEgZXh0ZW5kcyBOb2RlV2l0aENoaWxkcmVuIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy50eXBlID0gRWxlbWVudFR5cGUuQ0RBVEE7XG4gICAgfVxuICAgIGdldCBub2RlVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIDQ7XG4gICAgfVxufVxuLyoqXG4gKiBUaGUgcm9vdCBub2RlIG9mIHRoZSBkb2N1bWVudC5cbiAqL1xuZXhwb3J0IGNsYXNzIERvY3VtZW50IGV4dGVuZHMgTm9kZVdpdGhDaGlsZHJlbiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMudHlwZSA9IEVsZW1lbnRUeXBlLlJvb3Q7XG4gICAgfVxuICAgIGdldCBub2RlVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIDk7XG4gICAgfVxufVxuLyoqXG4gKiBBbiBlbGVtZW50IHdpdGhpbiB0aGUgRE9NLlxuICovXG5leHBvcnQgY2xhc3MgRWxlbWVudCBleHRlbmRzIE5vZGVXaXRoQ2hpbGRyZW4ge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBuYW1lIE5hbWUgb2YgdGhlIHRhZywgZWcuIGBkaXZgLCBgc3BhbmAuXG4gICAgICogQHBhcmFtIGF0dHJpYnMgT2JqZWN0IG1hcHBpbmcgYXR0cmlidXRlIG5hbWVzIHRvIGF0dHJpYnV0ZSB2YWx1ZXMuXG4gICAgICogQHBhcmFtIGNoaWxkcmVuIENoaWxkcmVuIG9mIHRoZSBub2RlLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGF0dHJpYnMsIGNoaWxkcmVuID0gW10sIHR5cGUgPSBuYW1lID09PSBcInNjcmlwdFwiXG4gICAgICAgID8gRWxlbWVudFR5cGUuU2NyaXB0XG4gICAgICAgIDogbmFtZSA9PT0gXCJzdHlsZVwiXG4gICAgICAgICAgICA/IEVsZW1lbnRUeXBlLlN0eWxlXG4gICAgICAgICAgICA6IEVsZW1lbnRUeXBlLlRhZykge1xuICAgICAgICBzdXBlcihjaGlsZHJlbik7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuYXR0cmlicyA9IGF0dHJpYnM7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgfVxuICAgIGdldCBub2RlVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIC8vIERPTSBMZXZlbCAxIGFsaWFzZXNcbiAgICAvKipcbiAgICAgKiBTYW1lIGFzIHtAbGluayBuYW1lfS5cbiAgICAgKiBbRE9NIHNwZWNdKGh0dHBzOi8vZG9tLnNwZWMud2hhdHdnLm9yZyktY29tcGF0aWJsZSBhbGlhcy5cbiAgICAgKi9cbiAgICBnZXQgdGFnTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmFtZTtcbiAgICB9XG4gICAgc2V0IHRhZ05hbWUobmFtZSkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIH1cbiAgICBnZXQgYXR0cmlidXRlcygpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuYXR0cmlicykubWFwKChuYW1lKSA9PiB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgcmV0dXJuICh7XG4gICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5hdHRyaWJzW25hbWVdLFxuICAgICAgICAgICAgICAgIG5hbWVzcGFjZTogKF9hID0gdGhpc1tcIngtYXR0cmlic05hbWVzcGFjZVwiXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW25hbWVdLFxuICAgICAgICAgICAgICAgIHByZWZpeDogKF9iID0gdGhpc1tcIngtYXR0cmlic1ByZWZpeFwiXSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iW25hbWVdLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBpcyBhIGBFbGVtZW50YCwgYGZhbHNlYCBvdGhlcndpc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1RhZyhub2RlKSB7XG4gICAgcmV0dXJuIGlzVGFnUmF3KG5vZGUpO1xufVxuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGhhcyB0aGUgdHlwZSBgQ0RBVEFgLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ0RBVEEobm9kZSkge1xuICAgIHJldHVybiBub2RlLnR5cGUgPT09IEVsZW1lbnRUeXBlLkNEQVRBO1xufVxuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGhhcyB0aGUgdHlwZSBgVGV4dGAsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNUZXh0KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBFbGVtZW50VHlwZS5UZXh0O1xufVxuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGhhcyB0aGUgdHlwZSBgQ29tbWVudGAsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNDb21tZW50KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBFbGVtZW50VHlwZS5Db21tZW50O1xufVxuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGhhcyB0aGUgdHlwZSBgUHJvY2Vzc2luZ0luc3RydWN0aW9uYCwgYGZhbHNlYCBvdGhlcndpc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0RpcmVjdGl2ZShub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUudHlwZSA9PT0gRWxlbWVudFR5cGUuRGlyZWN0aXZlO1xufVxuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGhhcyB0aGUgdHlwZSBgUHJvY2Vzc2luZ0luc3RydWN0aW9uYCwgYGZhbHNlYCBvdGhlcndpc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0RvY3VtZW50KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBFbGVtZW50VHlwZS5Sb290O1xufVxuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGhhcyBjaGlsZHJlbiwgYGZhbHNlYCBvdGhlcndpc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXNDaGlsZHJlbihub2RlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChub2RlLCBcImNoaWxkcmVuXCIpO1xufVxuLyoqXG4gKiBDbG9uZSBhIG5vZGUsIGFuZCBvcHRpb25hbGx5IGl0cyBjaGlsZHJlbi5cbiAqXG4gKiBAcGFyYW0gcmVjdXJzaXZlIENsb25lIGNoaWxkIG5vZGVzIGFzIHdlbGwuXG4gKiBAcmV0dXJucyBBIGNsb25lIG9mIHRoZSBub2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY2xvbmVOb2RlKG5vZGUsIHJlY3Vyc2l2ZSA9IGZhbHNlKSB7XG4gICAgbGV0IHJlc3VsdDtcbiAgICBpZiAoaXNUZXh0KG5vZGUpKSB7XG4gICAgICAgIHJlc3VsdCA9IG5ldyBUZXh0KG5vZGUuZGF0YSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQ29tbWVudChub2RlKSkge1xuICAgICAgICByZXN1bHQgPSBuZXcgQ29tbWVudChub2RlLmRhdGEpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc1RhZyhub2RlKSkge1xuICAgICAgICBjb25zdCBjaGlsZHJlbiA9IHJlY3Vyc2l2ZSA/IGNsb25lQ2hpbGRyZW4obm9kZS5jaGlsZHJlbikgOiBbXTtcbiAgICAgICAgY29uc3QgY2xvbmUgPSBuZXcgRWxlbWVudChub2RlLm5hbWUsIHsgLi4ubm9kZS5hdHRyaWJzIH0sIGNoaWxkcmVuKTtcbiAgICAgICAgY2hpbGRyZW4uZm9yRWFjaCgoY2hpbGQpID0+IChjaGlsZC5wYXJlbnQgPSBjbG9uZSkpO1xuICAgICAgICBpZiAobm9kZS5uYW1lc3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgY2xvbmUubmFtZXNwYWNlID0gbm9kZS5uYW1lc3BhY2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vZGVbXCJ4LWF0dHJpYnNOYW1lc3BhY2VcIl0pIHtcbiAgICAgICAgICAgIGNsb25lW1wieC1hdHRyaWJzTmFtZXNwYWNlXCJdID0geyAuLi5ub2RlW1wieC1hdHRyaWJzTmFtZXNwYWNlXCJdIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vZGVbXCJ4LWF0dHJpYnNQcmVmaXhcIl0pIHtcbiAgICAgICAgICAgIGNsb25lW1wieC1hdHRyaWJzUHJlZml4XCJdID0geyAuLi5ub2RlW1wieC1hdHRyaWJzUHJlZml4XCJdIH07XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gY2xvbmU7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQ0RBVEEobm9kZSkpIHtcbiAgICAgICAgY29uc3QgY2hpbGRyZW4gPSByZWN1cnNpdmUgPyBjbG9uZUNoaWxkcmVuKG5vZGUuY2hpbGRyZW4pIDogW107XG4gICAgICAgIGNvbnN0IGNsb25lID0gbmV3IENEQVRBKGNoaWxkcmVuKTtcbiAgICAgICAgY2hpbGRyZW4uZm9yRWFjaCgoY2hpbGQpID0+IChjaGlsZC5wYXJlbnQgPSBjbG9uZSkpO1xuICAgICAgICByZXN1bHQgPSBjbG9uZTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNEb2N1bWVudChub2RlKSkge1xuICAgICAgICBjb25zdCBjaGlsZHJlbiA9IHJlY3Vyc2l2ZSA/IGNsb25lQ2hpbGRyZW4obm9kZS5jaGlsZHJlbikgOiBbXTtcbiAgICAgICAgY29uc3QgY2xvbmUgPSBuZXcgRG9jdW1lbnQoY2hpbGRyZW4pO1xuICAgICAgICBjaGlsZHJlbi5mb3JFYWNoKChjaGlsZCkgPT4gKGNoaWxkLnBhcmVudCA9IGNsb25lKSk7XG4gICAgICAgIGlmIChub2RlW1wieC1tb2RlXCJdKSB7XG4gICAgICAgICAgICBjbG9uZVtcIngtbW9kZVwiXSA9IG5vZGVbXCJ4LW1vZGVcIl07XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gY2xvbmU7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzRGlyZWN0aXZlKG5vZGUpKSB7XG4gICAgICAgIGNvbnN0IGluc3RydWN0aW9uID0gbmV3IFByb2Nlc3NpbmdJbnN0cnVjdGlvbihub2RlLm5hbWUsIG5vZGUuZGF0YSk7XG4gICAgICAgIGlmIChub2RlW1wieC1uYW1lXCJdICE9IG51bGwpIHtcbiAgICAgICAgICAgIGluc3RydWN0aW9uW1wieC1uYW1lXCJdID0gbm9kZVtcIngtbmFtZVwiXTtcbiAgICAgICAgICAgIGluc3RydWN0aW9uW1wieC1wdWJsaWNJZFwiXSA9IG5vZGVbXCJ4LXB1YmxpY0lkXCJdO1xuICAgICAgICAgICAgaW5zdHJ1Y3Rpb25bXCJ4LXN5c3RlbUlkXCJdID0gbm9kZVtcIngtc3lzdGVtSWRcIl07XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gaW5zdHJ1Y3Rpb247XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vdCBpbXBsZW1lbnRlZCB5ZXQ6ICR7bm9kZS50eXBlfWApO1xuICAgIH1cbiAgICByZXN1bHQuc3RhcnRJbmRleCA9IG5vZGUuc3RhcnRJbmRleDtcbiAgICByZXN1bHQuZW5kSW5kZXggPSBub2RlLmVuZEluZGV4O1xuICAgIGlmIChub2RlLnNvdXJjZUNvZGVMb2NhdGlvbiAhPSBudWxsKSB7XG4gICAgICAgIHJlc3VsdC5zb3VyY2VDb2RlTG9jYXRpb24gPSBub2RlLnNvdXJjZUNvZGVMb2NhdGlvbjtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGNsb25lQ2hpbGRyZW4oY2hpbGRzKSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSBjaGlsZHMubWFwKChjaGlsZCkgPT4gY2xvbmVOb2RlKGNoaWxkLCB0cnVlKSk7XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICBjaGlsZHJlbltpXS5wcmV2ID0gY2hpbGRyZW5baSAtIDFdO1xuICAgICAgICBjaGlsZHJlbltpIC0gMV0ubmV4dCA9IGNoaWxkcmVuW2ldO1xuICAgIH1cbiAgICByZXR1cm4gY2hpbGRyZW47XG59XG4iXSwibmFtZXMiOlsiRWxlbWVudFR5cGUiLCJpc1RhZyIsImlzVGFnUmF3IiwiTm9kZSIsImNvbnN0cnVjdG9yIiwicGFyZW50IiwicHJldiIsIm5leHQiLCJzdGFydEluZGV4IiwiZW5kSW5kZXgiLCJwYXJlbnROb2RlIiwicHJldmlvdXNTaWJsaW5nIiwibmV4dFNpYmxpbmciLCJjbG9uZU5vZGUiLCJyZWN1cnNpdmUiLCJEYXRhTm9kZSIsImRhdGEiLCJub2RlVmFsdWUiLCJUZXh0IiwiYXJndW1lbnRzIiwidHlwZSIsIm5vZGVUeXBlIiwiQ29tbWVudCIsIlByb2Nlc3NpbmdJbnN0cnVjdGlvbiIsIm5hbWUiLCJEaXJlY3RpdmUiLCJOb2RlV2l0aENoaWxkcmVuIiwiY2hpbGRyZW4iLCJmaXJzdENoaWxkIiwiX2EiLCJsYXN0Q2hpbGQiLCJsZW5ndGgiLCJjaGlsZE5vZGVzIiwiQ0RBVEEiLCJEb2N1bWVudCIsIlJvb3QiLCJFbGVtZW50IiwiYXR0cmlicyIsIlNjcmlwdCIsIlN0eWxlIiwiVGFnIiwidGFnTmFtZSIsImF0dHJpYnV0ZXMiLCJPYmplY3QiLCJrZXlzIiwibWFwIiwiX2IiLCJ2YWx1ZSIsIm5hbWVzcGFjZSIsInByZWZpeCIsIm5vZGUiLCJpc0NEQVRBIiwiaXNUZXh0IiwiaXNDb21tZW50IiwiaXNEaXJlY3RpdmUiLCJpc0RvY3VtZW50IiwiaGFzQ2hpbGRyZW4iLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJyZXN1bHQiLCJjbG9uZUNoaWxkcmVuIiwiY2xvbmUiLCJmb3JFYWNoIiwiY2hpbGQiLCJpbnN0cnVjdGlvbiIsIkVycm9yIiwic291cmNlQ29kZUxvY2F0aW9uIiwiY2hpbGRzIiwiaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/domhandler/lib/esm/node.js\n");

/***/ })

};
;