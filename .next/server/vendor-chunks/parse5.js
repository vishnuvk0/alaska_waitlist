"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/parse5";
exports.ids = ["vendor-chunks/parse5"];
exports.modules = {

/***/ "(rsc)/./node_modules/parse5/dist/common/doctype.js":
/*!****************************************************!*\
  !*** ./node_modules/parse5/dist/common/doctype.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDocumentMode: () => (/* binding */ getDocumentMode),\n/* harmony export */   isConforming: () => (/* binding */ isConforming)\n/* harmony export */ });\n/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n\n//Const\nconst VALID_DOCTYPE_NAME = \"html\";\nconst VALID_SYSTEM_ID = \"about:legacy-compat\";\nconst QUIRKS_MODE_SYSTEM_ID = \"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd\";\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    \"+//silmaril//dtd html pro v0r11 19970101//\",\n    \"-//as//dtd html 3.0 aswedit + extensions//\",\n    \"-//advasoft ltd//dtd html 3.0 aswedit + extensions//\",\n    \"-//ietf//dtd html 2.0 level 1//\",\n    \"-//ietf//dtd html 2.0 level 2//\",\n    \"-//ietf//dtd html 2.0 strict level 1//\",\n    \"-//ietf//dtd html 2.0 strict level 2//\",\n    \"-//ietf//dtd html 2.0 strict//\",\n    \"-//ietf//dtd html 2.0//\",\n    \"-//ietf//dtd html 2.1e//\",\n    \"-//ietf//dtd html 3.0//\",\n    \"-//ietf//dtd html 3.2 final//\",\n    \"-//ietf//dtd html 3.2//\",\n    \"-//ietf//dtd html 3//\",\n    \"-//ietf//dtd html level 0//\",\n    \"-//ietf//dtd html level 1//\",\n    \"-//ietf//dtd html level 2//\",\n    \"-//ietf//dtd html level 3//\",\n    \"-//ietf//dtd html strict level 0//\",\n    \"-//ietf//dtd html strict level 1//\",\n    \"-//ietf//dtd html strict level 2//\",\n    \"-//ietf//dtd html strict level 3//\",\n    \"-//ietf//dtd html strict//\",\n    \"-//ietf//dtd html//\",\n    \"-//metrius//dtd metrius presentational//\",\n    \"-//microsoft//dtd internet explorer 2.0 html strict//\",\n    \"-//microsoft//dtd internet explorer 2.0 html//\",\n    \"-//microsoft//dtd internet explorer 2.0 tables//\",\n    \"-//microsoft//dtd internet explorer 3.0 html strict//\",\n    \"-//microsoft//dtd internet explorer 3.0 html//\",\n    \"-//microsoft//dtd internet explorer 3.0 tables//\",\n    \"-//netscape comm. corp.//dtd html//\",\n    \"-//netscape comm. corp.//dtd strict html//\",\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    \"-//sq//dtd html 2.0 hotmetal + extensions//\",\n    \"-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//\",\n    \"-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//\",\n    \"-//spyglass//dtd html 2.0 extended//\",\n    \"-//sun microsystems corp.//dtd hotjava html//\",\n    \"-//sun microsystems corp.//dtd hotjava strict html//\",\n    \"-//w3c//dtd html 3 1995-03-24//\",\n    \"-//w3c//dtd html 3.2 draft//\",\n    \"-//w3c//dtd html 3.2 final//\",\n    \"-//w3c//dtd html 3.2//\",\n    \"-//w3c//dtd html 3.2s draft//\",\n    \"-//w3c//dtd html 4.0 frameset//\",\n    \"-//w3c//dtd html 4.0 transitional//\",\n    \"-//w3c//dtd html experimental 19960712//\",\n    \"-//w3c//dtd html experimental 970421//\",\n    \"-//w3c//dtd w3 html//\",\n    \"-//w3o//dtd w3 html 3.0//\",\n    \"-//webtechs//dtd mozilla html 2.0//\",\n    \"-//webtechs//dtd mozilla html//\"\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    \"-//w3c//dtd html 4.01 frameset//\",\n    \"-//w3c//dtd html 4.01 transitional//\"\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    \"-//w3o//dtd w3 html strict 3.0//en//\",\n    \"-/w3c/dtd html 4.0 transitional/en\",\n    \"html\"\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = [\n    \"-//w3c//dtd xhtml 1.0 frameset//\",\n    \"-//w3c//dtd xhtml 1.0 transitional//\"\n];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    \"-//w3c//dtd html 4.01 frameset//\",\n    \"-//w3c//dtd html 4.01 transitional//\"\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix)=>publicId.startsWith(prefix));\n}\n//API\nfunction isConforming(token) {\n    return token.name === VALID_DOCTYPE_NAME && token.publicId === null && (token.systemId === null || token.systemId === VALID_SYSTEM_ID);\n}\nfunction getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/doctype.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/common/error-codes.js":
/*!********************************************************!*\
  !*** ./node_modules/parse5/dist/common/error-codes.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERR: () => (/* binding */ ERR)\n/* harmony export */ });\nvar ERR;\n(function(ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvY29tbW9uL2Vycm9yLWNvZGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxJQUFJQSxJQUFJO0FBQ2QsVUFBVUEsR0FBRztJQUNWQSxHQUFHLENBQUMsZ0NBQWdDLEdBQUc7SUFDdkNBLEdBQUcsQ0FBQyw0QkFBNEIsR0FBRztJQUNuQ0EsR0FBRyxDQUFDLHlCQUF5QixHQUFHO0lBQ2hDQSxHQUFHLENBQUMsZ0RBQWdELEdBQUc7SUFDdkRBLEdBQUcsQ0FBQyx1QkFBdUIsR0FBRztJQUM5QkEsR0FBRyxDQUFDLDRCQUE0QixHQUFHO0lBQ25DQSxHQUFHLENBQUMseUJBQXlCLEdBQUc7SUFDaENBLEdBQUcsQ0FBQywwQkFBMEIsR0FBRztJQUNqQ0EsR0FBRyxDQUFDLHlDQUF5QyxHQUFHO0lBQ2hEQSxHQUFHLENBQUMsaUNBQWlDLEdBQUc7SUFDeENBLEdBQUcsQ0FBQywwQ0FBMEMsR0FBRztJQUNqREEsR0FBRyxDQUFDLG9CQUFvQixHQUFHO0lBQzNCQSxHQUFHLENBQUMscUNBQXFDLEdBQUc7SUFDNUNBLEdBQUcsQ0FBQyxpQ0FBaUMsR0FBRztJQUN4Q0EsR0FBRyxDQUFDLDBDQUEwQyxHQUFHO0lBQ2pEQSxHQUFHLENBQUMsa0RBQWtELEdBQUc7SUFDekRBLEdBQUcsQ0FBQyw4Q0FBOEMsR0FBRztJQUNyREEsR0FBRyxDQUFDLG1CQUFtQixHQUFHO0lBQzFCQSxHQUFHLENBQUMsV0FBVyxHQUFHO0lBQ2xCQSxHQUFHLENBQUMsd0JBQXdCLEdBQUc7SUFDL0JBLEdBQUcsQ0FBQyxxQ0FBcUMsR0FBRztJQUM1Q0EsR0FBRyxDQUFDLDZDQUE2QyxHQUFHO0lBQ3BEQSxHQUFHLENBQUMsNERBQTRELEdBQUc7SUFDbkVBLEdBQUcsQ0FBQyw2Q0FBNkMsR0FBRztJQUNwREEsR0FBRyxDQUFDLDRDQUE0QyxHQUFHO0lBQ25EQSxHQUFHLENBQUMsNENBQTRDLEdBQUc7SUFDbkRBLEdBQUcsQ0FBQyxpQ0FBaUMsR0FBRztJQUN4Q0EsR0FBRyxDQUFDLGlDQUFpQyxHQUFHO0lBQ3hDQSxHQUFHLENBQUMsZ0NBQWdDLEdBQUc7SUFDdkNBLEdBQUcsQ0FBQyxnQ0FBZ0MsR0FBRztJQUN2Q0EsR0FBRyxDQUFDLHFCQUFxQixHQUFHO0lBQzVCQSxHQUFHLENBQUMsMkJBQTJCLEdBQUc7SUFDbENBLEdBQUcsQ0FBQyxpQ0FBaUMsR0FBRztJQUN4Q0EsR0FBRyxDQUFDLGVBQWUsR0FBRztJQUN0QkEsR0FBRyxDQUFDLGdCQUFnQixHQUFHO0lBQ3ZCQSxHQUFHLENBQUMsOEJBQThCLEdBQUc7SUFDckNBLEdBQUcsQ0FBQyxlQUFlLEdBQUc7SUFDdEJBLEdBQUcsQ0FBQywyQkFBMkIsR0FBRztJQUNsQ0EsR0FBRyxDQUFDLGFBQWEsR0FBRztJQUNwQkEsR0FBRyxDQUFDLDZDQUE2QyxHQUFHO0lBQ3BEQSxHQUFHLENBQUMseUJBQXlCLEdBQUc7SUFDaENBLEdBQUcsQ0FBQyw4QkFBOEIsR0FBRztJQUNyQ0EsR0FBRyxDQUFDLHdDQUF3QyxHQUFHO0lBQy9DQSxHQUFHLENBQUMsNEJBQTRCLEdBQUc7SUFDbkNBLEdBQUcsQ0FBQyxpQ0FBaUMsR0FBRztJQUN4Q0EsR0FBRyxDQUFDLHFDQUFxQyxHQUFHO0lBQzVDQSxHQUFHLENBQUMscUJBQXFCLEdBQUc7SUFDNUJBLEdBQUcsQ0FBQywyQ0FBMkMsR0FBRztJQUNsREEsR0FBRyxDQUFDLHFCQUFxQixHQUFHO0lBQzVCQSxHQUFHLENBQUMsdUJBQXVCLEdBQUc7SUFDOUJBLEdBQUcsQ0FBQyxpQkFBaUIsR0FBRztJQUN4QkEsR0FBRyxDQUFDLG1CQUFtQixHQUFHO0lBQzFCQSxHQUFHLENBQUMsbUNBQW1DLEdBQUc7SUFDMUNBLEdBQUcsQ0FBQyx3Q0FBd0MsR0FBRztJQUMvQ0EsR0FBRyxDQUFDLG9DQUFvQyxHQUFHO0lBQzNDQSxHQUFHLENBQUMsMkJBQTJCLEdBQUc7SUFDbENBLEdBQUcsQ0FBQyw0QkFBNEIsR0FBRztJQUNuQ0EsR0FBRyxDQUFDLGtDQUFrQyxHQUFHO0lBQ3pDQSxHQUFHLENBQUMsdUJBQXVCLEdBQUc7SUFDOUJBLEdBQUcsQ0FBQyxxQ0FBcUMsR0FBRztBQUNoRCxHQUFHQSxPQUFRQSxDQUFBQSxNQUFNLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbGFza2Etd2FpdGxpc3QtYXBpLy4vbm9kZV9tb2R1bGVzL3BhcnNlNS9kaXN0L2NvbW1vbi9lcnJvci1jb2Rlcy5qcz83Mjk3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgRVJSO1xuKGZ1bmN0aW9uIChFUlIpIHtcbiAgICBFUlJbXCJjb250cm9sQ2hhcmFjdGVySW5JbnB1dFN0cmVhbVwiXSA9IFwiY29udHJvbC1jaGFyYWN0ZXItaW4taW5wdXQtc3RyZWFtXCI7XG4gICAgRVJSW1wibm9uY2hhcmFjdGVySW5JbnB1dFN0cmVhbVwiXSA9IFwibm9uY2hhcmFjdGVyLWluLWlucHV0LXN0cmVhbVwiO1xuICAgIEVSUltcInN1cnJvZ2F0ZUluSW5wdXRTdHJlYW1cIl0gPSBcInN1cnJvZ2F0ZS1pbi1pbnB1dC1zdHJlYW1cIjtcbiAgICBFUlJbXCJub25Wb2lkSHRtbEVsZW1lbnRTdGFydFRhZ1dpdGhUcmFpbGluZ1NvbGlkdXNcIl0gPSBcIm5vbi12b2lkLWh0bWwtZWxlbWVudC1zdGFydC10YWctd2l0aC10cmFpbGluZy1zb2xpZHVzXCI7XG4gICAgRVJSW1wiZW5kVGFnV2l0aEF0dHJpYnV0ZXNcIl0gPSBcImVuZC10YWctd2l0aC1hdHRyaWJ1dGVzXCI7XG4gICAgRVJSW1wiZW5kVGFnV2l0aFRyYWlsaW5nU29saWR1c1wiXSA9IFwiZW5kLXRhZy13aXRoLXRyYWlsaW5nLXNvbGlkdXNcIjtcbiAgICBFUlJbXCJ1bmV4cGVjdGVkU29saWR1c0luVGFnXCJdID0gXCJ1bmV4cGVjdGVkLXNvbGlkdXMtaW4tdGFnXCI7XG4gICAgRVJSW1widW5leHBlY3RlZE51bGxDaGFyYWN0ZXJcIl0gPSBcInVuZXhwZWN0ZWQtbnVsbC1jaGFyYWN0ZXJcIjtcbiAgICBFUlJbXCJ1bmV4cGVjdGVkUXVlc3Rpb25NYXJrSW5zdGVhZE9mVGFnTmFtZVwiXSA9IFwidW5leHBlY3RlZC1xdWVzdGlvbi1tYXJrLWluc3RlYWQtb2YtdGFnLW5hbWVcIjtcbiAgICBFUlJbXCJpbnZhbGlkRmlyc3RDaGFyYWN0ZXJPZlRhZ05hbWVcIl0gPSBcImludmFsaWQtZmlyc3QtY2hhcmFjdGVyLW9mLXRhZy1uYW1lXCI7XG4gICAgRVJSW1widW5leHBlY3RlZEVxdWFsc1NpZ25CZWZvcmVBdHRyaWJ1dGVOYW1lXCJdID0gXCJ1bmV4cGVjdGVkLWVxdWFscy1zaWduLWJlZm9yZS1hdHRyaWJ1dGUtbmFtZVwiO1xuICAgIEVSUltcIm1pc3NpbmdFbmRUYWdOYW1lXCJdID0gXCJtaXNzaW5nLWVuZC10YWctbmFtZVwiO1xuICAgIEVSUltcInVuZXhwZWN0ZWRDaGFyYWN0ZXJJbkF0dHJpYnV0ZU5hbWVcIl0gPSBcInVuZXhwZWN0ZWQtY2hhcmFjdGVyLWluLWF0dHJpYnV0ZS1uYW1lXCI7XG4gICAgRVJSW1widW5rbm93bk5hbWVkQ2hhcmFjdGVyUmVmZXJlbmNlXCJdID0gXCJ1bmtub3duLW5hbWVkLWNoYXJhY3Rlci1yZWZlcmVuY2VcIjtcbiAgICBFUlJbXCJtaXNzaW5nU2VtaWNvbG9uQWZ0ZXJDaGFyYWN0ZXJSZWZlcmVuY2VcIl0gPSBcIm1pc3Npbmctc2VtaWNvbG9uLWFmdGVyLWNoYXJhY3Rlci1yZWZlcmVuY2VcIjtcbiAgICBFUlJbXCJ1bmV4cGVjdGVkQ2hhcmFjdGVyQWZ0ZXJEb2N0eXBlU3lzdGVtSWRlbnRpZmllclwiXSA9IFwidW5leHBlY3RlZC1jaGFyYWN0ZXItYWZ0ZXItZG9jdHlwZS1zeXN0ZW0taWRlbnRpZmllclwiO1xuICAgIEVSUltcInVuZXhwZWN0ZWRDaGFyYWN0ZXJJblVucXVvdGVkQXR0cmlidXRlVmFsdWVcIl0gPSBcInVuZXhwZWN0ZWQtY2hhcmFjdGVyLWluLXVucXVvdGVkLWF0dHJpYnV0ZS12YWx1ZVwiO1xuICAgIEVSUltcImVvZkJlZm9yZVRhZ05hbWVcIl0gPSBcImVvZi1iZWZvcmUtdGFnLW5hbWVcIjtcbiAgICBFUlJbXCJlb2ZJblRhZ1wiXSA9IFwiZW9mLWluLXRhZ1wiO1xuICAgIEVSUltcIm1pc3NpbmdBdHRyaWJ1dGVWYWx1ZVwiXSA9IFwibWlzc2luZy1hdHRyaWJ1dGUtdmFsdWVcIjtcbiAgICBFUlJbXCJtaXNzaW5nV2hpdGVzcGFjZUJldHdlZW5BdHRyaWJ1dGVzXCJdID0gXCJtaXNzaW5nLXdoaXRlc3BhY2UtYmV0d2Vlbi1hdHRyaWJ1dGVzXCI7XG4gICAgRVJSW1wibWlzc2luZ1doaXRlc3BhY2VBZnRlckRvY3R5cGVQdWJsaWNLZXl3b3JkXCJdID0gXCJtaXNzaW5nLXdoaXRlc3BhY2UtYWZ0ZXItZG9jdHlwZS1wdWJsaWMta2V5d29yZFwiO1xuICAgIEVSUltcIm1pc3NpbmdXaGl0ZXNwYWNlQmV0d2VlbkRvY3R5cGVQdWJsaWNBbmRTeXN0ZW1JZGVudGlmaWVyc1wiXSA9IFwibWlzc2luZy13aGl0ZXNwYWNlLWJldHdlZW4tZG9jdHlwZS1wdWJsaWMtYW5kLXN5c3RlbS1pZGVudGlmaWVyc1wiO1xuICAgIEVSUltcIm1pc3NpbmdXaGl0ZXNwYWNlQWZ0ZXJEb2N0eXBlU3lzdGVtS2V5d29yZFwiXSA9IFwibWlzc2luZy13aGl0ZXNwYWNlLWFmdGVyLWRvY3R5cGUtc3lzdGVtLWtleXdvcmRcIjtcbiAgICBFUlJbXCJtaXNzaW5nUXVvdGVCZWZvcmVEb2N0eXBlUHVibGljSWRlbnRpZmllclwiXSA9IFwibWlzc2luZy1xdW90ZS1iZWZvcmUtZG9jdHlwZS1wdWJsaWMtaWRlbnRpZmllclwiO1xuICAgIEVSUltcIm1pc3NpbmdRdW90ZUJlZm9yZURvY3R5cGVTeXN0ZW1JZGVudGlmaWVyXCJdID0gXCJtaXNzaW5nLXF1b3RlLWJlZm9yZS1kb2N0eXBlLXN5c3RlbS1pZGVudGlmaWVyXCI7XG4gICAgRVJSW1wibWlzc2luZ0RvY3R5cGVQdWJsaWNJZGVudGlmaWVyXCJdID0gXCJtaXNzaW5nLWRvY3R5cGUtcHVibGljLWlkZW50aWZpZXJcIjtcbiAgICBFUlJbXCJtaXNzaW5nRG9jdHlwZVN5c3RlbUlkZW50aWZpZXJcIl0gPSBcIm1pc3NpbmctZG9jdHlwZS1zeXN0ZW0taWRlbnRpZmllclwiO1xuICAgIEVSUltcImFicnVwdERvY3R5cGVQdWJsaWNJZGVudGlmaWVyXCJdID0gXCJhYnJ1cHQtZG9jdHlwZS1wdWJsaWMtaWRlbnRpZmllclwiO1xuICAgIEVSUltcImFicnVwdERvY3R5cGVTeXN0ZW1JZGVudGlmaWVyXCJdID0gXCJhYnJ1cHQtZG9jdHlwZS1zeXN0ZW0taWRlbnRpZmllclwiO1xuICAgIEVSUltcImNkYXRhSW5IdG1sQ29udGVudFwiXSA9IFwiY2RhdGEtaW4taHRtbC1jb250ZW50XCI7XG4gICAgRVJSW1wiaW5jb3JyZWN0bHlPcGVuZWRDb21tZW50XCJdID0gXCJpbmNvcnJlY3RseS1vcGVuZWQtY29tbWVudFwiO1xuICAgIEVSUltcImVvZkluU2NyaXB0SHRtbENvbW1lbnRMaWtlVGV4dFwiXSA9IFwiZW9mLWluLXNjcmlwdC1odG1sLWNvbW1lbnQtbGlrZS10ZXh0XCI7XG4gICAgRVJSW1wiZW9mSW5Eb2N0eXBlXCJdID0gXCJlb2YtaW4tZG9jdHlwZVwiO1xuICAgIEVSUltcIm5lc3RlZENvbW1lbnRcIl0gPSBcIm5lc3RlZC1jb21tZW50XCI7XG4gICAgRVJSW1wiYWJydXB0Q2xvc2luZ09mRW1wdHlDb21tZW50XCJdID0gXCJhYnJ1cHQtY2xvc2luZy1vZi1lbXB0eS1jb21tZW50XCI7XG4gICAgRVJSW1wiZW9mSW5Db21tZW50XCJdID0gXCJlb2YtaW4tY29tbWVudFwiO1xuICAgIEVSUltcImluY29ycmVjdGx5Q2xvc2VkQ29tbWVudFwiXSA9IFwiaW5jb3JyZWN0bHktY2xvc2VkLWNvbW1lbnRcIjtcbiAgICBFUlJbXCJlb2ZJbkNkYXRhXCJdID0gXCJlb2YtaW4tY2RhdGFcIjtcbiAgICBFUlJbXCJhYnNlbmNlT2ZEaWdpdHNJbk51bWVyaWNDaGFyYWN0ZXJSZWZlcmVuY2VcIl0gPSBcImFic2VuY2Utb2YtZGlnaXRzLWluLW51bWVyaWMtY2hhcmFjdGVyLXJlZmVyZW5jZVwiO1xuICAgIEVSUltcIm51bGxDaGFyYWN0ZXJSZWZlcmVuY2VcIl0gPSBcIm51bGwtY2hhcmFjdGVyLXJlZmVyZW5jZVwiO1xuICAgIEVSUltcInN1cnJvZ2F0ZUNoYXJhY3RlclJlZmVyZW5jZVwiXSA9IFwic3Vycm9nYXRlLWNoYXJhY3Rlci1yZWZlcmVuY2VcIjtcbiAgICBFUlJbXCJjaGFyYWN0ZXJSZWZlcmVuY2VPdXRzaWRlVW5pY29kZVJhbmdlXCJdID0gXCJjaGFyYWN0ZXItcmVmZXJlbmNlLW91dHNpZGUtdW5pY29kZS1yYW5nZVwiO1xuICAgIEVSUltcImNvbnRyb2xDaGFyYWN0ZXJSZWZlcmVuY2VcIl0gPSBcImNvbnRyb2wtY2hhcmFjdGVyLXJlZmVyZW5jZVwiO1xuICAgIEVSUltcIm5vbmNoYXJhY3RlckNoYXJhY3RlclJlZmVyZW5jZVwiXSA9IFwibm9uY2hhcmFjdGVyLWNoYXJhY3Rlci1yZWZlcmVuY2VcIjtcbiAgICBFUlJbXCJtaXNzaW5nV2hpdGVzcGFjZUJlZm9yZURvY3R5cGVOYW1lXCJdID0gXCJtaXNzaW5nLXdoaXRlc3BhY2UtYmVmb3JlLWRvY3R5cGUtbmFtZVwiO1xuICAgIEVSUltcIm1pc3NpbmdEb2N0eXBlTmFtZVwiXSA9IFwibWlzc2luZy1kb2N0eXBlLW5hbWVcIjtcbiAgICBFUlJbXCJpbnZhbGlkQ2hhcmFjdGVyU2VxdWVuY2VBZnRlckRvY3R5cGVOYW1lXCJdID0gXCJpbnZhbGlkLWNoYXJhY3Rlci1zZXF1ZW5jZS1hZnRlci1kb2N0eXBlLW5hbWVcIjtcbiAgICBFUlJbXCJkdXBsaWNhdGVBdHRyaWJ1dGVcIl0gPSBcImR1cGxpY2F0ZS1hdHRyaWJ1dGVcIjtcbiAgICBFUlJbXCJub25Db25mb3JtaW5nRG9jdHlwZVwiXSA9IFwibm9uLWNvbmZvcm1pbmctZG9jdHlwZVwiO1xuICAgIEVSUltcIm1pc3NpbmdEb2N0eXBlXCJdID0gXCJtaXNzaW5nLWRvY3R5cGVcIjtcbiAgICBFUlJbXCJtaXNwbGFjZWREb2N0eXBlXCJdID0gXCJtaXNwbGFjZWQtZG9jdHlwZVwiO1xuICAgIEVSUltcImVuZFRhZ1dpdGhvdXRNYXRjaGluZ09wZW5FbGVtZW50XCJdID0gXCJlbmQtdGFnLXdpdGhvdXQtbWF0Y2hpbmctb3Blbi1lbGVtZW50XCI7XG4gICAgRVJSW1wiY2xvc2luZ09mRWxlbWVudFdpdGhPcGVuQ2hpbGRFbGVtZW50c1wiXSA9IFwiY2xvc2luZy1vZi1lbGVtZW50LXdpdGgtb3Blbi1jaGlsZC1lbGVtZW50c1wiO1xuICAgIEVSUltcImRpc2FsbG93ZWRDb250ZW50SW5Ob3NjcmlwdEluSGVhZFwiXSA9IFwiZGlzYWxsb3dlZC1jb250ZW50LWluLW5vc2NyaXB0LWluLWhlYWRcIjtcbiAgICBFUlJbXCJvcGVuRWxlbWVudHNMZWZ0QWZ0ZXJFb2ZcIl0gPSBcIm9wZW4tZWxlbWVudHMtbGVmdC1hZnRlci1lb2ZcIjtcbiAgICBFUlJbXCJhYmFuZG9uZWRIZWFkRWxlbWVudENoaWxkXCJdID0gXCJhYmFuZG9uZWQtaGVhZC1lbGVtZW50LWNoaWxkXCI7XG4gICAgRVJSW1wibWlzcGxhY2VkU3RhcnRUYWdGb3JIZWFkRWxlbWVudFwiXSA9IFwibWlzcGxhY2VkLXN0YXJ0LXRhZy1mb3ItaGVhZC1lbGVtZW50XCI7XG4gICAgRVJSW1wibmVzdGVkTm9zY3JpcHRJbkhlYWRcIl0gPSBcIm5lc3RlZC1ub3NjcmlwdC1pbi1oZWFkXCI7XG4gICAgRVJSW1wiZW9mSW5FbGVtZW50VGhhdENhbkNvbnRhaW5Pbmx5VGV4dFwiXSA9IFwiZW9mLWluLWVsZW1lbnQtdGhhdC1jYW4tY29udGFpbi1vbmx5LXRleHRcIjtcbn0pKEVSUiB8fCAoRVJSID0ge30pKTtcbiJdLCJuYW1lcyI6WyJFUlIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/error-codes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/common/foreign-content.js":
/*!************************************************************!*\
  !*** ./node_modules/parse5/dist/common/foreign-content.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SVG_TAG_NAMES_ADJUSTMENT_MAP: () => (/* binding */ SVG_TAG_NAMES_ADJUSTMENT_MAP),\n/* harmony export */   adjustTokenMathMLAttrs: () => (/* binding */ adjustTokenMathMLAttrs),\n/* harmony export */   adjustTokenSVGAttrs: () => (/* binding */ adjustTokenSVGAttrs),\n/* harmony export */   adjustTokenSVGTagName: () => (/* binding */ adjustTokenSVGTagName),\n/* harmony export */   adjustTokenXMLAttrs: () => (/* binding */ adjustTokenXMLAttrs),\n/* harmony export */   causesExit: () => (/* binding */ causesExit),\n/* harmony export */   isIntegrationPoint: () => (/* binding */ isIntegrationPoint)\n/* harmony export */ });\n/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: \"text/html\",\n    APPLICATION_XML: \"application/xhtml+xml\"\n};\n//Attributes\nconst DEFINITION_URL_ATTR = \"definitionurl\";\nconst ADJUSTED_DEFINITION_URL_ATTR = \"definitionURL\";\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\"\n].map((attr)=>[\n        attr.toLowerCase(),\n        attr\n    ]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    [\n        \"xlink:actuate\",\n        {\n            prefix: \"xlink\",\n            name: \"actuate\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:arcrole\",\n        {\n            prefix: \"xlink\",\n            name: \"arcrole\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:href\",\n        {\n            prefix: \"xlink\",\n            name: \"href\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:role\",\n        {\n            prefix: \"xlink\",\n            name: \"role\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:show\",\n        {\n            prefix: \"xlink\",\n            name: \"show\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:title\",\n        {\n            prefix: \"xlink\",\n            name: \"title\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:type\",\n        {\n            prefix: \"xlink\",\n            name: \"type\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xml:lang\",\n        {\n            prefix: \"xml\",\n            name: \"lang\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XML\n        }\n    ],\n    [\n        \"xml:space\",\n        {\n            prefix: \"xml\",\n            name: \"space\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XML\n        }\n    ],\n    [\n        \"xmlns\",\n        {\n            prefix: \"\",\n            name: \"xmlns\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XMLNS\n        }\n    ],\n    [\n        \"xmlns:xlink\",\n        {\n            prefix: \"xmlns\",\n            name: \"xlink\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XMLNS\n        }\n    ]\n]);\n//SVG tag names adjustment map\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\"\n].map((tn)=>[\n        tn.toLowerCase(),\n        tn\n    ]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.B,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BIG,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BLOCKQUOTE,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BODY,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BR,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.CENTER,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.CODE,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DD,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DIV,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DL,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DT,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.EM,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.EMBED,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H1,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H2,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H3,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H4,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H5,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H6,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HEAD,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HR,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.I,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.IMG,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.LI,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.LISTING,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MENU,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.META,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.NOBR,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OL,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.P,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.PRE,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.RUBY,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.S,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.SMALL,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.SPAN,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.STRONG,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.STRIKE,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.SUB,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.SUP,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TABLE,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TT,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.U,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.UL,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.VAR\n]);\n//Check exit from foreign content\nfunction causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.FONT && startTagToken.attrs.some(({ name })=>name === _html_js__WEBPACK_IMPORTED_MODULE_0__.ATTRS.COLOR || name === _html_js__WEBPACK_IMPORTED_MODULE_0__.ATTRS.SIZE || name === _html_js__WEBPACK_IMPORTED_MODULE_0__.ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nfunction adjustTokenMathMLAttrs(token) {\n    for(let i = 0; i < token.attrs.length; i++){\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nfunction adjustTokenSVGAttrs(token) {\n    for(let i = 0; i < token.attrs.length; i++){\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nfunction adjustTokenXMLAttrs(token) {\n    for(let i = 0; i < token.attrs.length; i++){\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nfunction adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = (0,_html_js__WEBPACK_IMPORTED_MODULE_0__.getTagID)(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.MATHML && (tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MI || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MO || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MN || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MS || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.MATHML && tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.ANNOTATION_XML) {\n        for(let i = 0; i < attrs.length; i++){\n            if (attrs[i].name === _html_js__WEBPACK_IMPORTED_MODULE_0__.ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.SVG && (tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.FOREIGN_OBJECT || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DESC || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TITLE);\n}\nfunction isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (!foreignNS || foreignNS === _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs) || (!foreignNS || foreignNS === _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/foreign-content.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/common/html.js":
/*!*************************************************!*\
  !*** ./node_modules/parse5/dist/common/html.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ATTRS: () => (/* binding */ ATTRS),\n/* harmony export */   DOCUMENT_MODE: () => (/* binding */ DOCUMENT_MODE),\n/* harmony export */   NS: () => (/* binding */ NS),\n/* harmony export */   NUMBERED_HEADERS: () => (/* binding */ NUMBERED_HEADERS),\n/* harmony export */   SPECIAL_ELEMENTS: () => (/* binding */ SPECIAL_ELEMENTS),\n/* harmony export */   TAG_ID: () => (/* binding */ TAG_ID),\n/* harmony export */   TAG_NAMES: () => (/* binding */ TAG_NAMES),\n/* harmony export */   getTagID: () => (/* binding */ getTagID),\n/* harmony export */   hasUnescapedText: () => (/* binding */ hasUnescapedText)\n/* harmony export */ });\n/** All valid namespaces in HTML. */ var NS;\n(function(NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nvar ATTRS;\n(function(ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */ var DOCUMENT_MODE;\n(function(DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nvar TAG_NAMES;\n(function(TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */ var TAG_ID;\n(function(TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [\n        TAG_NAMES.A,\n        TAG_ID.A\n    ],\n    [\n        TAG_NAMES.ADDRESS,\n        TAG_ID.ADDRESS\n    ],\n    [\n        TAG_NAMES.ANNOTATION_XML,\n        TAG_ID.ANNOTATION_XML\n    ],\n    [\n        TAG_NAMES.APPLET,\n        TAG_ID.APPLET\n    ],\n    [\n        TAG_NAMES.AREA,\n        TAG_ID.AREA\n    ],\n    [\n        TAG_NAMES.ARTICLE,\n        TAG_ID.ARTICLE\n    ],\n    [\n        TAG_NAMES.ASIDE,\n        TAG_ID.ASIDE\n    ],\n    [\n        TAG_NAMES.B,\n        TAG_ID.B\n    ],\n    [\n        TAG_NAMES.BASE,\n        TAG_ID.BASE\n    ],\n    [\n        TAG_NAMES.BASEFONT,\n        TAG_ID.BASEFONT\n    ],\n    [\n        TAG_NAMES.BGSOUND,\n        TAG_ID.BGSOUND\n    ],\n    [\n        TAG_NAMES.BIG,\n        TAG_ID.BIG\n    ],\n    [\n        TAG_NAMES.BLOCKQUOTE,\n        TAG_ID.BLOCKQUOTE\n    ],\n    [\n        TAG_NAMES.BODY,\n        TAG_ID.BODY\n    ],\n    [\n        TAG_NAMES.BR,\n        TAG_ID.BR\n    ],\n    [\n        TAG_NAMES.BUTTON,\n        TAG_ID.BUTTON\n    ],\n    [\n        TAG_NAMES.CAPTION,\n        TAG_ID.CAPTION\n    ],\n    [\n        TAG_NAMES.CENTER,\n        TAG_ID.CENTER\n    ],\n    [\n        TAG_NAMES.CODE,\n        TAG_ID.CODE\n    ],\n    [\n        TAG_NAMES.COL,\n        TAG_ID.COL\n    ],\n    [\n        TAG_NAMES.COLGROUP,\n        TAG_ID.COLGROUP\n    ],\n    [\n        TAG_NAMES.DD,\n        TAG_ID.DD\n    ],\n    [\n        TAG_NAMES.DESC,\n        TAG_ID.DESC\n    ],\n    [\n        TAG_NAMES.DETAILS,\n        TAG_ID.DETAILS\n    ],\n    [\n        TAG_NAMES.DIALOG,\n        TAG_ID.DIALOG\n    ],\n    [\n        TAG_NAMES.DIR,\n        TAG_ID.DIR\n    ],\n    [\n        TAG_NAMES.DIV,\n        TAG_ID.DIV\n    ],\n    [\n        TAG_NAMES.DL,\n        TAG_ID.DL\n    ],\n    [\n        TAG_NAMES.DT,\n        TAG_ID.DT\n    ],\n    [\n        TAG_NAMES.EM,\n        TAG_ID.EM\n    ],\n    [\n        TAG_NAMES.EMBED,\n        TAG_ID.EMBED\n    ],\n    [\n        TAG_NAMES.FIELDSET,\n        TAG_ID.FIELDSET\n    ],\n    [\n        TAG_NAMES.FIGCAPTION,\n        TAG_ID.FIGCAPTION\n    ],\n    [\n        TAG_NAMES.FIGURE,\n        TAG_ID.FIGURE\n    ],\n    [\n        TAG_NAMES.FONT,\n        TAG_ID.FONT\n    ],\n    [\n        TAG_NAMES.FOOTER,\n        TAG_ID.FOOTER\n    ],\n    [\n        TAG_NAMES.FOREIGN_OBJECT,\n        TAG_ID.FOREIGN_OBJECT\n    ],\n    [\n        TAG_NAMES.FORM,\n        TAG_ID.FORM\n    ],\n    [\n        TAG_NAMES.FRAME,\n        TAG_ID.FRAME\n    ],\n    [\n        TAG_NAMES.FRAMESET,\n        TAG_ID.FRAMESET\n    ],\n    [\n        TAG_NAMES.H1,\n        TAG_ID.H1\n    ],\n    [\n        TAG_NAMES.H2,\n        TAG_ID.H2\n    ],\n    [\n        TAG_NAMES.H3,\n        TAG_ID.H3\n    ],\n    [\n        TAG_NAMES.H4,\n        TAG_ID.H4\n    ],\n    [\n        TAG_NAMES.H5,\n        TAG_ID.H5\n    ],\n    [\n        TAG_NAMES.H6,\n        TAG_ID.H6\n    ],\n    [\n        TAG_NAMES.HEAD,\n        TAG_ID.HEAD\n    ],\n    [\n        TAG_NAMES.HEADER,\n        TAG_ID.HEADER\n    ],\n    [\n        TAG_NAMES.HGROUP,\n        TAG_ID.HGROUP\n    ],\n    [\n        TAG_NAMES.HR,\n        TAG_ID.HR\n    ],\n    [\n        TAG_NAMES.HTML,\n        TAG_ID.HTML\n    ],\n    [\n        TAG_NAMES.I,\n        TAG_ID.I\n    ],\n    [\n        TAG_NAMES.IMG,\n        TAG_ID.IMG\n    ],\n    [\n        TAG_NAMES.IMAGE,\n        TAG_ID.IMAGE\n    ],\n    [\n        TAG_NAMES.INPUT,\n        TAG_ID.INPUT\n    ],\n    [\n        TAG_NAMES.IFRAME,\n        TAG_ID.IFRAME\n    ],\n    [\n        TAG_NAMES.KEYGEN,\n        TAG_ID.KEYGEN\n    ],\n    [\n        TAG_NAMES.LABEL,\n        TAG_ID.LABEL\n    ],\n    [\n        TAG_NAMES.LI,\n        TAG_ID.LI\n    ],\n    [\n        TAG_NAMES.LINK,\n        TAG_ID.LINK\n    ],\n    [\n        TAG_NAMES.LISTING,\n        TAG_ID.LISTING\n    ],\n    [\n        TAG_NAMES.MAIN,\n        TAG_ID.MAIN\n    ],\n    [\n        TAG_NAMES.MALIGNMARK,\n        TAG_ID.MALIGNMARK\n    ],\n    [\n        TAG_NAMES.MARQUEE,\n        TAG_ID.MARQUEE\n    ],\n    [\n        TAG_NAMES.MATH,\n        TAG_ID.MATH\n    ],\n    [\n        TAG_NAMES.MENU,\n        TAG_ID.MENU\n    ],\n    [\n        TAG_NAMES.META,\n        TAG_ID.META\n    ],\n    [\n        TAG_NAMES.MGLYPH,\n        TAG_ID.MGLYPH\n    ],\n    [\n        TAG_NAMES.MI,\n        TAG_ID.MI\n    ],\n    [\n        TAG_NAMES.MO,\n        TAG_ID.MO\n    ],\n    [\n        TAG_NAMES.MN,\n        TAG_ID.MN\n    ],\n    [\n        TAG_NAMES.MS,\n        TAG_ID.MS\n    ],\n    [\n        TAG_NAMES.MTEXT,\n        TAG_ID.MTEXT\n    ],\n    [\n        TAG_NAMES.NAV,\n        TAG_ID.NAV\n    ],\n    [\n        TAG_NAMES.NOBR,\n        TAG_ID.NOBR\n    ],\n    [\n        TAG_NAMES.NOFRAMES,\n        TAG_ID.NOFRAMES\n    ],\n    [\n        TAG_NAMES.NOEMBED,\n        TAG_ID.NOEMBED\n    ],\n    [\n        TAG_NAMES.NOSCRIPT,\n        TAG_ID.NOSCRIPT\n    ],\n    [\n        TAG_NAMES.OBJECT,\n        TAG_ID.OBJECT\n    ],\n    [\n        TAG_NAMES.OL,\n        TAG_ID.OL\n    ],\n    [\n        TAG_NAMES.OPTGROUP,\n        TAG_ID.OPTGROUP\n    ],\n    [\n        TAG_NAMES.OPTION,\n        TAG_ID.OPTION\n    ],\n    [\n        TAG_NAMES.P,\n        TAG_ID.P\n    ],\n    [\n        TAG_NAMES.PARAM,\n        TAG_ID.PARAM\n    ],\n    [\n        TAG_NAMES.PLAINTEXT,\n        TAG_ID.PLAINTEXT\n    ],\n    [\n        TAG_NAMES.PRE,\n        TAG_ID.PRE\n    ],\n    [\n        TAG_NAMES.RB,\n        TAG_ID.RB\n    ],\n    [\n        TAG_NAMES.RP,\n        TAG_ID.RP\n    ],\n    [\n        TAG_NAMES.RT,\n        TAG_ID.RT\n    ],\n    [\n        TAG_NAMES.RTC,\n        TAG_ID.RTC\n    ],\n    [\n        TAG_NAMES.RUBY,\n        TAG_ID.RUBY\n    ],\n    [\n        TAG_NAMES.S,\n        TAG_ID.S\n    ],\n    [\n        TAG_NAMES.SCRIPT,\n        TAG_ID.SCRIPT\n    ],\n    [\n        TAG_NAMES.SEARCH,\n        TAG_ID.SEARCH\n    ],\n    [\n        TAG_NAMES.SECTION,\n        TAG_ID.SECTION\n    ],\n    [\n        TAG_NAMES.SELECT,\n        TAG_ID.SELECT\n    ],\n    [\n        TAG_NAMES.SOURCE,\n        TAG_ID.SOURCE\n    ],\n    [\n        TAG_NAMES.SMALL,\n        TAG_ID.SMALL\n    ],\n    [\n        TAG_NAMES.SPAN,\n        TAG_ID.SPAN\n    ],\n    [\n        TAG_NAMES.STRIKE,\n        TAG_ID.STRIKE\n    ],\n    [\n        TAG_NAMES.STRONG,\n        TAG_ID.STRONG\n    ],\n    [\n        TAG_NAMES.STYLE,\n        TAG_ID.STYLE\n    ],\n    [\n        TAG_NAMES.SUB,\n        TAG_ID.SUB\n    ],\n    [\n        TAG_NAMES.SUMMARY,\n        TAG_ID.SUMMARY\n    ],\n    [\n        TAG_NAMES.SUP,\n        TAG_ID.SUP\n    ],\n    [\n        TAG_NAMES.TABLE,\n        TAG_ID.TABLE\n    ],\n    [\n        TAG_NAMES.TBODY,\n        TAG_ID.TBODY\n    ],\n    [\n        TAG_NAMES.TEMPLATE,\n        TAG_ID.TEMPLATE\n    ],\n    [\n        TAG_NAMES.TEXTAREA,\n        TAG_ID.TEXTAREA\n    ],\n    [\n        TAG_NAMES.TFOOT,\n        TAG_ID.TFOOT\n    ],\n    [\n        TAG_NAMES.TD,\n        TAG_ID.TD\n    ],\n    [\n        TAG_NAMES.TH,\n        TAG_ID.TH\n    ],\n    [\n        TAG_NAMES.THEAD,\n        TAG_ID.THEAD\n    ],\n    [\n        TAG_NAMES.TITLE,\n        TAG_ID.TITLE\n    ],\n    [\n        TAG_NAMES.TR,\n        TAG_ID.TR\n    ],\n    [\n        TAG_NAMES.TRACK,\n        TAG_ID.TRACK\n    ],\n    [\n        TAG_NAMES.TT,\n        TAG_ID.TT\n    ],\n    [\n        TAG_NAMES.U,\n        TAG_ID.U\n    ],\n    [\n        TAG_NAMES.UL,\n        TAG_ID.UL\n    ],\n    [\n        TAG_NAMES.SVG,\n        TAG_ID.SVG\n    ],\n    [\n        TAG_NAMES.VAR,\n        TAG_ID.VAR\n    ],\n    [\n        TAG_NAMES.WBR,\n        TAG_ID.WBR\n    ],\n    [\n        TAG_NAMES.XMP,\n        TAG_ID.XMP\n    ]\n]);\nfunction getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nconst SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP\n    ]),\n    [NS.MATHML]: new Set([\n        $.MI,\n        $.MO,\n        $.MN,\n        $.MS,\n        $.MTEXT,\n        $.ANNOTATION_XML\n    ]),\n    [NS.SVG]: new Set([\n        $.TITLE,\n        $.FOREIGN_OBJECT,\n        $.DESC\n    ]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set()\n};\nconst NUMBERED_HEADERS = new Set([\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6\n]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT\n]);\nfunction hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || scriptingEnabled && tn === TAG_NAMES.NOSCRIPT;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/html.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/common/token.js":
/*!**************************************************!*\
  !*** ./node_modules/parse5/dist/common/token.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenType: () => (/* binding */ TokenType),\n/* harmony export */   getTokenAttr: () => (/* binding */ getTokenAttr)\n/* harmony export */ });\nvar TokenType;\n(function(TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nfunction getTokenAttr(token, attrName) {\n    for(let i = token.attrs.length - 1; i >= 0; i--){\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvY29tbW9uL3Rva2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBSUEsVUFBVTtBQUNwQixVQUFVQSxTQUFTO0lBQ2hCQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxZQUFZLEdBQUcsRUFBRSxHQUFHO0lBQ3hDQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxpQkFBaUIsR0FBRyxFQUFFLEdBQUc7SUFDN0NBLFNBQVMsQ0FBQ0EsU0FBUyxDQUFDLHVCQUF1QixHQUFHLEVBQUUsR0FBRztJQUNuREEsU0FBUyxDQUFDQSxTQUFTLENBQUMsWUFBWSxHQUFHLEVBQUUsR0FBRztJQUN4Q0EsU0FBUyxDQUFDQSxTQUFTLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRztJQUN0Q0EsU0FBUyxDQUFDQSxTQUFTLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRztJQUN0Q0EsU0FBUyxDQUFDQSxTQUFTLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRztJQUN0Q0EsU0FBUyxDQUFDQSxTQUFTLENBQUMsTUFBTSxHQUFHLEVBQUUsR0FBRztJQUNsQ0EsU0FBUyxDQUFDQSxTQUFTLENBQUMsY0FBYyxHQUFHLEVBQUUsR0FBRztBQUM5QyxHQUFHQSxhQUFjQSxDQUFBQSxZQUFZLENBQUM7QUFDdkIsU0FBU0MsYUFBYUMsS0FBSyxFQUFFQyxRQUFRO0lBQ3hDLElBQUssSUFBSUMsSUFBSUYsTUFBTUcsS0FBSyxDQUFDQyxNQUFNLEdBQUcsR0FBR0YsS0FBSyxHQUFHQSxJQUFLO1FBQzlDLElBQUlGLE1BQU1HLEtBQUssQ0FBQ0QsRUFBRSxDQUFDRyxJQUFJLEtBQUtKLFVBQVU7WUFDbEMsT0FBT0QsTUFBTUcsS0FBSyxDQUFDRCxFQUFFLENBQUNJLEtBQUs7UUFDL0I7SUFDSjtJQUNBLE9BQU87QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL2FsYXNrYS13YWl0bGlzdC1hcGkvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvY29tbW9uL3Rva2VuLmpzPzYzZTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBUb2tlblR5cGU7XG4oZnVuY3Rpb24gKFRva2VuVHlwZSkge1xuICAgIFRva2VuVHlwZVtUb2tlblR5cGVbXCJDSEFSQUNURVJcIl0gPSAwXSA9IFwiQ0hBUkFDVEVSXCI7XG4gICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIk5VTExfQ0hBUkFDVEVSXCJdID0gMV0gPSBcIk5VTExfQ0hBUkFDVEVSXCI7XG4gICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIldISVRFU1BBQ0VfQ0hBUkFDVEVSXCJdID0gMl0gPSBcIldISVRFU1BBQ0VfQ0hBUkFDVEVSXCI7XG4gICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIlNUQVJUX1RBR1wiXSA9IDNdID0gXCJTVEFSVF9UQUdcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiRU5EX1RBR1wiXSA9IDRdID0gXCJFTkRfVEFHXCI7XG4gICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIkNPTU1FTlRcIl0gPSA1XSA9IFwiQ09NTUVOVFwiO1xuICAgIFRva2VuVHlwZVtUb2tlblR5cGVbXCJET0NUWVBFXCJdID0gNl0gPSBcIkRPQ1RZUEVcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiRU9GXCJdID0gN10gPSBcIkVPRlwiO1xuICAgIFRva2VuVHlwZVtUb2tlblR5cGVbXCJISUJFUk5BVElPTlwiXSA9IDhdID0gXCJISUJFUk5BVElPTlwiO1xufSkoVG9rZW5UeXBlIHx8IChUb2tlblR5cGUgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFRva2VuQXR0cih0b2tlbiwgYXR0ck5hbWUpIHtcbiAgICBmb3IgKGxldCBpID0gdG9rZW4uYXR0cnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgaWYgKHRva2VuLmF0dHJzW2ldLm5hbWUgPT09IGF0dHJOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gdG9rZW4uYXR0cnNbaV0udmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG4iXSwibmFtZXMiOlsiVG9rZW5UeXBlIiwiZ2V0VG9rZW5BdHRyIiwidG9rZW4iLCJhdHRyTmFtZSIsImkiLCJhdHRycyIsImxlbmd0aCIsIm5hbWUiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/common/unicode.js":
/*!****************************************************!*\
  !*** ./node_modules/parse5/dist/common/unicode.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CODE_POINTS: () => (/* binding */ CODE_POINTS),\n/* harmony export */   REPLACEMENT_CHARACTER: () => (/* binding */ REPLACEMENT_CHARACTER),\n/* harmony export */   SEQUENCES: () => (/* binding */ SEQUENCES),\n/* harmony export */   getSurrogatePairCodePoint: () => (/* binding */ getSurrogatePairCodePoint),\n/* harmony export */   isControlCodePoint: () => (/* binding */ isControlCodePoint),\n/* harmony export */   isSurrogate: () => (/* binding */ isSurrogate),\n/* harmony export */   isSurrogatePair: () => (/* binding */ isSurrogatePair),\n/* harmony export */   isUndefinedCodePoint: () => (/* binding */ isUndefinedCodePoint)\n/* harmony export */ });\nconst UNDEFINED_CODE_POINTS = new Set([\n    65534,\n    65535,\n    131070,\n    131071,\n    196606,\n    196607,\n    262142,\n    262143,\n    327678,\n    327679,\n    393214,\n    393215,\n    458750,\n    458751,\n    524286,\n    524287,\n    589822,\n    589823,\n    655358,\n    655359,\n    720894,\n    720895,\n    786430,\n    786431,\n    851966,\n    851967,\n    917502,\n    917503,\n    983038,\n    983039,\n    1048574,\n    1048575,\n    1114110,\n    1114111\n]);\nconst REPLACEMENT_CHARACTER = \"�\";\nvar CODE_POINTS;\n(function(CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nconst SEQUENCES = {\n    DASH_DASH: \"--\",\n    CDATA_START: \"[CDATA[\",\n    DOCTYPE: \"doctype\",\n    SCRIPT: \"script\",\n    PUBLIC: \"public\",\n    SYSTEM: \"system\"\n};\n//Surrogates\nfunction isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nfunction isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nfunction getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nfunction isControlCodePoint(cp) {\n    return cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f || cp >= 0x7f && cp <= 0x9f;\n}\nfunction isUndefinedCodePoint(cp) {\n    return cp >= 64976 && cp <= 65007 || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvY29tbW9uL3VuaWNvZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxNQUFNQSx3QkFBd0IsSUFBSUMsSUFBSTtJQUNsQztJQUFPO0lBQU87SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQzlFO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQ3hFO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQ3hFO0lBQVM7SUFBUztDQUNyQjtBQUNNLE1BQU1DLHdCQUF3QixJQUFTO0FBQ3ZDLElBQUlDLFlBQVk7QUFDdEIsVUFBVUEsV0FBVztJQUNsQkEsV0FBVyxDQUFDQSxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxHQUFHO0lBQ3ZDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxPQUFPLEdBQUcsRUFBRSxHQUFHO0lBQ3ZDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxhQUFhLEdBQUcsRUFBRSxHQUFHO0lBQzdDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxrQkFBa0IsR0FBRyxHQUFHLEdBQUc7SUFDbkRBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLFlBQVksR0FBRyxHQUFHLEdBQUc7SUFDN0NBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLFlBQVksR0FBRyxHQUFHLEdBQUc7SUFDN0NBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLFFBQVEsR0FBRyxHQUFHLEdBQUc7SUFDekNBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLG1CQUFtQixHQUFHLEdBQUcsR0FBRztJQUNwREEsV0FBVyxDQUFDQSxXQUFXLENBQUMsaUJBQWlCLEdBQUcsR0FBRyxHQUFHO0lBQ2xEQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHO0lBQzdDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxhQUFhLEdBQUcsR0FBRyxHQUFHO0lBQzlDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxlQUFlLEdBQUcsR0FBRyxHQUFHO0lBQ2hEQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxHQUFHO0lBQzNDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxHQUFHO0lBQzNDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxHQUFHO0lBQzNDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHO0lBQzdDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxpQkFBaUIsR0FBRyxHQUFHLEdBQUc7SUFDbERBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLGNBQWMsR0FBRyxHQUFHLEdBQUc7SUFDL0NBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLG9CQUFvQixHQUFHLEdBQUcsR0FBRztJQUNyREEsV0FBVyxDQUFDQSxXQUFXLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxHQUFHO0lBQ2pEQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxrQkFBa0IsR0FBRyxHQUFHLEdBQUc7SUFDbkRBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLGtCQUFrQixHQUFHLEdBQUcsR0FBRztJQUNuREEsV0FBVyxDQUFDQSxXQUFXLENBQUMsdUJBQXVCLEdBQUcsR0FBRyxHQUFHO0lBQ3hEQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxlQUFlLEdBQUcsR0FBRyxHQUFHO0lBQ2hEQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxnQkFBZ0IsR0FBRyxHQUFHLEdBQUc7SUFDakRBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLGdCQUFnQixHQUFHLElBQUksR0FBRztBQUN0RCxHQUFHQSxlQUFnQkEsQ0FBQUEsY0FBYyxDQUFDO0FBQzNCLE1BQU1DLFlBQVk7SUFDckJDLFdBQVc7SUFDWEMsYUFBYTtJQUNiQyxTQUFTO0lBQ1RDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxRQUFRO0FBQ1osRUFBRTtBQUNGLFlBQVk7QUFDTCxTQUFTQyxZQUFZQyxFQUFFO0lBQzFCLE9BQU9BLE1BQU0sU0FBU0EsTUFBTTtBQUNoQztBQUNPLFNBQVNDLGdCQUFnQkQsRUFBRTtJQUM5QixPQUFPQSxNQUFNLFNBQVNBLE1BQU07QUFDaEM7QUFDTyxTQUFTRSwwQkFBMEJDLEdBQUcsRUFBRUMsR0FBRztJQUM5QyxPQUFPLENBQUNELE1BQU0sS0FBSSxJQUFLLE9BQU8sT0FBT0M7QUFDekM7QUFDQSwyQ0FBMkM7QUFDcEMsU0FBU0MsbUJBQW1CTCxFQUFFO0lBQ2pDLE9BQVEsT0FBUSxRQUFRQSxPQUFPLFFBQVFBLE9BQU8sUUFBUUEsT0FBTyxRQUFRQSxPQUFPLFFBQVFBLE1BQU0sUUFBUUEsTUFBTSxRQUNuR0EsTUFBTSxRQUFRQSxNQUFNO0FBQzdCO0FBQ08sU0FBU00scUJBQXFCTixFQUFFO0lBQ25DLE9BQU8sTUFBTyxTQUFTQSxNQUFNLFNBQVVaLHNCQUFzQm1CLEdBQUcsQ0FBQ1A7QUFDckUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbGFza2Etd2FpdGxpc3QtYXBpLy4vbm9kZV9tb2R1bGVzL3BhcnNlNS9kaXN0L2NvbW1vbi91bmljb2RlLmpzPzVkOGYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVU5ERUZJTkVEX0NPREVfUE9JTlRTID0gbmV3IFNldChbXG4gICAgNjU1MzQsIDY1NTM1LCAxMzEwNzAsIDEzMTA3MSwgMTk2NjA2LCAxOTY2MDcsIDI2MjE0MiwgMjYyMTQzLCAzMjc2NzgsIDMyNzY3OSwgMzkzMjE0LFxuICAgIDM5MzIxNSwgNDU4NzUwLCA0NTg3NTEsIDUyNDI4NiwgNTI0Mjg3LCA1ODk4MjIsIDU4OTgyMywgNjU1MzU4LCA2NTUzNTksIDcyMDg5NCxcbiAgICA3MjA4OTUsIDc4NjQzMCwgNzg2NDMxLCA4NTE5NjYsIDg1MTk2NywgOTE3NTAyLCA5MTc1MDMsIDk4MzAzOCwgOTgzMDM5LCAxMDQ4NTc0LFxuICAgIDEwNDg1NzUsIDExMTQxMTAsIDExMTQxMTEsXG5dKTtcbmV4cG9ydCBjb25zdCBSRVBMQUNFTUVOVF9DSEFSQUNURVIgPSAnXFx1RkZGRCc7XG5leHBvcnQgdmFyIENPREVfUE9JTlRTO1xuKGZ1bmN0aW9uIChDT0RFX1BPSU5UUykge1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiRU9GXCJdID0gLTFdID0gXCJFT0ZcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIk5VTExcIl0gPSAwXSA9IFwiTlVMTFwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiVEFCVUxBVElPTlwiXSA9IDldID0gXCJUQUJVTEFUSU9OXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJDQVJSSUFHRV9SRVRVUk5cIl0gPSAxM10gPSBcIkNBUlJJQUdFX1JFVFVSTlwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiTElORV9GRUVEXCJdID0gMTBdID0gXCJMSU5FX0ZFRURcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkZPUk1fRkVFRFwiXSA9IDEyXSA9IFwiRk9STV9GRUVEXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJTUEFDRVwiXSA9IDMyXSA9IFwiU1BBQ0VcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkVYQ0xBTUFUSU9OX01BUktcIl0gPSAzM10gPSBcIkVYQ0xBTUFUSU9OX01BUktcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIlFVT1RBVElPTl9NQVJLXCJdID0gMzRdID0gXCJRVU9UQVRJT05fTUFSS1wiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiQU1QRVJTQU5EXCJdID0gMzhdID0gXCJBTVBFUlNBTkRcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkFQT1NUUk9QSEVcIl0gPSAzOV0gPSBcIkFQT1NUUk9QSEVcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkhZUEhFTl9NSU5VU1wiXSA9IDQ1XSA9IFwiSFlQSEVOX01JTlVTXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJTT0xJRFVTXCJdID0gNDddID0gXCJTT0xJRFVTXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJESUdJVF8wXCJdID0gNDhdID0gXCJESUdJVF8wXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJESUdJVF85XCJdID0gNTddID0gXCJESUdJVF85XCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJTRU1JQ09MT05cIl0gPSA1OV0gPSBcIlNFTUlDT0xPTlwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiTEVTU19USEFOX1NJR05cIl0gPSA2MF0gPSBcIkxFU1NfVEhBTl9TSUdOXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJFUVVBTFNfU0lHTlwiXSA9IDYxXSA9IFwiRVFVQUxTX1NJR05cIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkdSRUFURVJfVEhBTl9TSUdOXCJdID0gNjJdID0gXCJHUkVBVEVSX1RIQU5fU0lHTlwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiUVVFU1RJT05fTUFSS1wiXSA9IDYzXSA9IFwiUVVFU1RJT05fTUFSS1wiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiTEFUSU5fQ0FQSVRBTF9BXCJdID0gNjVdID0gXCJMQVRJTl9DQVBJVEFMX0FcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkxBVElOX0NBUElUQUxfWlwiXSA9IDkwXSA9IFwiTEFUSU5fQ0FQSVRBTF9aXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJSSUdIVF9TUVVBUkVfQlJBQ0tFVFwiXSA9IDkzXSA9IFwiUklHSFRfU1FVQVJFX0JSQUNLRVRcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkdSQVZFX0FDQ0VOVFwiXSA9IDk2XSA9IFwiR1JBVkVfQUNDRU5UXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJMQVRJTl9TTUFMTF9BXCJdID0gOTddID0gXCJMQVRJTl9TTUFMTF9BXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJMQVRJTl9TTUFMTF9aXCJdID0gMTIyXSA9IFwiTEFUSU5fU01BTExfWlwiO1xufSkoQ09ERV9QT0lOVFMgfHwgKENPREVfUE9JTlRTID0ge30pKTtcbmV4cG9ydCBjb25zdCBTRVFVRU5DRVMgPSB7XG4gICAgREFTSF9EQVNIOiAnLS0nLFxuICAgIENEQVRBX1NUQVJUOiAnW0NEQVRBWycsXG4gICAgRE9DVFlQRTogJ2RvY3R5cGUnLFxuICAgIFNDUklQVDogJ3NjcmlwdCcsXG4gICAgUFVCTElDOiAncHVibGljJyxcbiAgICBTWVNURU06ICdzeXN0ZW0nLFxufTtcbi8vU3Vycm9nYXRlc1xuZXhwb3J0IGZ1bmN0aW9uIGlzU3Vycm9nYXRlKGNwKSB7XG4gICAgcmV0dXJuIGNwID49IDU1Mjk2ICYmIGNwIDw9IDU3MzQzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU3Vycm9nYXRlUGFpcihjcCkge1xuICAgIHJldHVybiBjcCA+PSA1NjMyMCAmJiBjcCA8PSA1NzM0Mztcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdXJyb2dhdGVQYWlyQ29kZVBvaW50KGNwMSwgY3AyKSB7XG4gICAgcmV0dXJuIChjcDEgLSA1NTI5NikgKiAxMDI0ICsgOTIxNiArIGNwMjtcbn1cbi8vTk9URTogZXhjbHVkaW5nIE5VTEwgYW5kIEFTQ0lJIHdoaXRlc3BhY2VcbmV4cG9ydCBmdW5jdGlvbiBpc0NvbnRyb2xDb2RlUG9pbnQoY3ApIHtcbiAgICByZXR1cm4gKChjcCAhPT0gMHgyMCAmJiBjcCAhPT0gMHgwYSAmJiBjcCAhPT0gMHgwZCAmJiBjcCAhPT0gMHgwOSAmJiBjcCAhPT0gMHgwYyAmJiBjcCA+PSAweDAxICYmIGNwIDw9IDB4MWYpIHx8XG4gICAgICAgIChjcCA+PSAweDdmICYmIGNwIDw9IDB4OWYpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1VuZGVmaW5lZENvZGVQb2ludChjcCkge1xuICAgIHJldHVybiAoY3AgPj0gNjQ5NzYgJiYgY3AgPD0gNjUwMDcpIHx8IFVOREVGSU5FRF9DT0RFX1BPSU5UUy5oYXMoY3ApO1xufVxuIl0sIm5hbWVzIjpbIlVOREVGSU5FRF9DT0RFX1BPSU5UUyIsIlNldCIsIlJFUExBQ0VNRU5UX0NIQVJBQ1RFUiIsIkNPREVfUE9JTlRTIiwiU0VRVUVOQ0VTIiwiREFTSF9EQVNIIiwiQ0RBVEFfU1RBUlQiLCJET0NUWVBFIiwiU0NSSVBUIiwiUFVCTElDIiwiU1lTVEVNIiwiaXNTdXJyb2dhdGUiLCJjcCIsImlzU3Vycm9nYXRlUGFpciIsImdldFN1cnJvZ2F0ZVBhaXJDb2RlUG9pbnQiLCJjcDEiLCJjcDIiLCJpc0NvbnRyb2xDb2RlUG9pbnQiLCJpc1VuZGVmaW5lZENvZGVQb2ludCIsImhhcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/unicode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/index.js":
/*!*******************************************!*\
  !*** ./node_modules/parse5/dist/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorCodes: () => (/* reexport safe */ _common_error_codes_js__WEBPACK_IMPORTED_MODULE_3__.ERR),\n/* harmony export */   Parser: () => (/* reexport safe */ _parser_index_js__WEBPACK_IMPORTED_MODULE_0__.Parser),\n/* harmony export */   Token: () => (/* reexport module object */ _common_token_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__.Tokenizer),\n/* harmony export */   TokenizerMode: () => (/* reexport safe */ _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__.TokenizerMode),\n/* harmony export */   defaultTreeAdapter: () => (/* reexport safe */ _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_1__.defaultTreeAdapter),\n/* harmony export */   foreignContent: () => (/* reexport module object */ _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   html: () => (/* reexport module object */ _common_html_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parseFragment: () => (/* binding */ parseFragment),\n/* harmony export */   serialize: () => (/* reexport safe */ _serializer_index_js__WEBPACK_IMPORTED_MODULE_2__.serialize),\n/* harmony export */   serializeOuter: () => (/* reexport safe */ _serializer_index_js__WEBPACK_IMPORTED_MODULE_2__.serializeOuter)\n/* harmony export */ });\n/* harmony import */ var _parser_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser/index.js */ \"(rsc)/./node_modules/parse5/dist/parser/index.js\");\n/* harmony import */ var _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tree-adapters/default.js */ \"(rsc)/./node_modules/parse5/dist/tree-adapters/default.js\");\n/* harmony import */ var _serializer_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer/index.js */ \"(rsc)/./node_modules/parse5/dist/serializer/index.js\");\n/* harmony import */ var _common_error_codes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/error-codes.js */ \"(rsc)/./node_modules/parse5/dist/common/error-codes.js\");\n/* harmony import */ var _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/foreign-content.js */ \"(rsc)/./node_modules/parse5/dist/common/foreign-content.js\");\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n/* harmony import */ var _common_token_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common/token.js */ \"(rsc)/./node_modules/parse5/dist/common/token.js\");\n/* harmony import */ var _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tokenizer/index.js */ \"(rsc)/./node_modules/parse5/dist/tokenizer/index.js\");\n\n\n\n\n\n/** @internal */ \n\n\n/** @internal */ \n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */ function parse(html, options) {\n    return _parser_index_js__WEBPACK_IMPORTED_MODULE_0__.Parser.parse(html, options);\n}\nfunction parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === \"string\") {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = _parser_index_js__WEBPACK_IMPORTED_MODULE_0__.Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMkM7QUFDcUI7QUFDSjtBQUNNO0FBQ047QUFDNUQsY0FBYyxHQUNnRDtBQUNyQjtBQUNFO0FBQzNDLGNBQWMsR0FDa0Q7QUFDaEUsYUFBYTtBQUNiOzs7Ozs7Ozs7Ozs7Ozs7O0NBZ0JDLEdBQ00sU0FBU1csTUFBTUosSUFBSSxFQUFFSyxPQUFPO0lBQy9CLE9BQU9aLG9EQUFNQSxDQUFDVyxLQUFLLENBQUNKLE1BQU1LO0FBQzlCO0FBQ08sU0FBU0MsY0FBY0MsZUFBZSxFQUFFUCxJQUFJLEVBQUVLLE9BQU87SUFDeEQsSUFBSSxPQUFPRSxvQkFBb0IsVUFBVTtRQUNyQ0YsVUFBVUw7UUFDVkEsT0FBT087UUFDUEEsa0JBQWtCO0lBQ3RCO0lBQ0EsTUFBTUMsU0FBU2Ysb0RBQU1BLENBQUNnQixpQkFBaUIsQ0FBQ0YsaUJBQWlCRjtJQUN6REcsT0FBT0UsU0FBUyxDQUFDQyxLQUFLLENBQUNYLE1BQU07SUFDN0IsT0FBT1EsT0FBT0ksV0FBVztBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2FsYXNrYS13YWl0bGlzdC1hcGkvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvaW5kZXguanM/ZTFhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYXJzZXIgfSBmcm9tICcuL3BhcnNlci9pbmRleC5qcyc7XG5leHBvcnQgeyBkZWZhdWx0VHJlZUFkYXB0ZXIgfSBmcm9tICcuL3RyZWUtYWRhcHRlcnMvZGVmYXVsdC5qcyc7XG5leHBvcnQgeyAvKiogQGludGVybmFsICovIFBhcnNlciB9IGZyb20gJy4vcGFyc2VyL2luZGV4LmpzJztcbmV4cG9ydCB7IHNlcmlhbGl6ZSwgc2VyaWFsaXplT3V0ZXIgfSBmcm9tICcuL3NlcmlhbGl6ZXIvaW5kZXguanMnO1xuZXhwb3J0IHsgRVJSIGFzIEVycm9yQ29kZXMgfSBmcm9tICcuL2NvbW1vbi9lcnJvci1jb2Rlcy5qcyc7XG4vKiogQGludGVybmFsICovXG5leHBvcnQgKiBhcyBmb3JlaWduQ29udGVudCBmcm9tICcuL2NvbW1vbi9mb3JlaWduLWNvbnRlbnQuanMnO1xuZXhwb3J0ICogYXMgaHRtbCBmcm9tICcuL2NvbW1vbi9odG1sLmpzJztcbmV4cG9ydCAqIGFzIFRva2VuIGZyb20gJy4vY29tbW9uL3Rva2VuLmpzJztcbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCB7IFRva2VuaXplciwgVG9rZW5pemVyTW9kZSB9IGZyb20gJy4vdG9rZW5pemVyL2luZGV4LmpzJztcbi8vIFNob3J0aGFuZHNcbi8qKlxuICogUGFyc2VzIGFuIEhUTUwgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSBodG1sIElucHV0IEhUTUwgc3RyaW5nLlxuICogQHBhcmFtIG9wdGlvbnMgUGFyc2luZyBvcHRpb25zLlxuICogQHJldHVybnMgRG9jdW1lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBwYXJzZTUgPSByZXF1aXJlKCdwYXJzZTUnKTtcbiAqXG4gKiBjb25zdCBkb2N1bWVudCA9IHBhcnNlNS5wYXJzZSgnPCFET0NUWVBFIGh0bWw+PGh0bWw+PGhlYWQ+PC9oZWFkPjxib2R5PkhpIHRoZXJlITwvYm9keT48L2h0bWw+Jyk7XG4gKlxuICogY29uc29sZS5sb2coZG9jdW1lbnQuY2hpbGROb2Rlc1sxXS50YWdOYW1lKTsgLy8+ICdodG1sJ1xuICpgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlKGh0bWwsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gUGFyc2VyLnBhcnNlKGh0bWwsIG9wdGlvbnMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRnJhZ21lbnQoZnJhZ21lbnRDb250ZXh0LCBodG1sLCBvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBmcmFnbWVudENvbnRleHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG9wdGlvbnMgPSBodG1sO1xuICAgICAgICBodG1sID0gZnJhZ21lbnRDb250ZXh0O1xuICAgICAgICBmcmFnbWVudENvbnRleHQgPSBudWxsO1xuICAgIH1cbiAgICBjb25zdCBwYXJzZXIgPSBQYXJzZXIuZ2V0RnJhZ21lbnRQYXJzZXIoZnJhZ21lbnRDb250ZXh0LCBvcHRpb25zKTtcbiAgICBwYXJzZXIudG9rZW5pemVyLndyaXRlKGh0bWwsIHRydWUpO1xuICAgIHJldHVybiBwYXJzZXIuZ2V0RnJhZ21lbnQoKTtcbn1cbiJdLCJuYW1lcyI6WyJQYXJzZXIiLCJkZWZhdWx0VHJlZUFkYXB0ZXIiLCJzZXJpYWxpemUiLCJzZXJpYWxpemVPdXRlciIsIkVSUiIsIkVycm9yQ29kZXMiLCJmb3JlaWduQ29udGVudCIsImh0bWwiLCJUb2tlbiIsIlRva2VuaXplciIsIlRva2VuaXplck1vZGUiLCJwYXJzZSIsIm9wdGlvbnMiLCJwYXJzZUZyYWdtZW50IiwiZnJhZ21lbnRDb250ZXh0IiwicGFyc2VyIiwiZ2V0RnJhZ21lbnRQYXJzZXIiLCJ0b2tlbml6ZXIiLCJ3cml0ZSIsImdldEZyYWdtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/parser/formatting-element-list.js":
/*!********************************************************************!*\
  !*** ./node_modules/parse5/dist/parser/formatting-element-list.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EntryType: () => (/* binding */ EntryType),\n/* harmony export */   FormattingElementList: () => (/* binding */ FormattingElementList)\n/* harmony export */ });\n//Const\nconst NOAH_ARK_CAPACITY = 3;\nvar EntryType;\n(function(EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = {\n    type: EntryType.Marker\n};\n//List of formatting elements\nclass FormattingElementList {\n    constructor(treeAdapter){\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for(let i = 0; i < this.entries.length; i++){\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName && this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({\n                        idx: i,\n                        attrs: elementAttrs\n                    });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY) return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY) return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr)=>[\n                neAttr.name,\n                neAttr.value\n            ]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for(let i = 0; i < candidates.length; i++){\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr)=>neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */ clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        } else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry)=>entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry)=>entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/parser/formatting-element-list.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/parser/index.js":
/*!**************************************************!*\
  !*** ./node_modules/parse5/dist/parser/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parser: () => (/* binding */ Parser)\n/* harmony export */ });\n/* harmony import */ var _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tokenizer/index.js */ \"(rsc)/./node_modules/parse5/dist/tokenizer/index.js\");\n/* harmony import */ var _open_element_stack_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./open-element-stack.js */ \"(rsc)/./node_modules/parse5/dist/parser/open-element-stack.js\");\n/* harmony import */ var _formatting_element_list_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatting-element-list.js */ \"(rsc)/./node_modules/parse5/dist/parser/formatting-element-list.js\");\n/* harmony import */ var _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tree-adapters/default.js */ \"(rsc)/./node_modules/parse5/dist/tree-adapters/default.js\");\n/* harmony import */ var _common_doctype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/doctype.js */ \"(rsc)/./node_modules/parse5/dist/common/doctype.js\");\n/* harmony import */ var _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/foreign-content.js */ \"(rsc)/./node_modules/parse5/dist/common/foreign-content.js\");\n/* harmony import */ var _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/error-codes.js */ \"(rsc)/./node_modules/parse5/dist/common/error-codes.js\");\n/* harmony import */ var _common_unicode_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/unicode.js */ \"(rsc)/./node_modules/parse5/dist/common/unicode.js\");\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n/* harmony import */ var _common_token_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/token.js */ \"(rsc)/./node_modules/parse5/dist/common/token.js\");\n\n\n\n\n\n\n\n\n\n\n//Misc constants\nconst HIDDEN_INPUT_TYPE = \"hidden\";\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function(InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1\n};\nconst TABLE_STRUCTURE_TAGS = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR\n]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_3__.defaultTreeAdapter,\n    onParseError: null\n};\n//Parser\nclass Parser {\n    constructor(options, document, /** @internal */ fragmentContext = null, /** @internal */ scriptHandler = null){\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */ this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */ this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */ this.headElement = null;\n        /** @internal */ this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */ this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */ this.tmplInsertionModeStack = [];\n        /** @internal */ this.pendingCharacterTokens = [];\n        /** @internal */ this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */ this.framesetOk = true;\n        /** @internal */ this.skipNextNewLine = false;\n        /** @internal */ this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.Tokenizer(this.options, this);\n        this.activeFormattingElements = new _formatting_element_list_js__WEBPACK_IMPORTED_MODULE_2__.FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? (0,_common_html_js__WEBPACK_IMPORTED_MODULE_8__.getTagID)(this.treeAdapter.getTagName(fragmentContext)) : _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new _open_element_stack_js__WEBPACK_IMPORTED_MODULE_1__.OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : fragmentContext = opts.treeAdapter.createElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.TEMPLATE, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML, []);\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement(\"documentmock\", _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */ _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError) return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */ onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0) this._setContextModes(node, tid);\n    }\n    /** @internal */ onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            } else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */ _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */ _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;\n    }\n    /** @protected */ _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while(node){\n            if (this.treeAdapter.getTagName(node) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML) {\n            return;\n        }\n        switch(this.fragmentContextID){\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TITLE:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEXTAREA:\n                {\n                    this.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RCDATA;\n                    break;\n                }\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.XMP:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.IFRAME:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOEMBED:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOSCRIPT:\n                {\n                    this.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT;\n                    break;\n                }\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n                {\n                    this.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.SCRIPT_DATA;\n                    break;\n                }\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.PLAINTEXT:\n                {\n                    this.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.PLAINTEXT;\n                    break;\n                }\n            default:\n        }\n    }\n    //Tree mutation\n    /** @protected */ _setDocumentType(token) {\n        const name = token.name || \"\";\n        const publicId = token.publicId || \"\";\n        const systemId = token.systemId || \"\";\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node)=>this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */ _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        } else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */ /** @protected */ _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */ _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */ _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */ _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */ _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.HTML, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML);\n    }\n    /** @protected */ _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */ _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            } else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        } else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location) return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, {\n                endLine,\n                endCol,\n                endOffset\n            });\n        } else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */ _adoptNodes(donor, recipient) {\n        for(let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)){\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */ _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.END_TAG && tn === closingToken.tagName ? {\n                endTag: {\n                    ...ctLoc\n                },\n                endLine: ctLoc.endLine,\n                endCol: ctLoc.endCol,\n                endOffset: ctLoc.endOffset\n            } : {\n                endLine: ctLoc.startLine,\n                endCol: ctLoc.startCol,\n                endOffset: ctLoc.startOffset\n            };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML) return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        } else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SVG && this.treeAdapter.getTagName(current) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.MATHML) {\n            return false;\n        }\n        return(// Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode || // If it _is_ an integration point, then we might have to check that it is not an HTML\n        // integration point.\n        (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MGLYPH || token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MALIGNMARK) && !this._isIntegrationPoint(currentTagId, current, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML));\n    }\n    /** @protected */ _processToken(token) {\n        switch(token.type){\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.CHARACTER:\n                {\n                    this.onCharacter(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.NULL_CHARACTER:\n                {\n                    this.onNullCharacter(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.COMMENT:\n                {\n                    this.onComment(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.DOCTYPE:\n                {\n                    this.onDoctype(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.START_TAG:\n                {\n                    this._processStartTag(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.END_TAG:\n                {\n                    this.onEndTag(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.EOF:\n                {\n                    this.onEof(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.WHITESPACE_CHARACTER:\n                {\n                    this.onWhitespaceCharacter(token);\n                    break;\n                }\n        }\n    }\n    //Integration points\n    /** @protected */ _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */ _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry)=>entry.type === _formatting_element_list_js__WEBPACK_IMPORTED_MODULE_2__.EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for(let i = unopenIdx; i >= 0; i--){\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */ _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */ _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P);\n        this.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P);\n    }\n    //Insertion modes\n    /** @protected */ _resetInsertionMode() {\n        for(let i = this.openElements.stackTop; i >= 0; i--){\n            //Insertion mode reset map\n            switch(i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n                    {\n                        this.insertionMode = InsertionMode.IN_ROW;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n                    {\n                        this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n                    {\n                        this.insertionMode = InsertionMode.IN_CAPTION;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n                    {\n                        this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n                    {\n                        this.insertionMode = InsertionMode.IN_TABLE;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n                    {\n                        this.insertionMode = InsertionMode.IN_BODY;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET:\n                    {\n                        this.insertionMode = InsertionMode.IN_FRAMESET;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT:\n                    {\n                        this._resetInsertionModeForSelect(i);\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n                    {\n                        this.insertionMode = this.tmplInsertionModeStack[0];\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n                    {\n                        this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n                    {\n                        if (i > 0) {\n                            this.insertionMode = InsertionMode.IN_CELL;\n                            return;\n                        }\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n                    {\n                        if (i > 0) {\n                            this.insertionMode = InsertionMode.IN_HEAD;\n                            return;\n                        }\n                        break;\n                    }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */ _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for(let i = selectIdx - 1; i > 0; i--){\n                const tn = this.openElements.tagIDs[i];\n                if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE) {\n                    break;\n                } else if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */ _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */ _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */ _findFosterParentingLocation() {\n        for(let i = this.openElements.stackTop; i >= 0; i--){\n            const openElement = this.openElements.items[i];\n            switch(this.openElements.tagIDs[i]){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n                    {\n                        if (this.treeAdapter.getNamespaceURI(openElement) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML) {\n                            return {\n                                parent: this.treeAdapter.getTemplateContent(openElement),\n                                beforeElement: null\n                            };\n                        }\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n                    {\n                        const parent = this.treeAdapter.getParentNode(openElement);\n                        if (parent) {\n                            return {\n                                parent,\n                                beforeElement: openElement\n                            };\n                        }\n                        return {\n                            parent: this.openElements.items[i - 1],\n                            beforeElement: null\n                        };\n                    }\n                default:\n            }\n        }\n        return {\n            parent: this.openElements.items[0],\n            beforeElement: null\n        };\n    }\n    /** @protected */ _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        } else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */ _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return _common_html_js__WEBPACK_IMPORTED_MODULE_8__.SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */ onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    tokenInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HTML:\n                {\n                    tokenBeforeHtml(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n                {\n                    tokenBeforeHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD:\n                {\n                    tokenInHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                {\n                    tokenInHeadNoScript(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_HEAD:\n                {\n                    tokenAfterHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n                {\n                    characterInBody(this, token);\n                    break;\n                }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                {\n                    this._insertCharacters(token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                {\n                    characterInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    characterInTableText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_COLUMN_GROUP:\n                {\n                    tokenInColumnGroup(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n                {\n                    tokenAfterBody(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_BODY:\n                {\n                    tokenAfterAfterBody(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    tokenInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HTML:\n                {\n                    tokenBeforeHtml(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n                {\n                    tokenBeforeHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD:\n                {\n                    tokenInHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                {\n                    tokenInHeadNoScript(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_HEAD:\n                {\n                    tokenAfterHead(this, token);\n                    break;\n                }\n            case InsertionMode.TEXT:\n                {\n                    this._insertCharacters(token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                {\n                    characterInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_COLUMN_GROUP:\n                {\n                    tokenInColumnGroup(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n                {\n                    tokenAfterBody(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_BODY:\n                {\n                    tokenAfterAfterBody(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n                {\n                    appendComment(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    tokenInTableText(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n                {\n                    appendCommentToRootHtmlElement(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                {\n                    appendCommentToDocument(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    doctypeInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n                {\n                    this._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.misplacedDoctype);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    tokenInTableText(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */ _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        } else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */ _startTagOutsideForeignContent(token) {\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    tokenInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HTML:\n                {\n                    startTagBeforeHtml(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n                {\n                    startTagBeforeHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD:\n                {\n                    startTagInHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                {\n                    startTagInHeadNoScript(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_HEAD:\n                {\n                    startTagAfterHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_BODY:\n                {\n                    startTagInBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE:\n                {\n                    startTagInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    tokenInTableText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_CAPTION:\n                {\n                    startTagInCaption(this, token);\n                    break;\n                }\n            case InsertionMode.IN_COLUMN_GROUP:\n                {\n                    startTagInColumnGroup(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_BODY:\n                {\n                    startTagInTableBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_ROW:\n                {\n                    startTagInRow(this, token);\n                    break;\n                }\n            case InsertionMode.IN_CELL:\n                {\n                    startTagInCell(this, token);\n                    break;\n                }\n            case InsertionMode.IN_SELECT:\n                {\n                    startTagInSelect(this, token);\n                    break;\n                }\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                {\n                    startTagInSelectInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TEMPLATE:\n                {\n                    startTagInTemplate(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n                {\n                    startTagAfterBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_FRAMESET:\n                {\n                    startTagInFrameset(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_FRAMESET:\n                {\n                    startTagAfterFrameset(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_BODY:\n                {\n                    startTagAfterAfterBody(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                {\n                    startTagAfterAfterFrameset(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        } else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */ _endTagOutsideForeignContent(token) {\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    tokenInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HTML:\n                {\n                    endTagBeforeHtml(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n                {\n                    endTagBeforeHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD:\n                {\n                    endTagInHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                {\n                    endTagInHeadNoScript(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_HEAD:\n                {\n                    endTagAfterHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_BODY:\n                {\n                    endTagInBody(this, token);\n                    break;\n                }\n            case InsertionMode.TEXT:\n                {\n                    endTagInText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE:\n                {\n                    endTagInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    tokenInTableText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_CAPTION:\n                {\n                    endTagInCaption(this, token);\n                    break;\n                }\n            case InsertionMode.IN_COLUMN_GROUP:\n                {\n                    endTagInColumnGroup(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_BODY:\n                {\n                    endTagInTableBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_ROW:\n                {\n                    endTagInRow(this, token);\n                    break;\n                }\n            case InsertionMode.IN_CELL:\n                {\n                    endTagInCell(this, token);\n                    break;\n                }\n            case InsertionMode.IN_SELECT:\n                {\n                    endTagInSelect(this, token);\n                    break;\n                }\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                {\n                    endTagInSelectInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TEMPLATE:\n                {\n                    endTagInTemplate(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n                {\n                    endTagAfterBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_FRAMESET:\n                {\n                    endTagInFrameset(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_FRAMESET:\n                {\n                    endTagAfterFrameset(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_BODY:\n                {\n                    tokenAfterAfterBody(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onEof(token) {\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    tokenInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HTML:\n                {\n                    tokenBeforeHtml(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n                {\n                    tokenBeforeHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD:\n                {\n                    tokenInHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                {\n                    tokenInHeadNoScript(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_HEAD:\n                {\n                    tokenAfterHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                {\n                    eofInBody(this, token);\n                    break;\n                }\n            case InsertionMode.TEXT:\n                {\n                    eofInText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    tokenInTableText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TEMPLATE:\n                {\n                    eofInTemplate(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                {\n                    stopParsing(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === _common_unicode_js__WEBPACK_IMPORTED_MODULE_7__.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch(this.insertionMode){\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n                {\n                    this._insertCharacters(token);\n                    break;\n                }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                {\n                    whitespaceCharacterInBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                {\n                    characterInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    whitespaceCharacterInTableText(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        } else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    } else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for(; idx >= 0; idx--){\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for(let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement){\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        } else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = (0,_common_html_js__WEBPACK_IMPORTED_MODULE_8__.getTagID)(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    } else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE && ns === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for(let i = 0; i < AA_OUTER_LOOP_ITER; i++){\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor) aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for(let i = p.openElements.stackTop; i >= target; i--){\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? _common_html_js__WEBPACK_IMPORTED_MODULE_8__.DOCUMENT_MODE.QUIRKS : _common_doctype_js__WEBPACK_IMPORTED_MODULE_4__.getDocumentMode(token);\n    if (!_common_doctype_js__WEBPACK_IMPORTED_MODULE_4__.isConforming(token)) {\n        p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    } else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n            {\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                p.headElement = p.openElements.current;\n                p.insertionMode = InsertionMode.IN_HEAD;\n                break;\n            }\n        default:\n            {\n                tokenBeforeHead(p, token);\n            }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR) {\n        tokenBeforeHead(p, token);\n    } else {\n        p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.HEAD, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASEFONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BGSOUND:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LINK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.META:\n            {\n                p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                token.ackSelfClosing = true;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TITLE:\n            {\n                p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RCDATA);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOSCRIPT:\n            {\n                if (p.options.scriptingEnabled) {\n                    p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT);\n                } else {\n                    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                    p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n            {\n                p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n            {\n                p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.SCRIPT_DATA);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                p._insertTemplate(token);\n                p.activeFormattingElements.insertMarker();\n                p.framesetOk = false;\n                p.insertionMode = InsertionMode.IN_TEMPLATE;\n                p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.misplacedStartTagForHeadElement);\n                break;\n            }\n        default:\n            {\n                tokenInHead(p, token);\n            }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n            {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.AFTER_HEAD;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                tokenInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        default:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.endTagWithoutMatchingOpenElement);\n            }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE) {\n            p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    } else {\n        p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASEFONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BGSOUND:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LINK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.META:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOSCRIPT:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.nestedNoscriptInHead);\n                break;\n            }\n        default:\n            {\n                tokenInHeadNoScript(p, token);\n            }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOSCRIPT:\n            {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_HEAD;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR:\n            {\n                tokenInHeadNoScript(p, token);\n                break;\n            }\n        default:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.endTagWithoutMatchingOpenElement);\n            }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.EOF ? _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.openElementsLeftAfterEof : _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n            {\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                p.framesetOk = false;\n                p.insertionMode = InsertionMode.IN_BODY;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET:\n            {\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                p.insertionMode = InsertionMode.IN_FRAMESET;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASEFONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BGSOUND:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LINK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.META:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TITLE:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.abandonedHeadElementChild);\n                p.openElements.push(p.headElement, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD);\n                startTagInHead(p, token);\n                p.openElements.remove(p.headElement);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.misplacedStartTagForHeadElement);\n                break;\n            }\n        default:\n            {\n                tokenAfterHead(p, token);\n            }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR:\n            {\n                tokenAfterHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        default:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.endTagWithoutMatchingOpenElement);\n            }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.BODY, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch(token.type){\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.CHARACTER:\n            {\n                characterInBody(p, token);\n                break;\n            }\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.WHITESPACE_CHARACTER:\n            {\n                whitespaceCharacterInBody(p, token);\n                break;\n            }\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.COMMENT:\n            {\n                appendComment(p, token);\n                break;\n            }\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.START_TAG:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.END_TAG:\n            {\n                endTagInBody(p, token);\n                break;\n            }\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.EOF:\n            {\n                eofInBody(p, token);\n                break;\n            }\n        default:\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    if (_common_html_js__WEBPACK_IMPORTED_MODULE_8__.NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for(let i = p.openElements.stackTop; i >= 0; i--){\n        const elementId = p.openElements.tagIDs[i];\n        if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI && elementId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI || (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DT) && (elementId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DD || elementId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DT)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ADDRESS && elementId !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIV && elementId !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P && p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = (0,_common_token_js__WEBPACK_IMPORTED_MODULE_9__.getTokenAttr)(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.IMG;\n    token.tagID = _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = p.insertionMode === InsertionMode.IN_TABLE || p.insertionMode === InsertionMode.IN_CAPTION || p.insertionMode === InsertionMode.IN_TABLE_BODY || p.insertionMode === InsertionMode.IN_ROW || p.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RTC);\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenMathMLAttrs(token);\n    _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.MATHML);\n    } else {\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenSVGAttrs(token);\n    _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.SVG);\n    } else {\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.I:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.S:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.B:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.U:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.EM:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BIG:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CODE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SMALL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STRIKE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STRONG:\n            {\n                bStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.A:\n            {\n                aStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H1:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H2:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H3:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H4:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H5:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H6:\n            {\n                numberedHeaderStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.UL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIV:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NAV:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MAIN:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MENU:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ASIDE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CENTER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIGURE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FOOTER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEADER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIALOG:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DETAILS:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ADDRESS:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ARTICLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SEARCH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SECTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SUMMARY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIELDSET:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BLOCKQUOTE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIGCAPTION:\n            {\n                addressStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DT:\n            {\n                listItemStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.IMG:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.WBR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.AREA:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.EMBED:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.KEYGEN:\n            {\n                areaStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HR:\n            {\n                hrStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RB:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RTC:\n            {\n                rbStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RP:\n            {\n                rtStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.PRE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LISTING:\n            {\n                preStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.XMP:\n            {\n                xmpStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SVG:\n            {\n                svgStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                htmlStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LINK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.META:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TITLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BGSOUND:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASEFONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n            {\n                bodyStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FORM:\n            {\n                formStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOBR:\n            {\n                nobrStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MATH:\n            {\n                mathStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                tableStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.INPUT:\n            {\n                inputStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.PARAM:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TRACK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SOURCE:\n            {\n                paramStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.IMAGE:\n            {\n                imageStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BUTTON:\n            {\n                buttonStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.APPLET:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OBJECT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MARQUEE:\n            {\n                appletStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.IFRAME:\n            {\n                iframeStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT:\n            {\n                selectStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP:\n            {\n                optgroupStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOEMBED:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n            {\n                rawTextStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET:\n            {\n                framesetStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEXTAREA:\n            {\n                textareaStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOSCRIPT:\n            {\n                if (p.options.scriptingEnabled) {\n                    rawTextStartTagInBody(p, token);\n                } else {\n                    genericStartTagInBody(p, token);\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.PLAINTEXT:\n            {\n                plaintextStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAME:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n            {\n                break;\n            }\n        default:\n            {\n                genericStartTagInBody(p, token);\n            }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FORM);\n        } else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.P, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI);\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.BR, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for(let i = p.openElements.stackTop; i > 0; i--){\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i) p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.A:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.B:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.I:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.S:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.U:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.EM:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BIG:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CODE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOBR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SMALL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STRIKE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STRONG:\n            {\n                callAdoptionAgency(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P:\n            {\n                pEndTagInBody(p);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.UL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIV:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NAV:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.PRE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MAIN:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MENU:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ASIDE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BUTTON:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CENTER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIGURE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FOOTER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEADER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIALOG:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ADDRESS:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ARTICLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DETAILS:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SEARCH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SECTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SUMMARY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LISTING:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIELDSET:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BLOCKQUOTE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIGCAPTION:\n            {\n                addressEndTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI:\n            {\n                liEndTagInBody(p);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DT:\n            {\n                ddEndTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H1:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H2:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H3:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H4:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H5:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H6:\n            {\n                numberedHeaderEndTagInBody(p);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR:\n            {\n                brEndTagInBody(p);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n            {\n                bodyEndTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                htmlEndTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FORM:\n            {\n                formEndTagInBody(p);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.APPLET:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OBJECT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MARQUEE:\n            {\n                appletEndTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        default:\n            {\n                genericEndTagInBody(p, token);\n            }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    } else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch(token.type){\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.CHARACTER:\n                {\n                    characterInTableText(p, token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.WHITESPACE_CHARACTER:\n                {\n                    whitespaceCharacterInTableText(p, token);\n                    break;\n                }\n        }\n    } else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.COLGROUP, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.TBODY, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE)) {\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    } else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                tdStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n            {\n                colStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FORM:\n            {\n                formStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                tableStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n            {\n                tbodyStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.INPUT:\n            {\n                inputStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n            {\n                captionStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n            {\n                colgroupStartTagInTable(p, token);\n                break;\n            }\n        default:\n            {\n                tokenInTable(p, token);\n            }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE)) {\n                    p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE);\n                    p._resetInsertionMode();\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                break;\n            }\n        default:\n            {\n                tokenInTable(p, token);\n            }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for(; i < p.pendingCharacterTokens.length; i++){\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    } else {\n        for(; i < p.pendingCharacterTokens.length; i++){\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR\n]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch(tn){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION)) {\n                    p.openElements.generateImpliedEndTags();\n                    p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION);\n                    p.activeFormattingElements.clearToLastMarker();\n                    p.insertionMode = InsertionMode.IN_TABLE;\n                    if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE) {\n                        endTagInTable(p, token);\n                    }\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                break;\n            }\n        default:\n            {\n                endTagInBody(p, token);\n            }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n            {\n                p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                token.ackSelfClosing = true;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        default:\n            {\n                tokenInColumnGroup(p, token);\n            }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n            {\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP) {\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE;\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n            {\n                break;\n            }\n        default:\n            {\n                tokenInColumnGroup(p, token);\n            }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                p.openElements.clearBackToTableBodyContext();\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                p.insertionMode = InsertionMode.IN_ROW;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n            {\n                p.openElements.clearBackToTableBodyContext();\n                p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.TR, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR);\n                p.insertionMode = InsertionMode.IN_ROW;\n                startTagInRow(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n            {\n                if (p.openElements.hasTableBodyContextInTableScope()) {\n                    p.openElements.clearBackToTableBodyContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE;\n                    startTagInTable(p, token);\n                }\n                break;\n            }\n        default:\n            {\n                startTagInTable(p, token);\n            }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n            {\n                if (p.openElements.hasInTableScope(tn)) {\n                    p.openElements.clearBackToTableBodyContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE;\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                if (p.openElements.hasTableBodyContextInTableScope()) {\n                    p.openElements.clearBackToTableBodyContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE;\n                    endTagInTable(p, token);\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                break;\n            }\n        default:\n            {\n                endTagInTable(p, token);\n            }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n            {\n                p.openElements.clearBackToTableRowContext();\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                p.insertionMode = InsertionMode.IN_CELL;\n                p.activeFormattingElements.insertMarker();\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR)) {\n                    p.openElements.clearBackToTableRowContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    startTagInTableBody(p, token);\n                }\n                break;\n            }\n        default:\n            {\n                startTagInTable(p, token);\n            }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR)) {\n                    p.openElements.clearBackToTableRowContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR)) {\n                    p.openElements.clearBackToTableRowContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    endTagInTableBody(p, token);\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n            {\n                if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR)) {\n                    p.openElements.clearBackToTableRowContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    endTagInTableBody(p, token);\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n            {\n                break;\n            }\n        default:\n            {\n                endTagInTable(p, token);\n            }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD) || p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch(tn){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n            {\n                if (p.openElements.hasInTableScope(tn)) {\n                    p.openElements.generateImpliedEndTags();\n                    p.openElements.popUntilTagNamePopped(tn);\n                    p.activeFormattingElements.clearToLastMarker();\n                    p.insertionMode = InsertionMode.IN_ROW;\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                if (p.openElements.hasInTableScope(tn)) {\n                    p._closeTableCell();\n                    endTagInRow(p, token);\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                break;\n            }\n        default:\n            {\n                endTagInBody(p, token);\n            }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION:\n            {\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION) {\n                    p.openElements.pop();\n                }\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP:\n            {\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION) {\n                    p.openElements.pop();\n                }\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP) {\n                    p.openElements.pop();\n                }\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HR:\n            {\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION) {\n                    p.openElements.pop();\n                }\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP) {\n                    p.openElements.pop();\n                }\n                p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                token.ackSelfClosing = true;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.INPUT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.KEYGEN:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEXTAREA:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT:\n            {\n                if (p.openElements.hasInSelectScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT)) {\n                    p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT);\n                    p._resetInsertionMode();\n                    if (token.tagID !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT) {\n                        p._processStartTag(token);\n                    }\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        default:\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP:\n            {\n                if (p.openElements.stackTop > 0 && p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION && p.openElements.tagIDs[p.openElements.stackTop - 1] === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP) {\n                    p.openElements.pop();\n                }\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP) {\n                    p.openElements.pop();\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION:\n            {\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION) {\n                    p.openElements.pop();\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT:\n            {\n                if (p.openElements.hasInSelectScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT)) {\n                    p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT);\n                    p._resetInsertionMode();\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        default:\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH) {\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    } else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    } else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch(token.tagID){\n        // First, handle tags that can start without a mode change\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASEFONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BGSOUND:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LINK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.META:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TITLE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        // Re-process the token in the appropriate mode\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n            {\n                p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n            {\n                p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n                p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                startTagInColumnGroup(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n            {\n                p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n                p.insertionMode = InsertionMode.IN_ROW;\n                startTagInRow(p, token);\n                break;\n            }\n        default:\n            {\n                p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n                p.insertionMode = InsertionMode.IN_BODY;\n                startTagInBody(p, token);\n            }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    } else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET:\n            {\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAME:\n            {\n                p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                token.ackSelfClosing = true;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        default:\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        default:\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        default:\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = _common_unicode_js__WEBPACK_IMPORTED_MODULE_7__.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while(p.treeAdapter.getNamespaceURI(p.openElements.current) !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML && !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)){\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (_common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    } else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.MATHML) {\n            _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenMathMLAttrs(token);\n        } else if (currentNs === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.SVG) {\n            _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenSVGTagName(token);\n            _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenSVGAttrs(token);\n        }\n        _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        } else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P || token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for(let i = p.openElements.stackTop; i > 0; i--){\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/parser/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/parser/open-element-stack.js":
/*!***************************************************************!*\
  !*** ./node_modules/parse5/dist/parser/open-element-stack.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenElementStack: () => (/* binding */ OpenElementStack)\n/* harmony export */ });\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.LI,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OPTGROUP,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OPTION,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.P,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.RB,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.RP,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.RT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.RTC\n]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.CAPTION,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.COLGROUP,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TBODY,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TFOOT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TH,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.THEAD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TR\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.APPLET,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.CAPTION,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MARQUEE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OBJECT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TABLE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TEMPLATE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TH\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([\n    ...SCOPING_ELEMENTS_HTML,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OL,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.UL\n]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([\n    ...SCOPING_ELEMENTS_HTML,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BUTTON\n]);\nconst SCOPING_ELEMENTS_MATHML = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.ANNOTATION_XML,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MI,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MN,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MO,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MS,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MTEXT\n]);\nconst SCOPING_ELEMENTS_SVG = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DESC,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.FOREIGN_OBJECT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TITLE\n]);\nconst TABLE_ROW_CONTEXT = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TR,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TEMPLATE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML\n]);\nconst TABLE_BODY_CONTEXT = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TBODY,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TFOOT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.THEAD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TEMPLATE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML\n]);\nconst TABLE_CONTEXT = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TABLE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TEMPLATE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML\n]);\nconst TABLE_CELLS = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TH\n]);\n//Stack of open elements\nclass OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler){\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        }while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while(this.stackTop >= idx){\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(_common_html_js__WEBPACK_IMPORTED_MODULE_0__.NUMBERED_HEADERS, _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for(let i = this.stackTop; i >= 0; i--){\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            } else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            switch(this.treeAdapter.getNamespaceURI(this.items[i])){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML:\n                    {\n                        if (tn === tagName) return true;\n                        if (htmlScope.has(tn)) return false;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.SVG:\n                    {\n                        if (SCOPING_ELEMENTS_SVG.has(tn)) return false;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.MATHML:\n                    {\n                        if (SCOPING_ELEMENTS_MATHML.has(tn)) return false;\n                        break;\n                    }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            switch(this.treeAdapter.getNamespaceURI(this.items[i])){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML:\n                    {\n                        if (_common_html_js__WEBPACK_IMPORTED_MODULE_0__.NUMBERED_HEADERS.has(tn)) return true;\n                        if (SCOPING_ELEMENTS_HTML.has(tn)) return false;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.SVG:\n                    {\n                        if (SCOPING_ELEMENTS_SVG.has(tn)) return false;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.MATHML:\n                    {\n                        if (SCOPING_ELEMENTS_MATHML.has(tn)) return false;\n                        break;\n                    }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for(let i = this.stackTop; i >= 0; i--){\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML) {\n                continue;\n            }\n            switch(this.tagIDs[i]){\n                case tagName:\n                    {\n                        return true;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TABLE:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML:\n                    {\n                        return false;\n                    }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for(let i = this.stackTop; i >= 0; i--){\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML) {\n                continue;\n            }\n            switch(this.tagIDs[i]){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TBODY:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.THEAD:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TFOOT:\n                    {\n                        return true;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TABLE:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML:\n                    {\n                        return false;\n                    }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for(let i = this.stackTop; i >= 0; i--){\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML) {\n                continue;\n            }\n            switch(this.tagIDs[i]){\n                case tagName:\n                    {\n                        return true;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OPTION:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OPTGROUP:\n                    {\n                        break;\n                    }\n                default:\n                    {\n                        return false;\n                    }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while(IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)){\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while(IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)){\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while(this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)){\n            this.pop();\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/parser/open-element-stack.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/serializer/index.js":
/*!******************************************************!*\
  !*** ./node_modules/parse5/dist/serializer/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serialize: () => (/* binding */ serialize),\n/* harmony export */   serializeOuter: () => (/* binding */ serializeOuter)\n/* harmony export */ });\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n/* harmony import */ var entities_lib_escape_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! entities/lib/escape.js */ \"(rsc)/./node_modules/entities/lib/esm/escape.js\");\n/* harmony import */ var _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tree-adapters/default.js */ \"(rsc)/./node_modules/parse5/dist/tree-adapters/default.js\");\n\n\n\n// Sets\nconst VOID_ELEMENTS = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.AREA,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.BASE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.BASEFONT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.BGSOUND,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.BR,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.COL,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.EMBED,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.FRAME,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.HR,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.IMG,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.INPUT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.KEYGEN,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.LINK,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.META,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.PARAM,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.SOURCE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.TRACK,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.WBR\n]);\nfunction isVoidElement(node, options) {\n    return options.treeAdapter.isElementNode(node) && options.treeAdapter.getNamespaceURI(node) === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML && VOID_ELEMENTS.has(options.treeAdapter.getTagName(node));\n}\nconst defaultOpts = {\n    treeAdapter: _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_2__.defaultTreeAdapter,\n    scriptingEnabled: true\n};\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */ function serialize(node, options) {\n    const opts = {\n        ...defaultOpts,\n        ...options\n    };\n    if (isVoidElement(node, opts)) {\n        return \"\";\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */ function serializeOuter(node, options) {\n    const opts = {\n        ...defaultOpts,\n        ...options\n    };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = \"\";\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) && options.treeAdapter.getTagName(parentNode) === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.TEMPLATE && options.treeAdapter.getNamespaceURI(parentNode) === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML ? options.treeAdapter.getTemplateContent(parentNode) : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes){\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return \"\";\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? \"\" : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = \"\";\n    for (const attr of treeAdapter.getAttrList(node)){\n        html += \" \";\n        if (attr.namespace) {\n            switch(attr.namespace){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XML:\n                    {\n                        html += `xml:${attr.name}`;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XMLNS:\n                    {\n                        if (attr.name !== \"xmlns\") {\n                            html += \"xmlns:\";\n                        }\n                        html += attr.name;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK:\n                    {\n                        html += `xlink:${attr.name}`;\n                        break;\n                    }\n                default:\n                    {\n                        html += `${attr.prefix}:${attr.name}`;\n                    }\n            }\n        } else {\n            html += attr.name;\n        }\n        html += `=\"${(0,entities_lib_escape_js__WEBPACK_IMPORTED_MODULE_1__.escapeAttribute)(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn && treeAdapter.getNamespaceURI(parent) === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML && (0,_common_html_js__WEBPACK_IMPORTED_MODULE_0__.hasUnescapedText)(parentTn, options.scriptingEnabled) ? content : (0,entities_lib_escape_js__WEBPACK_IMPORTED_MODULE_1__.escapeText)(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/serializer/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/tokenizer/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/parse5/dist/tokenizer/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokenizer: () => (/* binding */ Tokenizer),\n/* harmony export */   TokenizerMode: () => (/* binding */ TokenizerMode)\n/* harmony export */ });\n/* harmony import */ var _preprocessor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./preprocessor.js */ \"(rsc)/./node_modules/parse5/dist/tokenizer/preprocessor.js\");\n/* harmony import */ var _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/unicode.js */ \"(rsc)/./node_modules/parse5/dist/common/unicode.js\");\n/* harmony import */ var _common_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/token.js */ \"(rsc)/./node_modules/parse5/dist/common/token.js\");\n/* harmony import */ var entities_lib_decode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! entities/lib/decode.js */ \"(rsc)/./node_modules/entities/lib/esm/decode.js\");\n/* harmony import */ var _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/error-codes.js */ \"(rsc)/./node_modules/parse5/dist/common/error-codes.js\");\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n\n\n\n\n\n\n//States\nvar State;\n(function(State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nconst TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.DIGIT_0 && cp <= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LATIN_CAPITAL_A && cp <= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LATIN_SMALL_A && cp <= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL) {\n        return _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.nullCharacterReference;\n    } else if (code > 1114111) {\n        return _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.characterReferenceOutsideUnicodeRange;\n    } else if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.isSurrogate)(code)) {\n        return _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.surrogateCharacterReference;\n    } else if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.isUndefinedCodePoint)(code)) {\n        return _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.noncharacterCharacterReference;\n    } else if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.isControlCodePoint)(code) || code === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.CARRIAGE_RETURN) {\n        return _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nclass Tokenizer {\n    constructor(options, handler){\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */ this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */ this.inForeignNode = false;\n        this.lastStartTagName = \"\";\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = {\n            name: \"\",\n            value: \"\"\n        };\n        this.preprocessor = new _preprocessor_js__WEBPACK_IMPORTED_MODULE_0__.Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new entities_lib_decode_js__WEBPACK_IMPORTED_MODULE_3__.EntityDecoder(entities_lib_decode_js__WEBPACK_IMPORTED_MODULE_3__.htmlDecodeTree, (cp, consumed)=>{\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError ? {\n            missingSemicolonAfterCharacterReference: ()=>{\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingSemicolonAfterCharacterReference, 1);\n            },\n            absenceOfDigitsInNumericCharacterReference: (consumed)=>{\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n            },\n            validateNumericCharacterReference: (code)=>{\n                const error = getErrorForNumericCharacterReference(code);\n                if (error) this._err(error, 1);\n            }\n        } : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop) return;\n        this.inLoop = true;\n        while(this.active && !this.paused){\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error(\"Parser was already resumed\");\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop) return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for(let i = 0; i < count; i++){\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.START_TAG,\n            tagName: \"\",\n            tagID: _common_html_js__WEBPACK_IMPORTED_MODULE_5__.TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1)\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.END_TAG,\n            tagName: \"\",\n            tagID: _common_html_js__WEBPACK_IMPORTED_MODULE_5__.TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2)\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.COMMENT,\n            data: \"\",\n            location: this.getCurrentLocation(offset)\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: \"\"\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if ((0,_common_token_js__WEBPACK_IMPORTED_MODULE_2__.getTokenAttr)(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = (_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : _b.attrs = Object.create(null);\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        } else {\n            this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = (0,_common_html_js__WEBPACK_IMPORTED_MODULE_5__.getTagID)(ct.tagName);\n        if (ct.type === _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        } else {\n            if (ct.attrs.length > 0) {\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch(this.currentCharacterToken.type){\n                case _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.CHARACTER:\n                    {\n                        this.handler.onCharacter(this.currentCharacterToken);\n                        break;\n                    }\n                case _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.NULL_CHARACTER:\n                    {\n                        this.handler.onNullCharacter(this.currentCharacterToken);\n                        break;\n                    }\n                case _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.WHITESPACE_CHARACTER:\n                    {\n                        this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                        break;\n                    }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({\n            type: _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.EOF,\n            location\n        });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            } else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp) ? _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.WHITESPACE_CHARACTER : cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL ? _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.NULL_CHARACTER : _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(_common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? entities_lib_decode_js__WEBPACK_IMPORTED_MODULE_3__.DecodingMode.Attribute : entities_lib_decode_js__WEBPACK_IMPORTED_MODULE_3__.DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED;\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch(this.state){\n            case State.DATA:\n                {\n                    this._stateData(cp);\n                    break;\n                }\n            case State.RCDATA:\n                {\n                    this._stateRcdata(cp);\n                    break;\n                }\n            case State.RAWTEXT:\n                {\n                    this._stateRawtext(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA:\n                {\n                    this._stateScriptData(cp);\n                    break;\n                }\n            case State.PLAINTEXT:\n                {\n                    this._statePlaintext(cp);\n                    break;\n                }\n            case State.TAG_OPEN:\n                {\n                    this._stateTagOpen(cp);\n                    break;\n                }\n            case State.END_TAG_OPEN:\n                {\n                    this._stateEndTagOpen(cp);\n                    break;\n                }\n            case State.TAG_NAME:\n                {\n                    this._stateTagName(cp);\n                    break;\n                }\n            case State.RCDATA_LESS_THAN_SIGN:\n                {\n                    this._stateRcdataLessThanSign(cp);\n                    break;\n                }\n            case State.RCDATA_END_TAG_OPEN:\n                {\n                    this._stateRcdataEndTagOpen(cp);\n                    break;\n                }\n            case State.RCDATA_END_TAG_NAME:\n                {\n                    this._stateRcdataEndTagName(cp);\n                    break;\n                }\n            case State.RAWTEXT_LESS_THAN_SIGN:\n                {\n                    this._stateRawtextLessThanSign(cp);\n                    break;\n                }\n            case State.RAWTEXT_END_TAG_OPEN:\n                {\n                    this._stateRawtextEndTagOpen(cp);\n                    break;\n                }\n            case State.RAWTEXT_END_TAG_NAME:\n                {\n                    this._stateRawtextEndTagName(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN:\n                {\n                    this._stateScriptDataLessThanSign(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_END_TAG_OPEN:\n                {\n                    this._stateScriptDataEndTagOpen(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_END_TAG_NAME:\n                {\n                    this._stateScriptDataEndTagName(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPE_START:\n                {\n                    this._stateScriptDataEscapeStart(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH:\n                {\n                    this._stateScriptDataEscapeStartDash(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED:\n                {\n                    this._stateScriptDataEscaped(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED_DASH:\n                {\n                    this._stateScriptDataEscapedDash(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH:\n                {\n                    this._stateScriptDataEscapedDashDash(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN:\n                {\n                    this._stateScriptDataEscapedLessThanSign(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:\n                {\n                    this._stateScriptDataEscapedEndTagOpen(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME:\n                {\n                    this._stateScriptDataEscapedEndTagName(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START:\n                {\n                    this._stateScriptDataDoubleEscapeStart(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED:\n                {\n                    this._stateScriptDataDoubleEscaped(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH:\n                {\n                    this._stateScriptDataDoubleEscapedDash(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH:\n                {\n                    this._stateScriptDataDoubleEscapedDashDash(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN:\n                {\n                    this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END:\n                {\n                    this._stateScriptDataDoubleEscapeEnd(cp);\n                    break;\n                }\n            case State.BEFORE_ATTRIBUTE_NAME:\n                {\n                    this._stateBeforeAttributeName(cp);\n                    break;\n                }\n            case State.ATTRIBUTE_NAME:\n                {\n                    this._stateAttributeName(cp);\n                    break;\n                }\n            case State.AFTER_ATTRIBUTE_NAME:\n                {\n                    this._stateAfterAttributeName(cp);\n                    break;\n                }\n            case State.BEFORE_ATTRIBUTE_VALUE:\n                {\n                    this._stateBeforeAttributeValue(cp);\n                    break;\n                }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED:\n                {\n                    this._stateAttributeValueDoubleQuoted(cp);\n                    break;\n                }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED:\n                {\n                    this._stateAttributeValueSingleQuoted(cp);\n                    break;\n                }\n            case State.ATTRIBUTE_VALUE_UNQUOTED:\n                {\n                    this._stateAttributeValueUnquoted(cp);\n                    break;\n                }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED:\n                {\n                    this._stateAfterAttributeValueQuoted(cp);\n                    break;\n                }\n            case State.SELF_CLOSING_START_TAG:\n                {\n                    this._stateSelfClosingStartTag(cp);\n                    break;\n                }\n            case State.BOGUS_COMMENT:\n                {\n                    this._stateBogusComment(cp);\n                    break;\n                }\n            case State.MARKUP_DECLARATION_OPEN:\n                {\n                    this._stateMarkupDeclarationOpen(cp);\n                    break;\n                }\n            case State.COMMENT_START:\n                {\n                    this._stateCommentStart(cp);\n                    break;\n                }\n            case State.COMMENT_START_DASH:\n                {\n                    this._stateCommentStartDash(cp);\n                    break;\n                }\n            case State.COMMENT:\n                {\n                    this._stateComment(cp);\n                    break;\n                }\n            case State.COMMENT_LESS_THAN_SIGN:\n                {\n                    this._stateCommentLessThanSign(cp);\n                    break;\n                }\n            case State.COMMENT_LESS_THAN_SIGN_BANG:\n                {\n                    this._stateCommentLessThanSignBang(cp);\n                    break;\n                }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH:\n                {\n                    this._stateCommentLessThanSignBangDash(cp);\n                    break;\n                }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:\n                {\n                    this._stateCommentLessThanSignBangDashDash(cp);\n                    break;\n                }\n            case State.COMMENT_END_DASH:\n                {\n                    this._stateCommentEndDash(cp);\n                    break;\n                }\n            case State.COMMENT_END:\n                {\n                    this._stateCommentEnd(cp);\n                    break;\n                }\n            case State.COMMENT_END_BANG:\n                {\n                    this._stateCommentEndBang(cp);\n                    break;\n                }\n            case State.DOCTYPE:\n                {\n                    this._stateDoctype(cp);\n                    break;\n                }\n            case State.BEFORE_DOCTYPE_NAME:\n                {\n                    this._stateBeforeDoctypeName(cp);\n                    break;\n                }\n            case State.DOCTYPE_NAME:\n                {\n                    this._stateDoctypeName(cp);\n                    break;\n                }\n            case State.AFTER_DOCTYPE_NAME:\n                {\n                    this._stateAfterDoctypeName(cp);\n                    break;\n                }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD:\n                {\n                    this._stateAfterDoctypePublicKeyword(cp);\n                    break;\n                }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER:\n                {\n                    this._stateBeforeDoctypePublicIdentifier(cp);\n                    break;\n                }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED:\n                {\n                    this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                    break;\n                }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED:\n                {\n                    this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                    break;\n                }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER:\n                {\n                    this._stateAfterDoctypePublicIdentifier(cp);\n                    break;\n                }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS:\n                {\n                    this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                    break;\n                }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD:\n                {\n                    this._stateAfterDoctypeSystemKeyword(cp);\n                    break;\n                }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER:\n                {\n                    this._stateBeforeDoctypeSystemIdentifier(cp);\n                    break;\n                }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED:\n                {\n                    this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                    break;\n                }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED:\n                {\n                    this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                    break;\n                }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER:\n                {\n                    this._stateAfterDoctypeSystemIdentifier(cp);\n                    break;\n                }\n            case State.BOGUS_DOCTYPE:\n                {\n                    this._stateBogusDoctype(cp);\n                    break;\n                }\n            case State.CDATA_SECTION:\n                {\n                    this._stateCdataSection(cp);\n                    break;\n                }\n            case State.CDATA_SECTION_BRACKET:\n                {\n                    this._stateCdataSectionBracket(cp);\n                    break;\n                }\n            case State.CDATA_SECTION_END:\n                {\n                    this._stateCdataSectionEnd(cp);\n                    break;\n                }\n            case State.CHARACTER_REFERENCE:\n                {\n                    this._stateCharacterReference();\n                    break;\n                }\n            case State.AMBIGUOUS_AMPERSAND:\n                {\n                    this._stateAmbiguousAmpersand(cp);\n                    break;\n                }\n            default:\n                {\n                    throw new Error(\"Unknown state\");\n                }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.TAG_OPEN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND:\n                {\n                    this._startCharacterReference();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitCodePoint(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND:\n                {\n                    this._startCharacterReference();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.RCDATA_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        } else switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EXCLAMATION_MARK:\n                {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUESTION_MARK:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofBeforeTagName);\n                    this._emitChars(\"<\");\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars(\"<\");\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n        }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        } else switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofBeforeTagName);\n                    this._emitChars(\"</\");\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n        }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this.state = State.SELF_CLOSING_START_TAG;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.tagName += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n                }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        } else {\n            this._emitChars(\"<\");\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this._advanceBy(this.lastStartTagName.length);\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    return false;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this._advanceBy(this.lastStartTagName.length);\n                    this.state = State.SELF_CLOSING_START_TAG;\n                    return false;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._advanceBy(this.lastStartTagName.length);\n                    this.emitCurrentTagToken();\n                    this.state = State.DATA;\n                    return false;\n                }\n            default:\n                {\n                    return !this._ensureHibernation();\n                }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        } else {\n            this._emitChars(\"<\");\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EXCLAMATION_MARK:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPE_START;\n                    this._emitChars(\"<!\");\n                    break;\n                }\n            default:\n                {\n                    this._emitChars(\"<\");\n                    this.state = State.SCRIPT_DATA;\n                    this._stateScriptData(cp);\n                }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars(\"-\");\n        } else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars(\"-\");\n        } else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.state = State.SCRIPT_DATA_ESCAPED;\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED;\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA;\n                    this._emitChars(\">\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.state = State.SCRIPT_DATA_ESCAPED;\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED;\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        } else if (isAsciiLetter(cp)) {\n            this._emitChars(\"<\");\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        } else {\n            this._emitChars(\"<\");\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT, false) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for(let i = 0; i < _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT.length; i++){\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        } else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                    this._emitChars(\"<\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                    this._emitChars(\"<\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                    this._emitChars(\"<\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA;\n                    this._emitChars(\">\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars(\"/\");\n        } else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT, false) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for(let i = 0; i < _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT.length; i++){\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        } else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this.state = State.AFTER_ATTRIBUTE_NAME;\n                    this._stateAfterAttributeName(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EQUALS_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedEqualsSignBeforeAttributeName);\n                    this._createAttr(\"=\");\n                    this.state = State.ATTRIBUTE_NAME;\n                    break;\n                }\n            default:\n                {\n                    this._createAttr(\"\");\n                    this.state = State.ATTRIBUTE_NAME;\n                    this._stateAttributeName(cp);\n                }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._leaveAttrName();\n                    this.state = State.AFTER_ATTRIBUTE_NAME;\n                    this._stateAfterAttributeName(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EQUALS_SIGN:\n                {\n                    this._leaveAttrName();\n                    this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedCharacterInAttributeName);\n                    this.currentAttr.name += String.fromCodePoint(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.currentAttr.name += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            default:\n                {\n                    this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n                }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this.state = State.SELF_CLOSING_START_TAG;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EQUALS_SIGN:\n                {\n                    this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._createAttr(\"\");\n                    this.state = State.ATTRIBUTE_NAME;\n                    this._stateAttributeName(cp);\n                }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingAttributeValue);\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            default:\n                {\n                    this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                    this._stateAttributeValueUnquoted(cp);\n                }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND:\n                {\n                    this._startCharacterReference();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.currentAttr.value += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.currentAttr.value += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND:\n                {\n                    this._startCharacterReference();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.currentAttr.value += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.currentAttr.value += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this._leaveAttrValue();\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND:\n                {\n                    this._startCharacterReference();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._leaveAttrValue();\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.currentAttr.value += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EQUALS_SIGN:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GRAVE_ACCENT:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedCharacterInUnquotedAttributeValue);\n                    this.currentAttr.value += String.fromCodePoint(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.currentAttr.value += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this._leaveAttrValue();\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this._leaveAttrValue();\n                    this.state = State.SELF_CLOSING_START_TAG;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._leaveAttrValue();\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceBetweenAttributes);\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    this._stateBeforeAttributeName(cp);\n                }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    const token = this.currentToken;\n                    token.selfClosing = true;\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedSolidusInTag);\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    this._stateBeforeAttributeName(cp);\n                }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.data += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            default:\n                {\n                    token.data += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.DASH_DASH, true)) {\n            this._createCommentToken(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        } else if (this._consumeSequenceIfMatch(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        } else if (this._consumeSequenceIfMatch(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            } else {\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.cdataInHtmlContent);\n                this._createCommentToken(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.CDATA_START.length + 1);\n                this.currentToken.data = \"[CDATA[\";\n                this.state = State.BOGUS_COMMENT;\n            }\n        } else if (!this._ensureHibernation()) {\n            this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.COMMENT_START_DASH;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptClosingOfEmptyComment);\n                    this.state = State.DATA;\n                    const token = this.currentToken;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            default:\n                {\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.COMMENT_END;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptClosingOfEmptyComment);\n                    this.state = State.DATA;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInComment);\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.data += \"-\";\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.COMMENT_END_DASH;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    token.data += \"<\";\n                    this.state = State.COMMENT_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.data += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInComment);\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.data += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EXCLAMATION_MARK:\n                {\n                    token.data += \"!\";\n                    this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    token.data += \"<\";\n                    break;\n                }\n            default:\n                {\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        } else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        } else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN && cp !== _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF) {\n            this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.COMMENT_END;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInComment);\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.data += \"-\";\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EXCLAMATION_MARK:\n                {\n                    this.state = State.COMMENT_END_BANG;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    token.data += \"-\";\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInComment);\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.data += \"--\";\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    token.data += \"--!\";\n                    this.state = State.COMMENT_END_DASH;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.incorrectlyClosedComment);\n                    this.state = State.DATA;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInComment);\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.data += \"--!\";\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.BEFORE_DOCTYPE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.BEFORE_DOCTYPE_NAME;\n                    this._stateBeforeDoctypeName(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceBeforeDoctypeName);\n                    this.state = State.BEFORE_DOCTYPE_NAME;\n                    this._stateBeforeDoctypeName(cp);\n                }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        } else switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n        }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.AFTER_DOCTYPE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.name += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n                }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    if (this._consumeSequenceIfMatch(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.PUBLIC, false)) {\n                        this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                    } else if (this._consumeSequenceIfMatch(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SYSTEM, false)) {\n                        this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                    } else if (!this._ensureHibernation()) {\n                        this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.invalidCharacterSequenceAfterDoctypeName);\n                        token.forceQuirks = true;\n                        this.state = State.BOGUS_DOCTYPE;\n                        this._stateBogusDoctype(cp);\n                    }\n                }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                    token.publicId = \"\";\n                    this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                    token.publicId = \"\";\n                    this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    token.publicId = \"\";\n                    this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    token.publicId = \"\";\n                    this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.publicId += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.publicId += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.publicId += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.publicId += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.systemId += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.systemId += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.systemId += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.systemId += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.RIGHT_SQUARE_BRACKET:\n                {\n                    this.state = State.CDATA_SECTION_BRACKET;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInCdata);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        } else {\n            this._emitChars(\"]\");\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.RIGHT_SQUARE_BRACKET:\n                {\n                    this._emitChars(\"]\");\n                    break;\n                }\n            default:\n                {\n                    this._emitChars(\"]]\");\n                    this.state = State.CDATA_SECTION;\n                    this._stateCdataSection(cp);\n                }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            } else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND);\n            this.state = !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1)) ? State.AMBIGUOUS_AMPERSAND : this.returnState;\n        } else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        } else {\n            if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SEMICOLON) {\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/tokenizer/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/tokenizer/preprocessor.js":
/*!************************************************************!*\
  !*** ./node_modules/parse5/dist/tokenizer/preprocessor.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Preprocessor: () => (/* binding */ Preprocessor)\n/* harmony export */ });\n/* harmony import */ var _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/unicode.js */ \"(rsc)/./node_modules/parse5/dist/common/unicode.js\");\n/* harmony import */ var _common_error_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/error-codes.js */ \"(rsc)/./node_modules/parse5/dist/common/error-codes.js\");\n\n\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nclass Preprocessor {\n    constructor(handler){\n        this.handler = handler;\n        this.html = \"\";\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */ get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.isSurrogatePair)(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return (0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.getSurrogatePairCodePoint)(cp, nextCp);\n            }\n        } else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        } else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for(let i = 0; i < pattern.length; i++){\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.CARRIAGE_RETURN ? _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.isSurrogate)(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null || cp > 0x1f && cp < 0x7f || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.LINE_FEED || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.CARRIAGE_RETURN || cp > 0x9f && cp < 64976;\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.isControlCodePoint)(cp)) {\n            this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR.controlCharacterInInputStream);\n        } else if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.isUndefinedCodePoint)(cp)) {\n            this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while(this.pos < this.lastGapPos){\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/tokenizer/preprocessor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/tree-adapters/default.js":
/*!***********************************************************!*\
  !*** ./node_modules/parse5/dist/tree-adapters/default.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultTreeAdapter: () => (/* binding */ defaultTreeAdapter)\n/* harmony export */ });\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n\nconst defaultTreeAdapter = {\n    //Node construction\n    createDocument () {\n        return {\n            nodeName: \"#document\",\n            mode: _common_html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: []\n        };\n    },\n    createDocumentFragment () {\n        return {\n            nodeName: \"#document-fragment\",\n            childNodes: []\n        };\n    },\n    createElement (tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null\n        };\n    },\n    createCommentNode (data) {\n        return {\n            nodeName: \"#comment\",\n            data,\n            parentNode: null\n        };\n    },\n    createTextNode (value) {\n        return {\n            nodeName: \"#text\",\n            value,\n            parentNode: null\n        };\n    },\n    //Tree mutation\n    appendChild (parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore (parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent (templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent (templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType (document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node)=>node.nodeName === \"#documentType\");\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        } else {\n            const node = {\n                nodeName: \"#documentType\",\n                name,\n                publicId,\n                systemId,\n                parentNode: null\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode (document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode (document) {\n        return document.mode;\n    },\n    detachNode (node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText (parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore (parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        } else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes (recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr)=>attr.name));\n        for(let j = 0; j < attrs.length; j++){\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild (node) {\n        return node.childNodes[0];\n    },\n    getChildNodes (node) {\n        return node.childNodes;\n    },\n    getParentNode (node) {\n        return node.parentNode;\n    },\n    getAttrList (element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName (element) {\n        return element.tagName;\n    },\n    getNamespaceURI (element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent (textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent (commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName (doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId (doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId (doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode (node) {\n        return node.nodeName === \"#text\";\n    },\n    isCommentNode (node) {\n        return node.nodeName === \"#comment\";\n    },\n    isDocumentTypeNode (node) {\n        return node.nodeName === \"#documentType\";\n    },\n    isElementNode (node) {\n        return Object.prototype.hasOwnProperty.call(node, \"tagName\");\n    },\n    // Source code location\n    setNodeSourceCodeLocation (node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation (node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation (node, endLocation) {\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/tree-adapters/default.js\n");

/***/ })

};
;