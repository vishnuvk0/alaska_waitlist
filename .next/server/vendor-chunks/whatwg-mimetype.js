"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/whatwg-mimetype";
exports.ids = ["vendor-chunks/whatwg-mimetype"];
exports.modules = {

/***/ "(rsc)/./node_modules/whatwg-mimetype/lib/mime-type-parameters.js":
/*!******************************************************************!*\
  !*** ./node_modules/whatwg-mimetype/lib/mime-type-parameters.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { asciiLowercase, solelyContainsHTTPTokenCodePoints, soleyContainsHTTPQuotedStringTokenCodePoints } = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/whatwg-mimetype/lib/utils.js\");\nmodule.exports = class MIMETypeParameters {\n    constructor(map){\n        this._map = map;\n    }\n    get size() {\n        return this._map.size;\n    }\n    get(name) {\n        name = asciiLowercase(String(name));\n        return this._map.get(name);\n    }\n    has(name) {\n        name = asciiLowercase(String(name));\n        return this._map.has(name);\n    }\n    set(name, value) {\n        name = asciiLowercase(String(name));\n        value = String(value);\n        if (!solelyContainsHTTPTokenCodePoints(name)) {\n            throw new Error(`Invalid MIME type parameter name \"${name}\": only HTTP token code points are valid.`);\n        }\n        if (!soleyContainsHTTPQuotedStringTokenCodePoints(value)) {\n            throw new Error(`Invalid MIME type parameter value \"${value}\": only HTTP quoted-string token code points are ` + `valid.`);\n        }\n        return this._map.set(name, value);\n    }\n    clear() {\n        this._map.clear();\n    }\n    delete(name) {\n        name = asciiLowercase(String(name));\n        return this._map.delete(name);\n    }\n    forEach(callbackFn, thisArg) {\n        this._map.forEach(callbackFn, thisArg);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n    entries() {\n        return this._map.entries();\n    }\n    [Symbol.iterator]() {\n        return this._map[Symbol.iterator]();\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi9taW1lLXR5cGUtcGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLE1BQU0sRUFDSkEsY0FBYyxFQUNkQyxpQ0FBaUMsRUFDakNDLDRDQUE0QyxFQUM3QyxHQUFHQyxtQkFBT0EsQ0FBQyxxRUFBWTtBQUV4QkMsT0FBT0MsT0FBTyxHQUFHLE1BQU1DO0lBQ3JCQyxZQUFZQyxHQUFHLENBQUU7UUFDZixJQUFJLENBQUNDLElBQUksR0FBR0Q7SUFDZDtJQUVBLElBQUlFLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQ0QsSUFBSSxDQUFDQyxJQUFJO0lBQ3ZCO0lBRUFDLElBQUlDLElBQUksRUFBRTtRQUNSQSxPQUFPWixlQUFlYSxPQUFPRDtRQUM3QixPQUFPLElBQUksQ0FBQ0gsSUFBSSxDQUFDRSxHQUFHLENBQUNDO0lBQ3ZCO0lBRUFFLElBQUlGLElBQUksRUFBRTtRQUNSQSxPQUFPWixlQUFlYSxPQUFPRDtRQUM3QixPQUFPLElBQUksQ0FBQ0gsSUFBSSxDQUFDSyxHQUFHLENBQUNGO0lBQ3ZCO0lBRUFHLElBQUlILElBQUksRUFBRUksS0FBSyxFQUFFO1FBQ2ZKLE9BQU9aLGVBQWVhLE9BQU9EO1FBQzdCSSxRQUFRSCxPQUFPRztRQUVmLElBQUksQ0FBQ2Ysa0NBQWtDVyxPQUFPO1lBQzVDLE1BQU0sSUFBSUssTUFBTSxDQUFDLGtDQUFrQyxFQUFFTCxLQUFLLHlDQUF5QyxDQUFDO1FBQ3RHO1FBQ0EsSUFBSSxDQUFDViw2Q0FBNkNjLFFBQVE7WUFDeEQsTUFBTSxJQUFJQyxNQUFNLENBQUMsbUNBQW1DLEVBQUVELE1BQU0saURBQWlELENBQUMsR0FDOUYsQ0FBQyxNQUFNLENBQUM7UUFDMUI7UUFFQSxPQUFPLElBQUksQ0FBQ1AsSUFBSSxDQUFDTSxHQUFHLENBQUNILE1BQU1JO0lBQzdCO0lBRUFFLFFBQVE7UUFDTixJQUFJLENBQUNULElBQUksQ0FBQ1MsS0FBSztJQUNqQjtJQUVBQyxPQUFPUCxJQUFJLEVBQUU7UUFDWEEsT0FBT1osZUFBZWEsT0FBT0Q7UUFDN0IsT0FBTyxJQUFJLENBQUNILElBQUksQ0FBQ1UsTUFBTSxDQUFDUDtJQUMxQjtJQUVBUSxRQUFRQyxVQUFVLEVBQUVDLE9BQU8sRUFBRTtRQUMzQixJQUFJLENBQUNiLElBQUksQ0FBQ1csT0FBTyxDQUFDQyxZQUFZQztJQUNoQztJQUVBQyxPQUFPO1FBQ0wsT0FBTyxJQUFJLENBQUNkLElBQUksQ0FBQ2MsSUFBSTtJQUN2QjtJQUVBQyxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUNmLElBQUksQ0FBQ2UsTUFBTTtJQUN6QjtJQUVBQyxVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUNoQixJQUFJLENBQUNnQixPQUFPO0lBQzFCO0lBRUEsQ0FBQ0MsT0FBT0MsUUFBUSxDQUFDLEdBQUc7UUFDbEIsT0FBTyxJQUFJLENBQUNsQixJQUFJLENBQUNpQixPQUFPQyxRQUFRLENBQUM7SUFDbkM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2FsYXNrYS13YWl0bGlzdC1hcGkvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi9taW1lLXR5cGUtcGFyYW1ldGVycy5qcz8xMThlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3Qge1xuICBhc2NpaUxvd2VyY2FzZSxcbiAgc29sZWx5Q29udGFpbnNIVFRQVG9rZW5Db2RlUG9pbnRzLFxuICBzb2xleUNvbnRhaW5zSFRUUFF1b3RlZFN0cmluZ1Rva2VuQ29kZVBvaW50c1xufSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNsYXNzIE1JTUVUeXBlUGFyYW1ldGVycyB7XG4gIGNvbnN0cnVjdG9yKG1hcCkge1xuICAgIHRoaXMuX21hcCA9IG1hcDtcbiAgfVxuXG4gIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLl9tYXAuc2l6ZTtcbiAgfVxuXG4gIGdldChuYW1lKSB7XG4gICAgbmFtZSA9IGFzY2lpTG93ZXJjYXNlKFN0cmluZyhuYW1lKSk7XG4gICAgcmV0dXJuIHRoaXMuX21hcC5nZXQobmFtZSk7XG4gIH1cblxuICBoYXMobmFtZSkge1xuICAgIG5hbWUgPSBhc2NpaUxvd2VyY2FzZShTdHJpbmcobmFtZSkpO1xuICAgIHJldHVybiB0aGlzLl9tYXAuaGFzKG5hbWUpO1xuICB9XG5cbiAgc2V0KG5hbWUsIHZhbHVlKSB7XG4gICAgbmFtZSA9IGFzY2lpTG93ZXJjYXNlKFN0cmluZyhuYW1lKSk7XG4gICAgdmFsdWUgPSBTdHJpbmcodmFsdWUpO1xuXG4gICAgaWYgKCFzb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHMobmFtZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBNSU1FIHR5cGUgcGFyYW1ldGVyIG5hbWUgXCIke25hbWV9XCI6IG9ubHkgSFRUUCB0b2tlbiBjb2RlIHBvaW50cyBhcmUgdmFsaWQuYCk7XG4gICAgfVxuICAgIGlmICghc29sZXlDb250YWluc0hUVFBRdW90ZWRTdHJpbmdUb2tlbkNvZGVQb2ludHModmFsdWUpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgTUlNRSB0eXBlIHBhcmFtZXRlciB2YWx1ZSBcIiR7dmFsdWV9XCI6IG9ubHkgSFRUUCBxdW90ZWQtc3RyaW5nIHRva2VuIGNvZGUgcG9pbnRzIGFyZSBgICtcbiAgICAgICAgICAgICAgICAgICAgICBgdmFsaWQuYCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX21hcC5zZXQobmFtZSwgdmFsdWUpO1xuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5fbWFwLmNsZWFyKCk7XG4gIH1cblxuICBkZWxldGUobmFtZSkge1xuICAgIG5hbWUgPSBhc2NpaUxvd2VyY2FzZShTdHJpbmcobmFtZSkpO1xuICAgIHJldHVybiB0aGlzLl9tYXAuZGVsZXRlKG5hbWUpO1xuICB9XG5cbiAgZm9yRWFjaChjYWxsYmFja0ZuLCB0aGlzQXJnKSB7XG4gICAgdGhpcy5fbWFwLmZvckVhY2goY2FsbGJhY2tGbiwgdGhpc0FyZyk7XG4gIH1cblxuICBrZXlzKCkge1xuICAgIHJldHVybiB0aGlzLl9tYXAua2V5cygpO1xuICB9XG5cbiAgdmFsdWVzKCkge1xuICAgIHJldHVybiB0aGlzLl9tYXAudmFsdWVzKCk7XG4gIH1cblxuICBlbnRyaWVzKCkge1xuICAgIHJldHVybiB0aGlzLl9tYXAuZW50cmllcygpO1xuICB9XG5cbiAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgcmV0dXJuIHRoaXMuX21hcFtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gIH1cbn07XG4iXSwibmFtZXMiOlsiYXNjaWlMb3dlcmNhc2UiLCJzb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHMiLCJzb2xleUNvbnRhaW5zSFRUUFF1b3RlZFN0cmluZ1Rva2VuQ29kZVBvaW50cyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiTUlNRVR5cGVQYXJhbWV0ZXJzIiwiY29uc3RydWN0b3IiLCJtYXAiLCJfbWFwIiwic2l6ZSIsImdldCIsIm5hbWUiLCJTdHJpbmciLCJoYXMiLCJzZXQiLCJ2YWx1ZSIsIkVycm9yIiwiY2xlYXIiLCJkZWxldGUiLCJmb3JFYWNoIiwiY2FsbGJhY2tGbiIsInRoaXNBcmciLCJrZXlzIiwidmFsdWVzIiwiZW50cmllcyIsIlN5bWJvbCIsIml0ZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/whatwg-mimetype/lib/mime-type-parameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/whatwg-mimetype/lib/mime-type.js":
/*!*******************************************************!*\
  !*** ./node_modules/whatwg-mimetype/lib/mime-type.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst MIMETypeParameters = __webpack_require__(/*! ./mime-type-parameters.js */ \"(rsc)/./node_modules/whatwg-mimetype/lib/mime-type-parameters.js\");\nconst parse = __webpack_require__(/*! ./parser.js */ \"(rsc)/./node_modules/whatwg-mimetype/lib/parser.js\");\nconst serialize = __webpack_require__(/*! ./serializer.js */ \"(rsc)/./node_modules/whatwg-mimetype/lib/serializer.js\");\nconst { asciiLowercase, solelyContainsHTTPTokenCodePoints } = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/whatwg-mimetype/lib/utils.js\");\nmodule.exports = class MIMEType {\n    constructor(string){\n        string = String(string);\n        const result = parse(string);\n        if (result === null) {\n            throw new Error(`Could not parse MIME type string \"${string}\"`);\n        }\n        this._type = result.type;\n        this._subtype = result.subtype;\n        this._parameters = new MIMETypeParameters(result.parameters);\n    }\n    static parse(string) {\n        try {\n            return new this(string);\n        } catch (e) {\n            return null;\n        }\n    }\n    get essence() {\n        return `${this.type}/${this.subtype}`;\n    }\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        value = asciiLowercase(String(value));\n        if (value.length === 0) {\n            throw new Error(\"Invalid type: must be a non-empty string\");\n        }\n        if (!solelyContainsHTTPTokenCodePoints(value)) {\n            throw new Error(`Invalid type ${value}: must contain only HTTP token code points`);\n        }\n        this._type = value;\n    }\n    get subtype() {\n        return this._subtype;\n    }\n    set subtype(value) {\n        value = asciiLowercase(String(value));\n        if (value.length === 0) {\n            throw new Error(\"Invalid subtype: must be a non-empty string\");\n        }\n        if (!solelyContainsHTTPTokenCodePoints(value)) {\n            throw new Error(`Invalid subtype ${value}: must contain only HTTP token code points`);\n        }\n        this._subtype = value;\n    }\n    get parameters() {\n        return this._parameters;\n    }\n    toString() {\n        // The serialize function works on both \"MIME type records\" (i.e. the results of parse) and on this class, since\n        // this class's interface is identical.\n        return serialize(this);\n    }\n    isJavaScript({ prohibitParameters = false } = {}) {\n        switch(this._type){\n            case \"text\":\n                {\n                    switch(this._subtype){\n                        case \"ecmascript\":\n                        case \"javascript\":\n                        case \"javascript1.0\":\n                        case \"javascript1.1\":\n                        case \"javascript1.2\":\n                        case \"javascript1.3\":\n                        case \"javascript1.4\":\n                        case \"javascript1.5\":\n                        case \"jscript\":\n                        case \"livescript\":\n                        case \"x-ecmascript\":\n                        case \"x-javascript\":\n                            {\n                                return !prohibitParameters || this._parameters.size === 0;\n                            }\n                        default:\n                            {\n                                return false;\n                            }\n                    }\n                }\n            case \"application\":\n                {\n                    switch(this._subtype){\n                        case \"ecmascript\":\n                        case \"javascript\":\n                        case \"x-ecmascript\":\n                        case \"x-javascript\":\n                            {\n                                return !prohibitParameters || this._parameters.size === 0;\n                            }\n                        default:\n                            {\n                                return false;\n                            }\n                    }\n                }\n            default:\n                {\n                    return false;\n                }\n        }\n    }\n    isXML() {\n        return this._subtype === \"xml\" && (this._type === \"text\" || this._type === \"application\") || this._subtype.endsWith(\"+xml\");\n    }\n    isHTML() {\n        return this._subtype === \"html\" && this._type === \"text\";\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/whatwg-mimetype/lib/mime-type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/whatwg-mimetype/lib/parser.js":
/*!****************************************************!*\
  !*** ./node_modules/whatwg-mimetype/lib/parser.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { removeLeadingAndTrailingHTTPWhitespace, removeTrailingHTTPWhitespace, isHTTPWhitespaceChar, solelyContainsHTTPTokenCodePoints, soleyContainsHTTPQuotedStringTokenCodePoints, asciiLowercase, collectAnHTTPQuotedString } = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/whatwg-mimetype/lib/utils.js\");\nmodule.exports = (input)=>{\n    input = removeLeadingAndTrailingHTTPWhitespace(input);\n    let position = 0;\n    let type = \"\";\n    while(position < input.length && input[position] !== \"/\"){\n        type += input[position];\n        ++position;\n    }\n    if (type.length === 0 || !solelyContainsHTTPTokenCodePoints(type)) {\n        return null;\n    }\n    if (position >= input.length) {\n        return null;\n    }\n    // Skips past \"/\"\n    ++position;\n    let subtype = \"\";\n    while(position < input.length && input[position] !== \";\"){\n        subtype += input[position];\n        ++position;\n    }\n    subtype = removeTrailingHTTPWhitespace(subtype);\n    if (subtype.length === 0 || !solelyContainsHTTPTokenCodePoints(subtype)) {\n        return null;\n    }\n    const mimeType = {\n        type: asciiLowercase(type),\n        subtype: asciiLowercase(subtype),\n        parameters: new Map()\n    };\n    while(position < input.length){\n        // Skip past \";\"\n        ++position;\n        while(isHTTPWhitespaceChar(input[position])){\n            ++position;\n        }\n        let parameterName = \"\";\n        while(position < input.length && input[position] !== \";\" && input[position] !== \"=\"){\n            parameterName += input[position];\n            ++position;\n        }\n        parameterName = asciiLowercase(parameterName);\n        if (position < input.length) {\n            if (input[position] === \";\") {\n                continue;\n            }\n            // Skip past \"=\"\n            ++position;\n        }\n        let parameterValue = null;\n        if (input[position] === '\"') {\n            [parameterValue, position] = collectAnHTTPQuotedString(input, position);\n            while(position < input.length && input[position] !== \";\"){\n                ++position;\n            }\n        } else {\n            parameterValue = \"\";\n            while(position < input.length && input[position] !== \";\"){\n                parameterValue += input[position];\n                ++position;\n            }\n            parameterValue = removeTrailingHTTPWhitespace(parameterValue);\n            if (parameterValue === \"\") {\n                continue;\n            }\n        }\n        if (parameterName.length > 0 && solelyContainsHTTPTokenCodePoints(parameterName) && soleyContainsHTTPQuotedStringTokenCodePoints(parameterValue) && !mimeType.parameters.has(parameterName)) {\n            mimeType.parameters.set(parameterName, parameterValue);\n        }\n    }\n    return mimeType;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi9wYXJzZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixNQUFNLEVBQ0pBLHNDQUFzQyxFQUN0Q0MsNEJBQTRCLEVBQzVCQyxvQkFBb0IsRUFDcEJDLGlDQUFpQyxFQUNqQ0MsNENBQTRDLEVBQzVDQyxjQUFjLEVBQ2RDLHlCQUF5QixFQUMxQixHQUFHQyxtQkFBT0EsQ0FBQyxxRUFBWTtBQUV4QkMsT0FBT0MsT0FBTyxHQUFHQyxDQUFBQTtJQUNmQSxRQUFRVix1Q0FBdUNVO0lBRS9DLElBQUlDLFdBQVc7SUFDZixJQUFJQyxPQUFPO0lBQ1gsTUFBT0QsV0FBV0QsTUFBTUcsTUFBTSxJQUFJSCxLQUFLLENBQUNDLFNBQVMsS0FBSyxJQUFLO1FBQ3pEQyxRQUFRRixLQUFLLENBQUNDLFNBQVM7UUFDdkIsRUFBRUE7SUFDSjtJQUVBLElBQUlDLEtBQUtDLE1BQU0sS0FBSyxLQUFLLENBQUNWLGtDQUFrQ1MsT0FBTztRQUNqRSxPQUFPO0lBQ1Q7SUFFQSxJQUFJRCxZQUFZRCxNQUFNRyxNQUFNLEVBQUU7UUFDNUIsT0FBTztJQUNUO0lBRUEsaUJBQWlCO0lBQ2pCLEVBQUVGO0lBRUYsSUFBSUcsVUFBVTtJQUNkLE1BQU9ILFdBQVdELE1BQU1HLE1BQU0sSUFBSUgsS0FBSyxDQUFDQyxTQUFTLEtBQUssSUFBSztRQUN6REcsV0FBV0osS0FBSyxDQUFDQyxTQUFTO1FBQzFCLEVBQUVBO0lBQ0o7SUFFQUcsVUFBVWIsNkJBQTZCYTtJQUV2QyxJQUFJQSxRQUFRRCxNQUFNLEtBQUssS0FBSyxDQUFDVixrQ0FBa0NXLFVBQVU7UUFDdkUsT0FBTztJQUNUO0lBRUEsTUFBTUMsV0FBVztRQUNmSCxNQUFNUCxlQUFlTztRQUNyQkUsU0FBU1QsZUFBZVM7UUFDeEJFLFlBQVksSUFBSUM7SUFDbEI7SUFFQSxNQUFPTixXQUFXRCxNQUFNRyxNQUFNLENBQUU7UUFDOUIsZ0JBQWdCO1FBQ2hCLEVBQUVGO1FBRUYsTUFBT1QscUJBQXFCUSxLQUFLLENBQUNDLFNBQVMsRUFBRztZQUM1QyxFQUFFQTtRQUNKO1FBRUEsSUFBSU8sZ0JBQWdCO1FBQ3BCLE1BQU9QLFdBQVdELE1BQU1HLE1BQU0sSUFBSUgsS0FBSyxDQUFDQyxTQUFTLEtBQUssT0FBT0QsS0FBSyxDQUFDQyxTQUFTLEtBQUssSUFBSztZQUNwRk8saUJBQWlCUixLQUFLLENBQUNDLFNBQVM7WUFDaEMsRUFBRUE7UUFDSjtRQUNBTyxnQkFBZ0JiLGVBQWVhO1FBRS9CLElBQUlQLFdBQVdELE1BQU1HLE1BQU0sRUFBRTtZQUMzQixJQUFJSCxLQUFLLENBQUNDLFNBQVMsS0FBSyxLQUFLO2dCQUMzQjtZQUNGO1lBRUEsZ0JBQWdCO1lBQ2hCLEVBQUVBO1FBQ0o7UUFFQSxJQUFJUSxpQkFBaUI7UUFDckIsSUFBSVQsS0FBSyxDQUFDQyxTQUFTLEtBQUssS0FBTTtZQUM1QixDQUFDUSxnQkFBZ0JSLFNBQVMsR0FBR0wsMEJBQTBCSSxPQUFPQztZQUU5RCxNQUFPQSxXQUFXRCxNQUFNRyxNQUFNLElBQUlILEtBQUssQ0FBQ0MsU0FBUyxLQUFLLElBQUs7Z0JBQ3pELEVBQUVBO1lBQ0o7UUFDRixPQUFPO1lBQ0xRLGlCQUFpQjtZQUNqQixNQUFPUixXQUFXRCxNQUFNRyxNQUFNLElBQUlILEtBQUssQ0FBQ0MsU0FBUyxLQUFLLElBQUs7Z0JBQ3pEUSxrQkFBa0JULEtBQUssQ0FBQ0MsU0FBUztnQkFDakMsRUFBRUE7WUFDSjtZQUVBUSxpQkFBaUJsQiw2QkFBNkJrQjtZQUU5QyxJQUFJQSxtQkFBbUIsSUFBSTtnQkFDekI7WUFDRjtRQUNGO1FBRUEsSUFBSUQsY0FBY0wsTUFBTSxHQUFHLEtBQ3ZCVixrQ0FBa0NlLGtCQUNsQ2QsNkNBQTZDZSxtQkFDN0MsQ0FBQ0osU0FBU0MsVUFBVSxDQUFDSSxHQUFHLENBQUNGLGdCQUFnQjtZQUMzQ0gsU0FBU0MsVUFBVSxDQUFDSyxHQUFHLENBQUNILGVBQWVDO1FBQ3pDO0lBQ0Y7SUFFQSxPQUFPSjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWxhc2thLXdhaXRsaXN0LWFwaS8uL25vZGVfbW9kdWxlcy93aGF0d2ctbWltZXR5cGUvbGliL3BhcnNlci5qcz85ZjYxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3Qge1xuICByZW1vdmVMZWFkaW5nQW5kVHJhaWxpbmdIVFRQV2hpdGVzcGFjZSxcbiAgcmVtb3ZlVHJhaWxpbmdIVFRQV2hpdGVzcGFjZSxcbiAgaXNIVFRQV2hpdGVzcGFjZUNoYXIsXG4gIHNvbGVseUNvbnRhaW5zSFRUUFRva2VuQ29kZVBvaW50cyxcbiAgc29sZXlDb250YWluc0hUVFBRdW90ZWRTdHJpbmdUb2tlbkNvZGVQb2ludHMsXG4gIGFzY2lpTG93ZXJjYXNlLFxuICBjb2xsZWN0QW5IVFRQUXVvdGVkU3RyaW5nXG59ID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gaW5wdXQgPT4ge1xuICBpbnB1dCA9IHJlbW92ZUxlYWRpbmdBbmRUcmFpbGluZ0hUVFBXaGl0ZXNwYWNlKGlucHV0KTtcblxuICBsZXQgcG9zaXRpb24gPSAwO1xuICBsZXQgdHlwZSA9IFwiXCI7XG4gIHdoaWxlIChwb3NpdGlvbiA8IGlucHV0Lmxlbmd0aCAmJiBpbnB1dFtwb3NpdGlvbl0gIT09IFwiL1wiKSB7XG4gICAgdHlwZSArPSBpbnB1dFtwb3NpdGlvbl07XG4gICAgKytwb3NpdGlvbjtcbiAgfVxuXG4gIGlmICh0eXBlLmxlbmd0aCA9PT0gMCB8fCAhc29sZWx5Q29udGFpbnNIVFRQVG9rZW5Db2RlUG9pbnRzKHR5cGUpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBpZiAocG9zaXRpb24gPj0gaW5wdXQubGVuZ3RoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvLyBTa2lwcyBwYXN0IFwiL1wiXG4gICsrcG9zaXRpb247XG5cbiAgbGV0IHN1YnR5cGUgPSBcIlwiO1xuICB3aGlsZSAocG9zaXRpb24gPCBpbnB1dC5sZW5ndGggJiYgaW5wdXRbcG9zaXRpb25dICE9PSBcIjtcIikge1xuICAgIHN1YnR5cGUgKz0gaW5wdXRbcG9zaXRpb25dO1xuICAgICsrcG9zaXRpb247XG4gIH1cblxuICBzdWJ0eXBlID0gcmVtb3ZlVHJhaWxpbmdIVFRQV2hpdGVzcGFjZShzdWJ0eXBlKTtcblxuICBpZiAoc3VidHlwZS5sZW5ndGggPT09IDAgfHwgIXNvbGVseUNvbnRhaW5zSFRUUFRva2VuQ29kZVBvaW50cyhzdWJ0eXBlKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgbWltZVR5cGUgPSB7XG4gICAgdHlwZTogYXNjaWlMb3dlcmNhc2UodHlwZSksXG4gICAgc3VidHlwZTogYXNjaWlMb3dlcmNhc2Uoc3VidHlwZSksXG4gICAgcGFyYW1ldGVyczogbmV3IE1hcCgpXG4gIH07XG5cbiAgd2hpbGUgKHBvc2l0aW9uIDwgaW5wdXQubGVuZ3RoKSB7XG4gICAgLy8gU2tpcCBwYXN0IFwiO1wiXG4gICAgKytwb3NpdGlvbjtcblxuICAgIHdoaWxlIChpc0hUVFBXaGl0ZXNwYWNlQ2hhcihpbnB1dFtwb3NpdGlvbl0pKSB7XG4gICAgICArK3Bvc2l0aW9uO1xuICAgIH1cblxuICAgIGxldCBwYXJhbWV0ZXJOYW1lID0gXCJcIjtcbiAgICB3aGlsZSAocG9zaXRpb24gPCBpbnB1dC5sZW5ndGggJiYgaW5wdXRbcG9zaXRpb25dICE9PSBcIjtcIiAmJiBpbnB1dFtwb3NpdGlvbl0gIT09IFwiPVwiKSB7XG4gICAgICBwYXJhbWV0ZXJOYW1lICs9IGlucHV0W3Bvc2l0aW9uXTtcbiAgICAgICsrcG9zaXRpb247XG4gICAgfVxuICAgIHBhcmFtZXRlck5hbWUgPSBhc2NpaUxvd2VyY2FzZShwYXJhbWV0ZXJOYW1lKTtcblxuICAgIGlmIChwb3NpdGlvbiA8IGlucHV0Lmxlbmd0aCkge1xuICAgICAgaWYgKGlucHV0W3Bvc2l0aW9uXSA9PT0gXCI7XCIpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIC8vIFNraXAgcGFzdCBcIj1cIlxuICAgICAgKytwb3NpdGlvbjtcbiAgICB9XG5cbiAgICBsZXQgcGFyYW1ldGVyVmFsdWUgPSBudWxsO1xuICAgIGlmIChpbnB1dFtwb3NpdGlvbl0gPT09IFwiXFxcIlwiKSB7XG4gICAgICBbcGFyYW1ldGVyVmFsdWUsIHBvc2l0aW9uXSA9IGNvbGxlY3RBbkhUVFBRdW90ZWRTdHJpbmcoaW5wdXQsIHBvc2l0aW9uKTtcblxuICAgICAgd2hpbGUgKHBvc2l0aW9uIDwgaW5wdXQubGVuZ3RoICYmIGlucHV0W3Bvc2l0aW9uXSAhPT0gXCI7XCIpIHtcbiAgICAgICAgKytwb3NpdGlvbjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcGFyYW1ldGVyVmFsdWUgPSBcIlwiO1xuICAgICAgd2hpbGUgKHBvc2l0aW9uIDwgaW5wdXQubGVuZ3RoICYmIGlucHV0W3Bvc2l0aW9uXSAhPT0gXCI7XCIpIHtcbiAgICAgICAgcGFyYW1ldGVyVmFsdWUgKz0gaW5wdXRbcG9zaXRpb25dO1xuICAgICAgICArK3Bvc2l0aW9uO1xuICAgICAgfVxuXG4gICAgICBwYXJhbWV0ZXJWYWx1ZSA9IHJlbW92ZVRyYWlsaW5nSFRUUFdoaXRlc3BhY2UocGFyYW1ldGVyVmFsdWUpO1xuXG4gICAgICBpZiAocGFyYW1ldGVyVmFsdWUgPT09IFwiXCIpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtZXRlck5hbWUubGVuZ3RoID4gMCAmJlxuICAgICAgICBzb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHMocGFyYW1ldGVyTmFtZSkgJiZcbiAgICAgICAgc29sZXlDb250YWluc0hUVFBRdW90ZWRTdHJpbmdUb2tlbkNvZGVQb2ludHMocGFyYW1ldGVyVmFsdWUpICYmXG4gICAgICAgICFtaW1lVHlwZS5wYXJhbWV0ZXJzLmhhcyhwYXJhbWV0ZXJOYW1lKSkge1xuICAgICAgbWltZVR5cGUucGFyYW1ldGVycy5zZXQocGFyYW1ldGVyTmFtZSwgcGFyYW1ldGVyVmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtaW1lVHlwZTtcbn07XG4iXSwibmFtZXMiOlsicmVtb3ZlTGVhZGluZ0FuZFRyYWlsaW5nSFRUUFdoaXRlc3BhY2UiLCJyZW1vdmVUcmFpbGluZ0hUVFBXaGl0ZXNwYWNlIiwiaXNIVFRQV2hpdGVzcGFjZUNoYXIiLCJzb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHMiLCJzb2xleUNvbnRhaW5zSFRUUFF1b3RlZFN0cmluZ1Rva2VuQ29kZVBvaW50cyIsImFzY2lpTG93ZXJjYXNlIiwiY29sbGVjdEFuSFRUUFF1b3RlZFN0cmluZyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaW5wdXQiLCJwb3NpdGlvbiIsInR5cGUiLCJsZW5ndGgiLCJzdWJ0eXBlIiwibWltZVR5cGUiLCJwYXJhbWV0ZXJzIiwiTWFwIiwicGFyYW1ldGVyTmFtZSIsInBhcmFtZXRlclZhbHVlIiwiaGFzIiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/whatwg-mimetype/lib/parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/whatwg-mimetype/lib/serializer.js":
/*!********************************************************!*\
  !*** ./node_modules/whatwg-mimetype/lib/serializer.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { solelyContainsHTTPTokenCodePoints } = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/whatwg-mimetype/lib/utils.js\");\nmodule.exports = (mimeType)=>{\n    let serialization = `${mimeType.type}/${mimeType.subtype}`;\n    if (mimeType.parameters.size === 0) {\n        return serialization;\n    }\n    for (let [name, value] of mimeType.parameters){\n        serialization += \";\";\n        serialization += name;\n        serialization += \"=\";\n        if (!solelyContainsHTTPTokenCodePoints(value) || value.length === 0) {\n            value = value.replace(/([\"\\\\])/ug, \"\\\\$1\");\n            value = `\"${value}\"`;\n        }\n        serialization += value;\n    }\n    return serialization;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi9zZXJpYWxpemVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsTUFBTSxFQUFFQSxpQ0FBaUMsRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQyxxRUFBWTtBQUVsRUMsT0FBT0MsT0FBTyxHQUFHQyxDQUFBQTtJQUNmLElBQUlDLGdCQUFnQixDQUFDLEVBQUVELFNBQVNFLElBQUksQ0FBQyxDQUFDLEVBQUVGLFNBQVNHLE9BQU8sQ0FBQyxDQUFDO0lBRTFELElBQUlILFNBQVNJLFVBQVUsQ0FBQ0MsSUFBSSxLQUFLLEdBQUc7UUFDbEMsT0FBT0o7SUFDVDtJQUVBLEtBQUssSUFBSSxDQUFDSyxNQUFNQyxNQUFNLElBQUlQLFNBQVNJLFVBQVUsQ0FBRTtRQUM3Q0gsaUJBQWlCO1FBQ2pCQSxpQkFBaUJLO1FBQ2pCTCxpQkFBaUI7UUFFakIsSUFBSSxDQUFDTCxrQ0FBa0NXLFVBQVVBLE1BQU1DLE1BQU0sS0FBSyxHQUFHO1lBQ25FRCxRQUFRQSxNQUFNRSxPQUFPLENBQUMsYUFBYTtZQUNuQ0YsUUFBUSxDQUFDLENBQUMsRUFBRUEsTUFBTSxDQUFDLENBQUM7UUFDdEI7UUFFQU4saUJBQWlCTTtJQUNuQjtJQUVBLE9BQU9OO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbGFza2Etd2FpdGxpc3QtYXBpLy4vbm9kZV9tb2R1bGVzL3doYXR3Zy1taW1ldHlwZS9saWIvc2VyaWFsaXplci5qcz81MjdmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgeyBzb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHMgfSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1pbWVUeXBlID0+IHtcbiAgbGV0IHNlcmlhbGl6YXRpb24gPSBgJHttaW1lVHlwZS50eXBlfS8ke21pbWVUeXBlLnN1YnR5cGV9YDtcblxuICBpZiAobWltZVR5cGUucGFyYW1ldGVycy5zaXplID09PSAwKSB7XG4gICAgcmV0dXJuIHNlcmlhbGl6YXRpb247XG4gIH1cblxuICBmb3IgKGxldCBbbmFtZSwgdmFsdWVdIG9mIG1pbWVUeXBlLnBhcmFtZXRlcnMpIHtcbiAgICBzZXJpYWxpemF0aW9uICs9IFwiO1wiO1xuICAgIHNlcmlhbGl6YXRpb24gKz0gbmFtZTtcbiAgICBzZXJpYWxpemF0aW9uICs9IFwiPVwiO1xuXG4gICAgaWYgKCFzb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHModmFsdWUpIHx8IHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC8oW1wiXFxcXF0pL3VnLCBcIlxcXFwkMVwiKTtcbiAgICAgIHZhbHVlID0gYFwiJHt2YWx1ZX1cImA7XG4gICAgfVxuXG4gICAgc2VyaWFsaXphdGlvbiArPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBzZXJpYWxpemF0aW9uO1xufTtcbiJdLCJuYW1lcyI6WyJzb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1pbWVUeXBlIiwic2VyaWFsaXphdGlvbiIsInR5cGUiLCJzdWJ0eXBlIiwicGFyYW1ldGVycyIsInNpemUiLCJuYW1lIiwidmFsdWUiLCJsZW5ndGgiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/whatwg-mimetype/lib/serializer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/whatwg-mimetype/lib/utils.js":
/*!***************************************************!*\
  !*** ./node_modules/whatwg-mimetype/lib/utils.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.removeLeadingAndTrailingHTTPWhitespace = (string)=>{\n    return string.replace(/^[ \\t\\n\\r]+/u, \"\").replace(/[ \\t\\n\\r]+$/u, \"\");\n};\nexports.removeTrailingHTTPWhitespace = (string)=>{\n    return string.replace(/[ \\t\\n\\r]+$/u, \"\");\n};\nexports.isHTTPWhitespaceChar = (char)=>{\n    return char === \" \" || char === \"\t\" || char === \"\\n\" || char === \"\\r\";\n};\nexports.solelyContainsHTTPTokenCodePoints = (string)=>{\n    return /^[-!#$%&'*+.^_`|~A-Za-z0-9]*$/u.test(string);\n};\nexports.soleyContainsHTTPQuotedStringTokenCodePoints = (string)=>{\n    return /^[\\t\\u0020-\\u007E\\u0080-\\u00FF]*$/u.test(string);\n};\nexports.asciiLowercase = (string)=>{\n    return string.replace(/[A-Z]/ug, (l)=>l.toLowerCase());\n};\n// This variant only implements it with the extract-value flag set.\nexports.collectAnHTTPQuotedString = (input, position)=>{\n    let value = \"\";\n    position++;\n    while(true){\n        while(position < input.length && input[position] !== '\"' && input[position] !== \"\\\\\"){\n            value += input[position];\n            ++position;\n        }\n        if (position >= input.length) {\n            break;\n        }\n        const quoteOrBackslash = input[position];\n        ++position;\n        if (quoteOrBackslash === \"\\\\\") {\n            if (position >= input.length) {\n                value += \"\\\\\";\n                break;\n            }\n            value += input[position];\n            ++position;\n        } else {\n            break;\n        }\n    }\n    return [\n        value,\n        position\n    ];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBOEMsR0FBR0UsQ0FBQUE7SUFDL0MsT0FBT0EsT0FBT0MsT0FBTyxDQUFDLGdCQUFnQixJQUFJQSxPQUFPLENBQUMsZ0JBQWdCO0FBQ3BFO0FBRUFILG9DQUFvQyxHQUFHRSxDQUFBQTtJQUNyQyxPQUFPQSxPQUFPQyxPQUFPLENBQUMsZ0JBQWdCO0FBQ3hDO0FBRUFILDRCQUE0QixHQUFHTSxDQUFBQTtJQUM3QixPQUFPQSxTQUFTLE9BQU9BLFNBQVMsT0FBUUEsU0FBUyxRQUFRQSxTQUFTO0FBQ3BFO0FBRUFOLHlDQUF5QyxHQUFHRSxDQUFBQTtJQUMxQyxPQUFPLGlDQUFpQ00sSUFBSSxDQUFDTjtBQUMvQztBQUVBRixvREFBb0QsR0FBR0UsQ0FBQUE7SUFDckQsT0FBTyxxQ0FBcUNNLElBQUksQ0FBQ047QUFDbkQ7QUFFQUYsc0JBQXNCLEdBQUdFLENBQUFBO0lBQ3ZCLE9BQU9BLE9BQU9DLE9BQU8sQ0FBQyxXQUFXUSxDQUFBQSxJQUFLQSxFQUFFQyxXQUFXO0FBQ3JEO0FBRUEsbUVBQW1FO0FBQ25FWixpQ0FBaUMsR0FBRyxDQUFDYyxPQUFPQztJQUMxQyxJQUFJQyxRQUFRO0lBRVpEO0lBRUEsTUFBTyxLQUFNO1FBQ1gsTUFBT0EsV0FBV0QsTUFBTUcsTUFBTSxJQUFJSCxLQUFLLENBQUNDLFNBQVMsS0FBSyxPQUFRRCxLQUFLLENBQUNDLFNBQVMsS0FBSyxLQUFNO1lBQ3RGQyxTQUFTRixLQUFLLENBQUNDLFNBQVM7WUFDeEIsRUFBRUE7UUFDSjtRQUVBLElBQUlBLFlBQVlELE1BQU1HLE1BQU0sRUFBRTtZQUM1QjtRQUNGO1FBRUEsTUFBTUMsbUJBQW1CSixLQUFLLENBQUNDLFNBQVM7UUFDeEMsRUFBRUE7UUFFRixJQUFJRyxxQkFBcUIsTUFBTTtZQUM3QixJQUFJSCxZQUFZRCxNQUFNRyxNQUFNLEVBQUU7Z0JBQzVCRCxTQUFTO2dCQUNUO1lBQ0Y7WUFFQUEsU0FBU0YsS0FBSyxDQUFDQyxTQUFTO1lBQ3hCLEVBQUVBO1FBQ0osT0FBTztZQUNMO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFBQ0M7UUFBT0Q7S0FBUztBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FsYXNrYS13YWl0bGlzdC1hcGkvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi91dGlscy5qcz82ODkyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLnJlbW92ZUxlYWRpbmdBbmRUcmFpbGluZ0hUVFBXaGl0ZXNwYWNlID0gc3RyaW5nID0+IHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9eWyBcXHRcXG5cXHJdKy91LCBcIlwiKS5yZXBsYWNlKC9bIFxcdFxcblxccl0rJC91LCBcIlwiKTtcbn07XG5cbmV4cG9ydHMucmVtb3ZlVHJhaWxpbmdIVFRQV2hpdGVzcGFjZSA9IHN0cmluZyA9PiB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZSgvWyBcXHRcXG5cXHJdKyQvdSwgXCJcIik7XG59O1xuXG5leHBvcnRzLmlzSFRUUFdoaXRlc3BhY2VDaGFyID0gY2hhciA9PiB7XG4gIHJldHVybiBjaGFyID09PSBcIiBcIiB8fCBjaGFyID09PSBcIlxcdFwiIHx8IGNoYXIgPT09IFwiXFxuXCIgfHwgY2hhciA9PT0gXCJcXHJcIjtcbn07XG5cbmV4cG9ydHMuc29sZWx5Q29udGFpbnNIVFRQVG9rZW5Db2RlUG9pbnRzID0gc3RyaW5nID0+IHtcbiAgcmV0dXJuIC9eWy0hIyQlJicqKy5eX2B8fkEtWmEtejAtOV0qJC91LnRlc3Qoc3RyaW5nKTtcbn07XG5cbmV4cG9ydHMuc29sZXlDb250YWluc0hUVFBRdW90ZWRTdHJpbmdUb2tlbkNvZGVQb2ludHMgPSBzdHJpbmcgPT4ge1xuICByZXR1cm4gL15bXFx0XFx1MDAyMC1cXHUwMDdFXFx1MDA4MC1cXHUwMEZGXSokL3UudGVzdChzdHJpbmcpO1xufTtcblxuZXhwb3J0cy5hc2NpaUxvd2VyY2FzZSA9IHN0cmluZyA9PiB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZSgvW0EtWl0vdWcsIGwgPT4gbC50b0xvd2VyQ2FzZSgpKTtcbn07XG5cbi8vIFRoaXMgdmFyaWFudCBvbmx5IGltcGxlbWVudHMgaXQgd2l0aCB0aGUgZXh0cmFjdC12YWx1ZSBmbGFnIHNldC5cbmV4cG9ydHMuY29sbGVjdEFuSFRUUFF1b3RlZFN0cmluZyA9IChpbnB1dCwgcG9zaXRpb24pID0+IHtcbiAgbGV0IHZhbHVlID0gXCJcIjtcblxuICBwb3NpdGlvbisrO1xuXG4gIHdoaWxlICh0cnVlKSB7XG4gICAgd2hpbGUgKHBvc2l0aW9uIDwgaW5wdXQubGVuZ3RoICYmIGlucHV0W3Bvc2l0aW9uXSAhPT0gXCJcXFwiXCIgJiYgaW5wdXRbcG9zaXRpb25dICE9PSBcIlxcXFxcIikge1xuICAgICAgdmFsdWUgKz0gaW5wdXRbcG9zaXRpb25dO1xuICAgICAgKytwb3NpdGlvbjtcbiAgICB9XG5cbiAgICBpZiAocG9zaXRpb24gPj0gaW5wdXQubGVuZ3RoKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBjb25zdCBxdW90ZU9yQmFja3NsYXNoID0gaW5wdXRbcG9zaXRpb25dO1xuICAgICsrcG9zaXRpb247XG5cbiAgICBpZiAocXVvdGVPckJhY2tzbGFzaCA9PT0gXCJcXFxcXCIpIHtcbiAgICAgIGlmIChwb3NpdGlvbiA+PSBpbnB1dC5sZW5ndGgpIHtcbiAgICAgICAgdmFsdWUgKz0gXCJcXFxcXCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICB2YWx1ZSArPSBpbnB1dFtwb3NpdGlvbl07XG4gICAgICArK3Bvc2l0aW9uO1xuICAgIH0gZWxzZSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gW3ZhbHVlLCBwb3NpdGlvbl07XG59O1xuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJyZW1vdmVMZWFkaW5nQW5kVHJhaWxpbmdIVFRQV2hpdGVzcGFjZSIsInN0cmluZyIsInJlcGxhY2UiLCJyZW1vdmVUcmFpbGluZ0hUVFBXaGl0ZXNwYWNlIiwiaXNIVFRQV2hpdGVzcGFjZUNoYXIiLCJjaGFyIiwic29sZWx5Q29udGFpbnNIVFRQVG9rZW5Db2RlUG9pbnRzIiwidGVzdCIsInNvbGV5Q29udGFpbnNIVFRQUXVvdGVkU3RyaW5nVG9rZW5Db2RlUG9pbnRzIiwiYXNjaWlMb3dlcmNhc2UiLCJsIiwidG9Mb3dlckNhc2UiLCJjb2xsZWN0QW5IVFRQUXVvdGVkU3RyaW5nIiwiaW5wdXQiLCJwb3NpdGlvbiIsInZhbHVlIiwibGVuZ3RoIiwicXVvdGVPckJhY2tzbGFzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/whatwg-mimetype/lib/utils.js\n");

/***/ })

};
;